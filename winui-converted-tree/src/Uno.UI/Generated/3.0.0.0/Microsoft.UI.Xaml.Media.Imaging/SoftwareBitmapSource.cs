// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Media.Imaging
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SoftwareBitmapSource : global::Microsoft.UI.Xaml.Media.ImageSource, global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SoftwareBitmapSource()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource", "SoftwareBitmapSource.SoftwareBitmapSource()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.SoftwareBitmapSource()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.operator ==(Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource, Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.operator !=(Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource, Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.Equals(Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.WinRT.IWinRTObject.NativeObject.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetBitmapAsync(global::Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction SoftwareBitmapSource.SetBitmapAsync(SoftwareBitmap softwareBitmap) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20SoftwareBitmapSource.SetBitmapAsync%28SoftwareBitmap%20softwareBitmap%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource", "void SoftwareBitmapSource.Dispose()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.SoftwareBitmapSource.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
