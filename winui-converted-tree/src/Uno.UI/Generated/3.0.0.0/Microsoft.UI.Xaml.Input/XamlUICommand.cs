// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Input
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class XamlUICommand : global::Microsoft.UI.Xaml.DependencyObject, global::System.Windows.Input.ICommand
	{
		// Skipping already declared property AccessKeyProperty
		// Skipping already declared property CommandProperty
		// Skipping already declared property DescriptionProperty
		// Skipping already declared property IconSourceProperty
		// Skipping already declared property KeyboardAcceleratorsProperty
		// Skipping already declared property LabelProperty
		// Skipping already declared property AccessKey
		// Skipping already declared property Command
		// Skipping already declared property Description
		// Skipping already declared property IconSource
		// Skipping already declared property KeyboardAccelerators
		// Skipping already declared property Label
		// Skipping already declared method Microsoft.UI.Xaml.Input.XamlUICommand.XamlUICommand()
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.XamlUICommand()
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.As<I>()
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.AccessKeyProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.CommandProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.DescriptionProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.IconSourceProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAcceleratorsProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.LabelProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.XamlUICommand(WinRT.IObjectReference)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.operator ==(Microsoft.UI.Xaml.Input.XamlUICommand, Microsoft.UI.Xaml.Input.XamlUICommand)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.operator !=(Microsoft.UI.Xaml.Input.XamlUICommand, Microsoft.UI.Xaml.Input.XamlUICommand)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Equals(Microsoft.UI.Xaml.Input.XamlUICommand)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.XamlUICommand(WinRT.DerivedComposed)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.WinRT.IWinRTObject.NativeObject.get
		// Skipping already declared method Microsoft.UI.Xaml.Input.XamlUICommand.NotifyCanExecuteChanged()
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteRequested.add
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteRequested.remove
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.ExecuteRequested.add
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.ExecuteRequested.remove
		// Skipping already declared method Microsoft.UI.Xaml.Input.XamlUICommand.CanExecute(object)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.System.Windows.Input.ICommand.CanExecute(object)
		// Skipping already declared method Microsoft.UI.Xaml.Input.XamlUICommand.Execute(object)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.System.Windows.Input.ICommand.Execute(object)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteChanged.add
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteChanged.remove
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.System.Windows.Input.ICommand.CanExecuteChanged.add
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.System.Windows.Input.ICommand.CanExecuteChanged.remove
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.AccessKey.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.AccessKey.set
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Command.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Command.set
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Description.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Description.set
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.IconSource.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.IconSource.set
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.KeyboardAccelerators.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Label.get
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.Label.set
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Input.XamlUICommand.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Skipping already declared event Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteRequested
		// Skipping already declared event Microsoft.UI.Xaml.Input.XamlUICommand.ExecuteRequested
		// Skipping already declared event Microsoft.UI.Xaml.Input.XamlUICommand.CanExecuteChanged
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		event global::System.EventHandler global::System.Windows.Input.ICommand.CanExecuteChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Input.XamlUICommand", "event EventHandler XamlUICommand.CanExecuteChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Input.XamlUICommand", "event EventHandler XamlUICommand.CanExecuteChanged");
			}
		}
#endif
		// Processing: System.Windows.Input.ICommand
	}
}
