// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Input
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct CrossSlideThresholds
	{
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.CrossSlideThresholds()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public CrossSlideThresholds(float _SelectionStart, float _SpeedBumpStart, float _SpeedBumpEnd, float _RearrangeStart)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Input.CrossSlideThresholds", "CrossSlideThresholds.CrossSlideThresholds(float _SelectionStart, float _SpeedBumpStart, float _SpeedBumpEnd, float _RearrangeStart)");
		}
#endif
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.CrossSlideThresholds(float, float, float, float)
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.operator ==(Microsoft.UI.Input.CrossSlideThresholds, Microsoft.UI.Input.CrossSlideThresholds)
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.operator !=(Microsoft.UI.Input.CrossSlideThresholds, Microsoft.UI.Input.CrossSlideThresholds)
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.Equals(Microsoft.UI.Input.CrossSlideThresholds)
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.Equals(object)
		// Forced skipping of method Microsoft.UI.Input.CrossSlideThresholds.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float SelectionStart;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float SpeedBumpStart;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float SpeedBumpEnd;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float RearrangeStart;
#endif
	}
}
