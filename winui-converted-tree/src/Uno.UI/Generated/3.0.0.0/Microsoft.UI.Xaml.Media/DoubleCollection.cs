// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Media
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class DoubleCollection : global::System.Collections.Generic.IList<double>, global::System.Collections.Generic.ICollection<double>, global::System.Collections.Generic.IEnumerable<double>, global::System.Collections.IEnumerable
	{
		// Skipping already declared property Count
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsReadOnly
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool DoubleCollection.IsReadOnly is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20DoubleCollection.IsReadOnly");
			}
		}
#endif
		// Skipping already declared property this[]
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.DoubleCollection()
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.DoubleCollection()
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.operator ==(Microsoft.UI.Xaml.Media.DoubleCollection, Microsoft.UI.Xaml.Media.DoubleCollection)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.operator !=(Microsoft.UI.Xaml.Media.DoubleCollection, Microsoft.UI.Xaml.Media.DoubleCollection)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.Equals(Microsoft.UI.Xaml.Media.DoubleCollection)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.Count.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.IsReadOnly.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.this[int].get
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.this[int].set
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.IndexOf(double)
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.Insert(int, double)
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.RemoveAt(int)
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.Add(double)
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.Clear()
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.Contains(double)
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.CopyTo(double[], int)
		// Skipping already declared method Microsoft.UI.Xaml.Media.DoubleCollection.Remove(double)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IEnumerator<double> GetEnumerator()
		{
			throw new global::System.NotImplementedException("The member IEnumerator<double> DoubleCollection.GetEnumerator() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IEnumerator%3Cdouble%3E%20DoubleCollection.GetEnumerator%28%29");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.System.Collections.IEnumerable.GetEnumerator()
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.System.Collections.Generic.IList<double>.get_Item(int)
		// Forced skipping of method Microsoft.UI.Xaml.Media.DoubleCollection.System.Collections.Generic.IList<double>.set_Item(int, double)
		// Processing: System.Collections.Generic.IList<double>
		// Processing: System.Collections.Generic.ICollection<double>
		// Processing: System.Collections.Generic.IEnumerable<double>
		// Processing: System.Collections.IEnumerable
	}
}
