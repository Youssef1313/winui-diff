// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Media.Animation
{
	[global::Microsoft.UI.Xaml.Markup.ContentPropertyAttribute(Name = "Storyboard")]
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class BeginStoryboard : global::Microsoft.UI.Xaml.TriggerAction
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty StoryboardProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(Storyboard), typeof(global::Microsoft.UI.Xaml.Media.Animation.Storyboard),
			typeof(global::Microsoft.UI.Xaml.Media.Animation.BeginStoryboard),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Media.Animation.Storyboard)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.Media.Animation.Storyboard Storyboard
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Media.Animation.Storyboard)this.GetValue(StoryboardProperty);
			}
			set
			{
				this.SetValue(StoryboardProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public BeginStoryboard()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.BeginStoryboard", "BeginStoryboard.BeginStoryboard()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.BeginStoryboard()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.As<I>()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.StoryboardProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.operator ==(Microsoft.UI.Xaml.Media.Animation.BeginStoryboard, Microsoft.UI.Xaml.Media.Animation.BeginStoryboard)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.operator !=(Microsoft.UI.Xaml.Media.Animation.BeginStoryboard, Microsoft.UI.Xaml.Media.Animation.BeginStoryboard)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Equals(Microsoft.UI.Xaml.Media.Animation.BeginStoryboard)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.Storyboard.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.BeginStoryboard.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
