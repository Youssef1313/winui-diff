// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Media.Animation
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ConnectedAnimation
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ConnectedAnimation()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration Configuration
		{
			get
			{
				throw new global::System.NotImplementedException("The member ConnectedAnimationConfiguration ConnectedAnimation.Configuration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ConnectedAnimationConfiguration%20ConnectedAnimation.Configuration");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation", "ConnectedAnimationConfiguration ConnectedAnimation.Configuration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsScaleAnimationEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ConnectedAnimation.IsScaleAnimationEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConnectedAnimation.IsScaleAnimationEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation", "bool ConnectedAnimation.IsScaleAnimationEnabled");
			}
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.operator ==(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.operator !=(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Equals(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TryStart(global::Microsoft.UI.Xaml.UIElement destination)
		{
			throw new global::System.NotImplementedException("The member bool ConnectedAnimation.TryStart(UIElement destination) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConnectedAnimation.TryStart%28UIElement%20destination%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TryStart(global::Microsoft.UI.Xaml.UIElement destination, global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.UIElement> coordinatedElements)
		{
			throw new global::System.NotImplementedException("The member bool ConnectedAnimation.TryStart(UIElement destination, IEnumerable<UIElement> coordinatedElements) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConnectedAnimation.TryStart%28UIElement%20destination%2C%20IEnumerable%3CUIElement%3E%20coordinatedElements%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Cancel()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation", "void ConnectedAnimation.Cancel()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetAnimationComponent(global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent component, global::Microsoft.UI.Composition.ICompositionAnimationBase animation)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation", "void ConnectedAnimation.SetAnimationComponent(ConnectedAnimationComponent component, ICompositionAnimationBase animation)");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Completed.add
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Completed.remove
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Configuration.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.Configuration.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.IsScaleAnimationEnabled.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.IsScaleAnimationEnabled.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation, object> Completed
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation", "event TypedEventHandler<ConnectedAnimation, object> ConnectedAnimation.Completed");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation", "event TypedEventHandler<ConnectedAnimation, object> ConnectedAnimation.Completed");
			}
		}
#endif
	}
}
