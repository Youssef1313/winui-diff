// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ScalarTransition
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan Duration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ScalarTransition.Duration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ScalarTransition.Duration");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.ScalarTransition", "TimeSpan ScalarTransition.Duration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ScalarTransition()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.ScalarTransition", "ScalarTransition.ScalarTransition()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.ScalarTransition()
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.ScalarTransition(WinRT.IObjectReference)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.operator ==(Microsoft.UI.Xaml.ScalarTransition, Microsoft.UI.Xaml.ScalarTransition)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.operator !=(Microsoft.UI.Xaml.ScalarTransition, Microsoft.UI.Xaml.ScalarTransition)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.Equals(Microsoft.UI.Xaml.ScalarTransition)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.ScalarTransition(WinRT.DerivedComposed)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.Duration.get
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.Duration.set
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.ScalarTransition.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
