// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class Application
	{
		// Skipping already declared property Current
		// Skipping already declared property DebugSettings
		// Skipping already declared property FocusVisualKind
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.ApplicationHighContrastAdjustment HighContrastAdjustment
		{
			get
			{
				throw new global::System.NotImplementedException("The member ApplicationHighContrastAdjustment Application.HighContrastAdjustment is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ApplicationHighContrastAdjustment%20Application.HighContrastAdjustment");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Application", "ApplicationHighContrastAdjustment Application.HighContrastAdjustment");
			}
		}
#endif
		// Skipping already declared property RequestedTheme
		// Skipping already declared property Resources
		// Skipping already declared method Microsoft.UI.Xaml.Application.Application()
		// Forced skipping of method Microsoft.UI.Xaml.Application.Application()
		// Forced skipping of method Microsoft.UI.Xaml.Application.As<I>()
		// Skipping already declared method Microsoft.UI.Xaml.Application.Start(Microsoft.UI.Xaml.ApplicationInitializationCallback)
		// Skipping already declared method Microsoft.UI.Xaml.Application.LoadComponent(object, System.Uri)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void LoadComponent(object component, global::System.Uri resourceLocator, global::Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Application", "void Application.LoadComponent(object component, Uri resourceLocator, ComponentResourceLocation componentResourceLocation)");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Application.Current.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Application.Application(WinRT.IObjectReference)
		// Forced skipping of method Microsoft.UI.Xaml.Application.operator ==(Microsoft.UI.Xaml.Application, Microsoft.UI.Xaml.Application)
		// Forced skipping of method Microsoft.UI.Xaml.Application.operator !=(Microsoft.UI.Xaml.Application, Microsoft.UI.Xaml.Application)
		// Forced skipping of method Microsoft.UI.Xaml.Application.Equals(Microsoft.UI.Xaml.Application)
		// Forced skipping of method Microsoft.UI.Xaml.Application.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Application.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Application.Application(WinRT.DerivedComposed)
		// Forced skipping of method Microsoft.UI.Xaml.Application.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.WinRT.IWinRTObject.AdditionalTypeData.get
		// Skipping already declared method Microsoft.UI.Xaml.Application.Exit()
		// Forced skipping of method Microsoft.UI.Xaml.Application.UnhandledException.add
		// Forced skipping of method Microsoft.UI.Xaml.Application.UnhandledException.remove
		// Skipping already declared method Microsoft.UI.Xaml.Application.OnLaunched(Microsoft.UI.Xaml.LaunchActivatedEventArgs)
		// Forced skipping of method Microsoft.UI.Xaml.Application.Microsoft.UI.Xaml.IApplicationOverrides.OnLaunched(Microsoft.UI.Xaml.LaunchActivatedEventArgs)
		// Forced skipping of method Microsoft.UI.Xaml.Application.DebugSettings.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.FocusVisualKind.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.FocusVisualKind.set
		// Forced skipping of method Microsoft.UI.Xaml.Application.HighContrastAdjustment.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.HighContrastAdjustment.set
		// Forced skipping of method Microsoft.UI.Xaml.Application.RequestedTheme.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.RequestedTheme.set
		// Forced skipping of method Microsoft.UI.Xaml.Application.Resources.get
		// Forced skipping of method Microsoft.UI.Xaml.Application.Resources.set
		// Forced skipping of method Microsoft.UI.Xaml.Application.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Application.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Skipping already declared event Microsoft.UI.Xaml.Application.UnhandledException
	}
}
