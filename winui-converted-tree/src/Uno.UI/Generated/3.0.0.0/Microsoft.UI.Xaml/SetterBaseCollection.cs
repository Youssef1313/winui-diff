// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class SetterBaseCollection : global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.SetterBase>, global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.SetterBase>, global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.SetterBase>, global::System.Collections.IEnumerable
	{
		// Skipping already declared property Count
		// Skipping already declared property IsReadOnly
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.SetterBase this[int index]
		{
			get
			{
				throw new global::System.NotImplementedException("The member SetterBase SetterBaseCollection.this[int index] is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SetterBase%20SetterBaseCollection.this%5Bint%20index%5D");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.SetterBaseCollection", "SetterBase SetterBaseCollection.this[int index]");
			}
		}
#endif
		// Skipping already declared property IsSealed
		// Skipping already declared method Microsoft.UI.Xaml.SetterBaseCollection.SetterBaseCollection()
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.SetterBaseCollection()
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.operator ==(Microsoft.UI.Xaml.SetterBaseCollection, Microsoft.UI.Xaml.SetterBaseCollection)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.operator !=(Microsoft.UI.Xaml.SetterBaseCollection, Microsoft.UI.Xaml.SetterBaseCollection)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.Equals(Microsoft.UI.Xaml.SetterBaseCollection)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.Count.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.IsReadOnly.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.this[int].get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.this[int].set
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int IndexOf(global::Microsoft.UI.Xaml.SetterBase item)
		{
			throw new global::System.NotImplementedException("The member int SetterBaseCollection.IndexOf(SetterBase item) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SetterBaseCollection.IndexOf%28SetterBase%20item%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Insert(int index, global::Microsoft.UI.Xaml.SetterBase item)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.SetterBaseCollection", "void SetterBaseCollection.Insert(int index, SetterBase item)");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.SetterBaseCollection.RemoveAt(int)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Add(global::Microsoft.UI.Xaml.SetterBase item)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.SetterBaseCollection", "void SetterBaseCollection.Add(SetterBase item)");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.SetterBaseCollection.Clear()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Contains(global::Microsoft.UI.Xaml.SetterBase item)
		{
			throw new global::System.NotImplementedException("The member bool SetterBaseCollection.Contains(SetterBase item) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SetterBaseCollection.Contains%28SetterBase%20item%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void CopyTo(global::Microsoft.UI.Xaml.SetterBase[] array, int arrayIndex)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.SetterBaseCollection", "void SetterBaseCollection.CopyTo(SetterBase[] array, int arrayIndex)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Remove(global::Microsoft.UI.Xaml.SetterBase item)
		{
			throw new global::System.NotImplementedException("The member bool SetterBaseCollection.Remove(SetterBase item) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SetterBaseCollection.Remove%28SetterBase%20item%29");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.SetterBaseCollection.GetEnumerator()
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.System.Collections.IEnumerable.GetEnumerator()
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.IsSealed.get
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.System.Collections.Generic.IList<Microsoft.UI.Xaml.SetterBase>.get_Item(int)
		// Forced skipping of method Microsoft.UI.Xaml.SetterBaseCollection.System.Collections.Generic.IList<Microsoft.UI.Xaml.SetterBase>.set_Item(int, Microsoft.UI.Xaml.SetterBase)
		// Processing: System.Collections.Generic.IList<Microsoft.UI.Xaml.SetterBase>
		// Processing: System.Collections.Generic.ICollection<Microsoft.UI.Xaml.SetterBase>
		// Processing: System.Collections.Generic.IEnumerable<Microsoft.UI.Xaml.SetterBase>
		// Processing: System.Collections.IEnumerable
	}
}
