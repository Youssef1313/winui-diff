// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class ItemCollection : global::Windows.Foundation.Collections.IObservableVector<object>, global::System.Collections.Generic.IList<object>, global::System.Collections.Generic.ICollection<object>, global::System.Collections.Generic.IEnumerable<object>, global::System.Collections.IEnumerable
	{
		// Skipping already declared property Count
		// Skipping already declared property IsReadOnly
		// Skipping already declared property this[]
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.operator ==(Microsoft.UI.Xaml.Controls.ItemCollection, Microsoft.UI.Xaml.Controls.ItemCollection)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.operator !=(Microsoft.UI.Xaml.Controls.ItemCollection, Microsoft.UI.Xaml.Controls.ItemCollection)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.Equals(Microsoft.UI.Xaml.Controls.ItemCollection)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.VectorChanged.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.VectorChanged.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.Windows.Foundation.Collections.IObservableVector<object>.VectorChanged.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.Windows.Foundation.Collections.IObservableVector<object>.VectorChanged.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.Count.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.IsReadOnly.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.this[int].get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.this[int].set
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.IndexOf(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.Insert(int, object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.RemoveAt(int)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.Add(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.Clear()
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.Contains(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.CopyTo(object[], int)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.Remove(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.ItemCollection.GetEnumerator()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.System.Collections.IEnumerable.GetEnumerator()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.System.Collections.Generic.IList<object>.get_Item(int)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.ItemCollection.System.Collections.Generic.IList<object>.set_Item(int, object)
		// Skipping already declared event Microsoft.UI.Xaml.Controls.ItemCollection.VectorChanged
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		event global::Windows.Foundation.Collections.VectorChangedEventHandler<object> global::Windows.Foundation.Collections.IObservableVector<object>.VectorChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.ItemCollection", "event VectorChangedEventHandler<object> ItemCollection.VectorChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.ItemCollection", "event VectorChangedEventHandler<object> ItemCollection.VectorChanged");
			}
		}
#endif
		// Processing: Windows.Foundation.Collections.IObservableVector<object>
		// Processing: System.Collections.Generic.IList<object>
		// Processing: System.Collections.Generic.ICollection<object>
		// Processing: System.Collections.Generic.IEnumerable<object>
		// Processing: System.Collections.IEnumerable
	}
}
