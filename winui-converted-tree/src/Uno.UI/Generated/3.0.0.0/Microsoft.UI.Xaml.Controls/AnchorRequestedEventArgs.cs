// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AnchorRequestedEventArgs
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AnchorRequestedEventArgs()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.UIElement Anchor
		{
			get
			{
				throw new global::System.NotImplementedException("The member UIElement AnchorRequestedEventArgs.Anchor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=UIElement%20AnchorRequestedEventArgs.Anchor");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs", "UIElement AnchorRequestedEventArgs.Anchor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.UIElement> AnchorCandidates
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<UIElement> AnchorRequestedEventArgs.AnchorCandidates is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CUIElement%3E%20AnchorRequestedEventArgs.AnchorCandidates");
			}
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.operator ==(Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs, Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.operator !=(Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs, Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.Equals(Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.Anchor.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.Anchor.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.AnchorCandidates.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnchorRequestedEventArgs.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
