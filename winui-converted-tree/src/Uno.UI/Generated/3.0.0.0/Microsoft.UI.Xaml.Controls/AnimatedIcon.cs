// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
	[global::Microsoft.UI.Xaml.Markup.ContentPropertyAttribute(Name = "Source")]
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class AnimatedIcon : global::Microsoft.UI.Xaml.Controls.IconElement
	{
		// Skipping already declared property FallbackIconSourceProperty
		// Skipping already declared property MirroredWhenRightToLeftProperty
		// Skipping already declared property SourceProperty
		// Skipping already declared property StateProperty
		// Skipping already declared property FallbackIconSource
		// Skipping already declared property MirroredWhenRightToLeft
		// Skipping already declared property Source
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AnimatedIcon.AnimatedIcon()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.AnimatedIcon()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.As<I>()
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AnimatedIcon.SetState(Microsoft.UI.Xaml.DependencyObject, string)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AnimatedIcon.GetState(Microsoft.UI.Xaml.DependencyObject)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.FallbackIconSourceProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.MirroredWhenRightToLeftProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.SourceProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.StateProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.AnimatedIcon(WinRT.IObjectReference)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.operator ==(Microsoft.UI.Xaml.Controls.AnimatedIcon, Microsoft.UI.Xaml.Controls.AnimatedIcon)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.operator !=(Microsoft.UI.Xaml.Controls.AnimatedIcon, Microsoft.UI.Xaml.Controls.AnimatedIcon)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.Equals(Microsoft.UI.Xaml.Controls.AnimatedIcon)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.AnimatedIcon(WinRT.DerivedComposed)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.FallbackIconSource.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.FallbackIconSource.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.MirroredWhenRightToLeft.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.MirroredWhenRightToLeft.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.Source.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.Source.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AnimatedIcon.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
