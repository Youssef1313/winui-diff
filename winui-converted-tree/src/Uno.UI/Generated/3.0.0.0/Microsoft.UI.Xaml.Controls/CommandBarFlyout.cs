// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
	[global::Microsoft.UI.Xaml.Markup.ContentPropertyAttribute(Name = "PrimaryCommands")]
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class CommandBarFlyout : global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AlwaysExpanded
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CommandBarFlyout.AlwaysExpanded is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CommandBarFlyout.AlwaysExpanded");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.CommandBarFlyout", "bool CommandBarFlyout.AlwaysExpanded");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Controls.ICommandBarElement> PrimaryCommands
		{
			get
			{
				throw new global::System.NotImplementedException("The member IObservableVector<ICommandBarElement> CommandBarFlyout.PrimaryCommands is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IObservableVector%3CICommandBarElement%3E%20CommandBarFlyout.PrimaryCommands");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Controls.ICommandBarElement> SecondaryCommands
		{
			get
			{
				throw new global::System.NotImplementedException("The member IObservableVector<ICommandBarElement> CommandBarFlyout.SecondaryCommands is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IObservableVector%3CICommandBarElement%3E%20CommandBarFlyout.SecondaryCommands");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public CommandBarFlyout() : base()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.CommandBarFlyout", "CommandBarFlyout.CommandBarFlyout()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.CommandBarFlyout()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.CommandBarFlyout(WinRT.IObjectReference)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.operator ==(Microsoft.UI.Xaml.Controls.CommandBarFlyout, Microsoft.UI.Xaml.Controls.CommandBarFlyout)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.operator !=(Microsoft.UI.Xaml.Controls.CommandBarFlyout, Microsoft.UI.Xaml.Controls.CommandBarFlyout)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.Equals(Microsoft.UI.Xaml.Controls.CommandBarFlyout)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.CommandBarFlyout(WinRT.DerivedComposed)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.AlwaysExpanded.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.AlwaysExpanded.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.PrimaryCommands.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.SecondaryCommands.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.CommandBarFlyout.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
