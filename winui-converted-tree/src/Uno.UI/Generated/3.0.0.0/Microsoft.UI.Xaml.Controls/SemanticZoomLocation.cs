// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SemanticZoomLocation
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Rect Bounds
		{
			get
			{
				throw new global::System.NotImplementedException("The member Rect SemanticZoomLocation.Bounds is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Rect%20SemanticZoomLocation.Bounds");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.SemanticZoomLocation", "Rect SemanticZoomLocation.Bounds");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public object Item
		{
			get
			{
				throw new global::System.NotImplementedException("The member object SemanticZoomLocation.Item is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20SemanticZoomLocation.Item");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.SemanticZoomLocation", "object SemanticZoomLocation.Item");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SemanticZoomLocation()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.SemanticZoomLocation", "SemanticZoomLocation.SemanticZoomLocation()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.SemanticZoomLocation()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.operator ==(Microsoft.UI.Xaml.Controls.SemanticZoomLocation, Microsoft.UI.Xaml.Controls.SemanticZoomLocation)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.operator !=(Microsoft.UI.Xaml.Controls.SemanticZoomLocation, Microsoft.UI.Xaml.Controls.SemanticZoomLocation)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Equals(Microsoft.UI.Xaml.Controls.SemanticZoomLocation)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Bounds.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Bounds.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Item.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.Item.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.SemanticZoomLocation.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
