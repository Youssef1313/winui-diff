// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Automation.Peers
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ProgressRingAutomationPeer : global::Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		bool global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.IsReadOnly
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ProgressRingAutomationPeer.IsReadOnly is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ProgressRingAutomationPeer.IsReadOnly");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.LargeChange
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.LargeChange is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.LargeChange");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Maximum
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.Maximum is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.Maximum");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Minimum
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.Minimum is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.Minimum");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SmallChange
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.SmallChange is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.SmallChange");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		double global::Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Value
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.Value is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.Value");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsReadOnly
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ProgressRingAutomationPeer.IsReadOnly is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ProgressRingAutomationPeer.IsReadOnly");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double LargeChange
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.LargeChange is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.LargeChange");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double Maximum
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.Maximum is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.Maximum");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double Minimum
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.Minimum is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.Minimum");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double SmallChange
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.SmallChange is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.SmallChange");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double Value
		{
			get
			{
				throw new global::System.NotImplementedException("The member double ProgressRingAutomationPeer.Value is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20ProgressRingAutomationPeer.Value");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ProgressRingAutomationPeer(global::Microsoft.UI.Xaml.Controls.ProgressRing owner) : base(owner)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer", "ProgressRingAutomationPeer.ProgressRingAutomationPeer(ProgressRing owner)");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.ProgressRingAutomationPeer(Microsoft.UI.Xaml.Controls.ProgressRing)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.FromAbi(nint)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.ProgressRingAutomationPeer(WinRT.IObjectReference)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.operator ==(Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer, Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.operator !=(Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer, Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Equals(Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Equals(object)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.GetHashCode()
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.ProgressRingAutomationPeer(WinRT.DerivedComposed)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.WinRT.IWinRTObject.NativeObject.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetValue(double value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer", "void ProgressRingAutomationPeer.SetValue(double value)");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SetValue(double)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.IsReadOnly.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.LargeChange.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Maximum.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Minimum.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.SmallChange.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider.Value.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.IsReadOnly.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.LargeChange.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Maximum.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Minimum.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.SmallChange.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.Value.get
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.IsOverridableInterface(System.Guid)
		// Forced skipping of method Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
	}
}
