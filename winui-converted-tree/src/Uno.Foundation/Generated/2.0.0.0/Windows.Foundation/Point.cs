// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Foundation
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial struct Point
	{
		// Skipping already declared property X
		// Skipping already declared property Y
		// Forced skipping of method Windows.Foundation.Point.Point()
		// Skipping already declared method Windows.Foundation.Point.Point(float, float)
		// Forced skipping of method Windows.Foundation.Point.Point(float, float)
		// Skipping already declared method Windows.Foundation.Point.Point(double, double)
		// Forced skipping of method Windows.Foundation.Point.Point(double, double)
		// Forced skipping of method Windows.Foundation.Point.X.get
		// Forced skipping of method Windows.Foundation.Point.X.set
		// Forced skipping of method Windows.Foundation.Point.Y.get
		// Forced skipping of method Windows.Foundation.Point.Y.set
		// Skipping already declared method Windows.Foundation.Point.ToString()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ToString(global::System.IFormatProvider provider)
		{
			throw new global::System.NotImplementedException("The member string Point.ToString(IFormatProvider provider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Point.ToString%28IFormatProvider%20provider%29");
		}
#endif
		// Forced skipping of method Windows.Foundation.Point.System.IFormattable.ToString(string, System.IFormatProvider)
		// Forced skipping of method Windows.Foundation.Point.operator ==(Windows.Foundation.Point, Windows.Foundation.Point)
		// Forced skipping of method Windows.Foundation.Point.operator !=(Windows.Foundation.Point, Windows.Foundation.Point)
		// Forced skipping of method Windows.Foundation.Point.Equals(object)
		// Forced skipping of method Windows.Foundation.Point.Equals(Windows.Foundation.Point)
		// Forced skipping of method Windows.Foundation.Point.GetHashCode()
	}
}
