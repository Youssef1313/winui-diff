// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Foundation
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class Deferral : global::System.IDisposable
	{
		// Skipping already declared method Windows.Foundation.Deferral.Deferral(Windows.Foundation.DeferralCompletedHandler)
		// Forced skipping of method Windows.Foundation.Deferral.Deferral(Windows.Foundation.DeferralCompletedHandler)
		// Forced skipping of method Windows.Foundation.Deferral.FromAbi(nint)
		// Forced skipping of method Windows.Foundation.Deferral.operator ==(Windows.Foundation.Deferral, Windows.Foundation.Deferral)
		// Forced skipping of method Windows.Foundation.Deferral.operator !=(Windows.Foundation.Deferral, Windows.Foundation.Deferral)
		// Forced skipping of method Windows.Foundation.Deferral.Equals(Windows.Foundation.Deferral)
		// Forced skipping of method Windows.Foundation.Deferral.Equals(object)
		// Forced skipping of method Windows.Foundation.Deferral.GetHashCode()
		// Forced skipping of method Windows.Foundation.Deferral.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Foundation.Deferral.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Foundation.Deferral.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Foundation.Deferral.WinRT.IWinRTObject.AdditionalTypeData.get
		// Skipping already declared method Windows.Foundation.Deferral.Complete()
		// Skipping already declared method Windows.Foundation.Deferral.Dispose()
		// Forced skipping of method Windows.Foundation.Deferral.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
