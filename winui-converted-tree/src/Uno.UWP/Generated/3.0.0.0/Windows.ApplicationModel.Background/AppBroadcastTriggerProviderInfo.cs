// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Background
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppBroadcastTriggerProviderInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppBroadcastTriggerProviderInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayNameResource
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastTriggerProviderInfo.DisplayNameResource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastTriggerProviderInfo.DisplayNameResource");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo", "string AppBroadcastTriggerProviderInfo.DisplayNameResource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string LogoResource
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastTriggerProviderInfo.LogoResource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastTriggerProviderInfo.LogoResource");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo", "string AppBroadcastTriggerProviderInfo.LogoResource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint MaxVideoBitrate
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastTriggerProviderInfo.MaxVideoBitrate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastTriggerProviderInfo.MaxVideoBitrate");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo", "uint AppBroadcastTriggerProviderInfo.MaxVideoBitrate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint MaxVideoHeight
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastTriggerProviderInfo.MaxVideoHeight is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastTriggerProviderInfo.MaxVideoHeight");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo", "uint AppBroadcastTriggerProviderInfo.MaxVideoHeight");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint MaxVideoWidth
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastTriggerProviderInfo.MaxVideoWidth is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastTriggerProviderInfo.MaxVideoWidth");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo", "uint AppBroadcastTriggerProviderInfo.MaxVideoWidth");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan VideoKeyFrameInterval
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan AppBroadcastTriggerProviderInfo.VideoKeyFrameInterval is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20AppBroadcastTriggerProviderInfo.VideoKeyFrameInterval");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo", "TimeSpan AppBroadcastTriggerProviderInfo.VideoKeyFrameInterval");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.operator ==(Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo, Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo)
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.operator !=(Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo, Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo)
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.Equals(Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo)
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.DisplayNameResource.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.DisplayNameResource.set
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.LogoResource.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.LogoResource.set
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.MaxVideoBitrate.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.MaxVideoBitrate.set
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.MaxVideoHeight.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.MaxVideoHeight.set
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.MaxVideoWidth.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.MaxVideoWidth.set
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.VideoKeyFrameInterval.get
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.VideoKeyFrameInterval.set
		// Forced skipping of method Windows.ApplicationModel.Background.AppBroadcastTriggerProviderInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
