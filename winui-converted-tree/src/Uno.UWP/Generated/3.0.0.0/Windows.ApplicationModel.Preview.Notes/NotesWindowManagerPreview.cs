// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Preview.Notes
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class NotesWindowManagerPreview
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal NotesWindowManagerPreview()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsScreenLocked
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool NotesWindowManagerPreview.IsScreenLocked is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20NotesWindowManagerPreview.IsScreenLocked");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview GetForCurrentApp()
		{
			throw new global::System.NotImplementedException("The member NotesWindowManagerPreview NotesWindowManagerPreview.GetForCurrentApp() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=NotesWindowManagerPreview%20NotesWindowManagerPreview.GetForCurrentApp%28%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.operator ==(Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview, Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview)
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.operator !=(Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview, Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview)
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.Equals(Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview)
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ShowNote(int noteViewId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.ShowNote(int noteViewId)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ShowNoteRelativeTo(int noteViewId, int anchorNoteViewId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.ShowNoteRelativeTo(int noteViewId, int anchorNoteViewId)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ShowNoteWithPlacement(int noteViewId, global::Windows.Storage.Streams.IBuffer data)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.ShowNoteWithPlacement(int noteViewId, IBuffer data)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void HideNote(int noteViewId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.HideNote(int noteViewId)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer GetNotePlacement(int noteViewId)
		{
			throw new global::System.NotImplementedException("The member IBuffer NotesWindowManagerPreview.GetNotePlacement(int noteViewId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20NotesWindowManagerPreview.GetNotePlacement%28int%20noteViewId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TrySetNoteSize(int noteViewId, global::Windows.Foundation.Size size)
		{
			throw new global::System.NotImplementedException("The member bool NotesWindowManagerPreview.TrySetNoteSize(int noteViewId, Size size) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20NotesWindowManagerPreview.TrySetNoteSize%28int%20noteViewId%2C%20Size%20size%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetFocusToNextView()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.SetFocusToNextView()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetNotesThumbnailAsync(global::Windows.Storage.Streams.IBuffer thumbnail)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction NotesWindowManagerPreview.SetNotesThumbnailAsync(IBuffer thumbnail) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20NotesWindowManagerPreview.SetNotesThumbnailAsync%28IBuffer%20thumbnail%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.NotePlacementChanged.add
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.NotePlacementChanged.remove
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.NoteVisibilityChanged.add
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.NoteVisibilityChanged.remove
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.SystemLockStateChanged.add
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.SystemLockStateChanged.remove
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ShowNoteRelativeTo(int noteViewId, int anchorNoteViewId, global::Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreviewShowNoteOptions options)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.ShowNoteRelativeTo(int noteViewId, int anchorNoteViewId, NotesWindowManagerPreviewShowNoteOptions options)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ShowNoteWithPlacement(int noteViewId, global::Windows.Storage.Streams.IBuffer data, global::Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreviewShowNoteOptions options)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.ShowNoteWithPlacement(int noteViewId, IBuffer data, NotesWindowManagerPreviewShowNoteOptions options)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetFocusToPreviousView()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "void NotesWindowManagerPreview.SetFocusToPreviousView()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetThumbnailImageForTaskSwitcherAsync(global::Windows.Graphics.Imaging.SoftwareBitmap bitmap)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction NotesWindowManagerPreview.SetThumbnailImageForTaskSwitcherAsync(SoftwareBitmap bitmap) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20NotesWindowManagerPreview.SetThumbnailImageForTaskSwitcherAsync%28SoftwareBitmap%20bitmap%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.IsScreenLocked.get
		// Forced skipping of method Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview, global::Windows.ApplicationModel.Preview.Notes.NotePlacementChangedPreviewEventArgs> NotePlacementChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "event TypedEventHandler<NotesWindowManagerPreview, NotePlacementChangedPreviewEventArgs> NotesWindowManagerPreview.NotePlacementChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "event TypedEventHandler<NotesWindowManagerPreview, NotePlacementChangedPreviewEventArgs> NotesWindowManagerPreview.NotePlacementChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview, global::Windows.ApplicationModel.Preview.Notes.NoteVisibilityChangedPreviewEventArgs> NoteVisibilityChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "event TypedEventHandler<NotesWindowManagerPreview, NoteVisibilityChangedPreviewEventArgs> NotesWindowManagerPreview.NoteVisibilityChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "event TypedEventHandler<NotesWindowManagerPreview, NoteVisibilityChangedPreviewEventArgs> NotesWindowManagerPreview.NoteVisibilityChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview, object> SystemLockStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "event TypedEventHandler<NotesWindowManagerPreview, object> NotesWindowManagerPreview.SystemLockStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Preview.Notes.NotesWindowManagerPreview", "event TypedEventHandler<NotesWindowManagerPreview, object> NotesWindowManagerPreview.SystemLockStateChanged");
			}
		}
#endif
	}
}
