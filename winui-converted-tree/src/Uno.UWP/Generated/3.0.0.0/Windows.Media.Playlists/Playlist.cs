// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Playlists
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class Playlist
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Storage.StorageFile> Files
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<StorageFile> Playlist.Files is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CStorageFile%3E%20Playlist.Files");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public Playlist()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playlists.Playlist", "Playlist.Playlist()");
		}
#endif
		// Forced skipping of method Windows.Media.Playlists.Playlist.Playlist()
		// Forced skipping of method Windows.Media.Playlists.Playlist.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Media.Playlists.Playlist> LoadAsync(global::Windows.Storage.IStorageFile file)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<Playlist> Playlist.LoadAsync(IStorageFile file) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CPlaylist%3E%20Playlist.LoadAsync%28IStorageFile%20file%29");
		}
#endif
		// Forced skipping of method Windows.Media.Playlists.Playlist.FromAbi(nint)
		// Forced skipping of method Windows.Media.Playlists.Playlist.operator ==(Windows.Media.Playlists.Playlist, Windows.Media.Playlists.Playlist)
		// Forced skipping of method Windows.Media.Playlists.Playlist.operator !=(Windows.Media.Playlists.Playlist, Windows.Media.Playlists.Playlist)
		// Forced skipping of method Windows.Media.Playlists.Playlist.Equals(Windows.Media.Playlists.Playlist)
		// Forced skipping of method Windows.Media.Playlists.Playlist.Equals(object)
		// Forced skipping of method Windows.Media.Playlists.Playlist.GetHashCode()
		// Forced skipping of method Windows.Media.Playlists.Playlist.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Playlists.Playlist.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Playlists.Playlist.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Playlists.Playlist.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SaveAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction Playlist.SaveAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20Playlist.SaveAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> SaveAsAsync(global::Windows.Storage.IStorageFolder saveLocation, string desiredName, global::Windows.Storage.NameCollisionOption option)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> Playlist.SaveAsAsync(IStorageFolder saveLocation, string desiredName, NameCollisionOption option) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20Playlist.SaveAsAsync%28IStorageFolder%20saveLocation%2C%20string%20desiredName%2C%20NameCollisionOption%20option%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> SaveAsAsync(global::Windows.Storage.IStorageFolder saveLocation, string desiredName, global::Windows.Storage.NameCollisionOption option, global::Windows.Media.Playlists.PlaylistFormat playlistFormat)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> Playlist.SaveAsAsync(IStorageFolder saveLocation, string desiredName, NameCollisionOption option, PlaylistFormat playlistFormat) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20Playlist.SaveAsAsync%28IStorageFolder%20saveLocation%2C%20string%20desiredName%2C%20NameCollisionOption%20option%2C%20PlaylistFormat%20playlistFormat%29");
		}
#endif
		// Forced skipping of method Windows.Media.Playlists.Playlist.Files.get
		// Forced skipping of method Windows.Media.Playlists.Playlist.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
