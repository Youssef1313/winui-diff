// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Enumeration
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class DevicePickerFilter
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal DevicePickerFilter()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Devices.Enumeration.DeviceClass> SupportedDeviceClasses
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<DeviceClass> DevicePickerFilter.SupportedDeviceClasses is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CDeviceClass%3E%20DevicePickerFilter.SupportedDeviceClasses");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<string> SupportedDeviceSelectors
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<string> DevicePickerFilter.SupportedDeviceSelectors is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3Cstring%3E%20DevicePickerFilter.SupportedDeviceSelectors");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.operator ==(Windows.Devices.Enumeration.DevicePickerFilter, Windows.Devices.Enumeration.DevicePickerFilter)
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.operator !=(Windows.Devices.Enumeration.DevicePickerFilter, Windows.Devices.Enumeration.DevicePickerFilter)
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.Equals(Windows.Devices.Enumeration.DevicePickerFilter)
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.Equals(object)
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.GetHashCode()
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.SupportedDeviceClasses.get
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.SupportedDeviceSelectors.get
		// Forced skipping of method Windows.Devices.Enumeration.DevicePickerFilter.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
