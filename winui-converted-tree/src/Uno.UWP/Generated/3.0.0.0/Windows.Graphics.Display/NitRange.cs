// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Graphics.Display
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct NitRange
	{
		// Forced skipping of method Windows.Graphics.Display.NitRange.NitRange()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public NitRange(float _MinNits, float _MaxNits, float _StepSizeNits)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Display.NitRange", "NitRange.NitRange(float _MinNits, float _MaxNits, float _StepSizeNits)");
		}
#endif
		// Forced skipping of method Windows.Graphics.Display.NitRange.NitRange(float, float, float)
		// Forced skipping of method Windows.Graphics.Display.NitRange.operator ==(Windows.Graphics.Display.NitRange, Windows.Graphics.Display.NitRange)
		// Forced skipping of method Windows.Graphics.Display.NitRange.operator !=(Windows.Graphics.Display.NitRange, Windows.Graphics.Display.NitRange)
		// Forced skipping of method Windows.Graphics.Display.NitRange.Equals(Windows.Graphics.Display.NitRange)
		// Forced skipping of method Windows.Graphics.Display.NitRange.Equals(object)
		// Forced skipping of method Windows.Graphics.Display.NitRange.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float MinNits;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float MaxNits;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float StepSizeNits;
#endif
	}
}
