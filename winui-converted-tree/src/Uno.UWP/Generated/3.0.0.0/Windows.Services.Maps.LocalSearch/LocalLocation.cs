// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Maps.LocalSearch
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LocalLocation
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal LocalLocation()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.MapAddress Address
		{
			get
			{
				throw new global::System.NotImplementedException("The member MapAddress LocalLocation.Address is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MapAddress%20LocalLocation.Address");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Category
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LocalLocation.Category is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LocalLocation.Category");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DataAttribution
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LocalLocation.DataAttribution is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LocalLocation.DataAttribution");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Description
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LocalLocation.Description is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LocalLocation.Description");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LocalLocation.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LocalLocation.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem> HoursOfOperation
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<LocalLocationHoursOfOperationItem> LocalLocation.HoursOfOperation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CLocalLocationHoursOfOperationItem%3E%20LocalLocation.HoursOfOperation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Identifier
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LocalLocation.Identifier is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LocalLocation.Identifier");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string PhoneNumber
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LocalLocation.PhoneNumber is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LocalLocation.PhoneNumber");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Geolocation.Geopoint Point
		{
			get
			{
				throw new global::System.NotImplementedException("The member Geopoint LocalLocation.Point is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Geopoint%20LocalLocation.Point");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.LocalSearch.LocalLocationRatingInfo RatingInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member LocalLocationRatingInfo LocalLocation.RatingInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=LocalLocationRatingInfo%20LocalLocation.RatingInfo");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.FromAbi(nint)
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.operator ==(Windows.Services.Maps.LocalSearch.LocalLocation, Windows.Services.Maps.LocalSearch.LocalLocation)
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.operator !=(Windows.Services.Maps.LocalSearch.LocalLocation, Windows.Services.Maps.LocalSearch.LocalLocation)
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Equals(Windows.Services.Maps.LocalSearch.LocalLocation)
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Equals(object)
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.GetHashCode()
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Address.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Category.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.DataAttribution.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Description.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.DisplayName.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.HoursOfOperation.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Identifier.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.PhoneNumber.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.Point.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.RatingInfo.get
		// Forced skipping of method Windows.Services.Maps.LocalSearch.LocalLocation.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
