// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Protection.PlayReady
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PlayReadyLicenseIterator : global::System.Collections.Generic.IEnumerator<global::Windows.Media.Protection.PlayReady.IPlayReadyLicense>, global::System.Collections.IEnumerator, global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal PlayReadyLicenseIterator()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Protection.PlayReady.IPlayReadyLicense Current
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPlayReadyLicense PlayReadyLicenseIterator.Current is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPlayReadyLicense%20PlayReadyLicenseIterator.Current");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		object global::System.Collections.IEnumerator.Current
		{
			get
			{
				throw new global::System.NotImplementedException("The member object PlayReadyLicenseIterator.Current is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20PlayReadyLicenseIterator.Current");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.FromAbi(nint)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.operator ==(Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator, Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.operator !=(Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator, Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.Equals(Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.Equals(object)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.GetHashCode()
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool MoveNext()
		{
			throw new global::System.NotImplementedException("The member bool PlayReadyLicenseIterator.MoveNext() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PlayReadyLicenseIterator.MoveNext%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Reset()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator", "void PlayReadyLicenseIterator.Reset()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator", "void PlayReadyLicenseIterator.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.Current.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.System.Collections.IEnumerator.Current.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterator.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.Collections.Generic.IEnumerator<Windows.Media.Protection.PlayReady.IPlayReadyLicense>
		// Processing: System.Collections.IEnumerator
		// Processing: System.IDisposable
	}
}
