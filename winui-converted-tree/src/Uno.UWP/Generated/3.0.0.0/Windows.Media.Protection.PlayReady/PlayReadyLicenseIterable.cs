// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Protection.PlayReady
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PlayReadyLicenseIterable : global::System.Collections.Generic.IEnumerable<global::Windows.Media.Protection.PlayReady.IPlayReadyLicense>, global::System.Collections.IEnumerable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PlayReadyLicenseIterable()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable", "PlayReadyLicenseIterable.PlayReadyLicenseIterable()");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.PlayReadyLicenseIterable()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PlayReadyLicenseIterable(global::Windows.Media.Protection.PlayReady.PlayReadyContentHeader contentHeader, bool fullyEvaluated)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable", "PlayReadyLicenseIterable.PlayReadyLicenseIterable(PlayReadyContentHeader contentHeader, bool fullyEvaluated)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.PlayReadyLicenseIterable(Windows.Media.Protection.PlayReady.PlayReadyContentHeader, bool)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.FromAbi(nint)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.operator ==(Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable, Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.operator !=(Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable, Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.Equals(Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.Equals(object)
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.GetHashCode()
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IEnumerator<global::Windows.Media.Protection.PlayReady.IPlayReadyLicense> GetEnumerator()
		{
			throw new global::System.NotImplementedException("The member IEnumerator<IPlayReadyLicense> PlayReadyLicenseIterable.GetEnumerator() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IEnumerator%3CIPlayReadyLicense%3E%20PlayReadyLicenseIterable.GetEnumerator%28%29");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.System.Collections.IEnumerable.GetEnumerator()
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicenseIterable.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.Collections.Generic.IEnumerable<Windows.Media.Protection.PlayReady.IPlayReadyLicense>
		// Processing: System.Collections.IEnumerable
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		// DeclaringType: System.Collections.IEnumerable
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		 global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			throw new global::System.NotSupportedException();
		}
#endif
	}
}
