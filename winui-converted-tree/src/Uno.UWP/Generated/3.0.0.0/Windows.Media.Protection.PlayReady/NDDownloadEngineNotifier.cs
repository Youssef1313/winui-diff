// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Protection.PlayReady
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class NDDownloadEngineNotifier : global::Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public NDDownloadEngineNotifier()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "NDDownloadEngineNotifier.NDDownloadEngineNotifier()");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.NDDownloadEngineNotifier()
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.FromAbi(nint)
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.operator ==(Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier, Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier)
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.operator !=(Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier, Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier)
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Equals(Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier)
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Equals(object)
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.GetHashCode()
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void OnStreamOpened()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "void NDDownloadEngineNotifier.OnStreamOpened()");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier.OnStreamOpened()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void OnPlayReadyObjectReceived(byte[] dataBytes)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "void NDDownloadEngineNotifier.OnPlayReadyObjectReceived(byte[] dataBytes)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier.OnPlayReadyObjectReceived(byte[])
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void OnContentIDReceived(global::Windows.Media.Protection.PlayReady.INDLicenseFetchDescriptor licenseFetchDescriptor)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "void NDDownloadEngineNotifier.OnContentIDReceived(INDLicenseFetchDescriptor licenseFetchDescriptor)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier.OnContentIDReceived(Windows.Media.Protection.PlayReady.INDLicenseFetchDescriptor)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void OnDataReceived(byte[] dataBytes, uint bytesReceived)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "void NDDownloadEngineNotifier.OnDataReceived(byte[] dataBytes, uint bytesReceived)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier.OnDataReceived(byte[], uint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void OnEndOfStream()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "void NDDownloadEngineNotifier.OnEndOfStream()");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier.OnEndOfStream()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void OnNetworkError()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier", "void NDDownloadEngineNotifier.OnNetworkError()");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier.OnNetworkError()
		// Forced skipping of method Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier
	}
}
