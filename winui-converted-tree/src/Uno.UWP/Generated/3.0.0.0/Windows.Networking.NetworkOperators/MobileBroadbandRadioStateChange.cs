// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.NetworkOperators
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MobileBroadbandRadioStateChange
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal MobileBroadbandRadioStateChange()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DeviceId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MobileBroadbandRadioStateChange.DeviceId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MobileBroadbandRadioStateChange.DeviceId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.NetworkOperators.MobileBroadbandRadioState RadioState
		{
			get
			{
				throw new global::System.NotImplementedException("The member MobileBroadbandRadioState MobileBroadbandRadioStateChange.RadioState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MobileBroadbandRadioState%20MobileBroadbandRadioStateChange.RadioState");
			}
		}
#endif
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.FromAbi(nint)
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.operator ==(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange, Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange)
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.operator !=(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange, Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange)
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.Equals(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange)
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.Equals(object)
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.GetHashCode()
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.DeviceId.get
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.RadioState.get
		// Forced skipping of method Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
