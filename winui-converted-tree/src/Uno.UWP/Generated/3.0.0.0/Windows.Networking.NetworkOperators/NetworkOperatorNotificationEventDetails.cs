// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.NetworkOperators
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class NetworkOperatorNotificationEventDetails
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal NetworkOperatorNotificationEventDetails()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public byte EncodingType
		{
			get
			{
				throw new global::System.NotImplementedException("The member byte NetworkOperatorNotificationEventDetails.EncodingType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=byte%20NetworkOperatorNotificationEventDetails.EncodingType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Message
		{
			get
			{
				throw new global::System.NotImplementedException("The member string NetworkOperatorNotificationEventDetails.Message is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20NetworkOperatorNotificationEventDetails.Message");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string NetworkAccountId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string NetworkOperatorNotificationEventDetails.NetworkAccountId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20NetworkOperatorNotificationEventDetails.NetworkAccountId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType NotificationType
		{
			get
			{
				throw new global::System.NotImplementedException("The member NetworkOperatorEventMessageType NetworkOperatorNotificationEventDetails.NotificationType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=NetworkOperatorEventMessageType%20NetworkOperatorNotificationEventDetails.NotificationType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string RuleId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string NetworkOperatorNotificationEventDetails.RuleId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20NetworkOperatorNotificationEventDetails.RuleId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Sms.ISmsMessage SmsMessage
		{
			get
			{
				throw new global::System.NotImplementedException("The member ISmsMessage NetworkOperatorNotificationEventDetails.SmsMessage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ISmsMessage%20NetworkOperatorNotificationEventDetails.SmsMessage");
			}
		}
#endif
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.FromAbi(nint)
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.operator ==(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails, Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.operator !=(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails, Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.Equals(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.Equals(object)
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.GetHashCode()
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void AuthorizeTethering(bool allow, string entitlementFailureReason)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails", "void NetworkOperatorNotificationEventDetails.AuthorizeTethering(bool allow, string entitlementFailureReason)");
		}
#endif
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.EncodingType.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.Message.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.NetworkAccountId.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.NotificationType.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.RuleId.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.SmsMessage.get
		// Forced skipping of method Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
