// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Sensors
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SensorQuaternion
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SensorQuaternion()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float W
		{
			get
			{
				throw new global::System.NotImplementedException("The member float SensorQuaternion.W is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20SensorQuaternion.W");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float X
		{
			get
			{
				throw new global::System.NotImplementedException("The member float SensorQuaternion.X is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20SensorQuaternion.X");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float Y
		{
			get
			{
				throw new global::System.NotImplementedException("The member float SensorQuaternion.Y is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20SensorQuaternion.Y");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float Z
		{
			get
			{
				throw new global::System.NotImplementedException("The member float SensorQuaternion.Z is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20SensorQuaternion.Z");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.operator ==(Windows.Devices.Sensors.SensorQuaternion, Windows.Devices.Sensors.SensorQuaternion)
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.operator !=(Windows.Devices.Sensors.SensorQuaternion, Windows.Devices.Sensors.SensorQuaternion)
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.Equals(Windows.Devices.Sensors.SensorQuaternion)
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.Equals(object)
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.GetHashCode()
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.W.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.X.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.Y.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.Z.get
		// Forced skipping of method Windows.Devices.Sensors.SensorQuaternion.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
