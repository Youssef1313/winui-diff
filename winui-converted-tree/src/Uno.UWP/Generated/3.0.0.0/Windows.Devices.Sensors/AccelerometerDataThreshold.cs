// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Sensors
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AccelerometerDataThreshold
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AccelerometerDataThreshold()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double XAxisInGForce
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AccelerometerDataThreshold.XAxisInGForce is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AccelerometerDataThreshold.XAxisInGForce");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sensors.AccelerometerDataThreshold", "double AccelerometerDataThreshold.XAxisInGForce");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double YAxisInGForce
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AccelerometerDataThreshold.YAxisInGForce is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AccelerometerDataThreshold.YAxisInGForce");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sensors.AccelerometerDataThreshold", "double AccelerometerDataThreshold.YAxisInGForce");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double ZAxisInGForce
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AccelerometerDataThreshold.ZAxisInGForce is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AccelerometerDataThreshold.ZAxisInGForce");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sensors.AccelerometerDataThreshold", "double AccelerometerDataThreshold.ZAxisInGForce");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.operator ==(Windows.Devices.Sensors.AccelerometerDataThreshold, Windows.Devices.Sensors.AccelerometerDataThreshold)
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.operator !=(Windows.Devices.Sensors.AccelerometerDataThreshold, Windows.Devices.Sensors.AccelerometerDataThreshold)
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.Equals(Windows.Devices.Sensors.AccelerometerDataThreshold)
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.Equals(object)
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.GetHashCode()
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.XAxisInGForce.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.XAxisInGForce.set
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.YAxisInGForce.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.YAxisInGForce.set
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.ZAxisInGForce.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.ZAxisInGForce.set
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerDataThreshold.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
