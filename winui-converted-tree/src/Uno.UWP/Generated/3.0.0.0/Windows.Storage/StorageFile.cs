// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class StorageFile : global::Windows.Storage.IStorageFile, global::Windows.Storage.IStorageItem, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.Streams.IInputStreamReference, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFilePropertiesWithAvailability, global::Windows.Storage.IStorageFile2
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageFile.ContentType
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.ContentType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.ContentType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageFile.FileType
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.FileType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.FileType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Storage.FileAttributes global::Windows.Storage.IStorageItem.Attributes
		{
			get
			{
				throw new global::System.NotImplementedException("The member FileAttributes StorageFile.Attributes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=FileAttributes%20StorageFile.Attributes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.DateTimeOffset global::Windows.Storage.IStorageItem.DateCreated
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset StorageFile.DateCreated is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20StorageFile.DateCreated");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageItem.Name
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.Name is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.Name");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageItem.Path
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.Path is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.Path");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageItemProperties.DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageItemProperties.DisplayType
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.DisplayType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.DisplayType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Storage.IStorageItemProperties.FolderRelativeId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.FolderRelativeId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.FolderRelativeId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Storage.FileProperties.StorageItemContentProperties global::Windows.Storage.IStorageItemProperties.Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageItemContentProperties StorageFile.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageItemContentProperties%20StorageFile.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Storage.StorageProvider global::Windows.Storage.IStorageItemPropertiesWithProvider.Provider
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProvider StorageFile.Provider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProvider%20StorageFile.Provider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		bool global::Windows.Storage.IStorageFilePropertiesWithAvailability.IsAvailable
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool StorageFile.IsAvailable is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20StorageFile.IsAvailable");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.FileAttributes Attributes
		{
			get
			{
				throw new global::System.NotImplementedException("The member FileAttributes StorageFile.Attributes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=FileAttributes%20StorageFile.Attributes");
			}
		}
#endif
		// Skipping already declared property ContentType
		// Skipping already declared property DateCreated
		// Skipping already declared property DisplayName
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayType
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.DisplayType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.DisplayType");
			}
		}
#endif
		// Skipping already declared property FileType
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string FolderRelativeId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageFile.FolderRelativeId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageFile.FolderRelativeId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAvailable
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool StorageFile.IsAvailable is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20StorageFile.IsAvailable");
			}
		}
#endif
		// Skipping already declared property Name
		// Skipping already declared property Path
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.FileProperties.StorageItemContentProperties Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageItemContentProperties StorageFile.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageItemContentProperties%20StorageFile.Properties");
			}
		}
#endif
		// Skipping already declared property Provider
		// Forced skipping of method Windows.Storage.StorageFile.As<I>()
		// Skipping already declared method Windows.Storage.StorageFile.GetFileFromPathAsync(string)
		// Skipping already declared method Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(System.Uri)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateStreamedFileAsync(string displayNameWithExtension, global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> StorageFile.CreateStreamedFileAsync(string displayNameWithExtension, StreamedFileDataRequestedHandler dataRequested, IRandomAccessStreamReference thumbnail) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20StorageFile.CreateStreamedFileAsync%28string%20displayNameWithExtension%2C%20StreamedFileDataRequestedHandler%20dataRequested%2C%20IRandomAccessStreamReference%20thumbnail%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> ReplaceWithStreamedFileAsync(global::Windows.Storage.IStorageFile fileToReplace, global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> StorageFile.ReplaceWithStreamedFileAsync(IStorageFile fileToReplace, StreamedFileDataRequestedHandler dataRequested, IRandomAccessStreamReference thumbnail) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20StorageFile.ReplaceWithStreamedFileAsync%28IStorageFile%20fileToReplace%2C%20StreamedFileDataRequestedHandler%20dataRequested%2C%20IRandomAccessStreamReference%20thumbnail%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateStreamedFileFromUriAsync(string displayNameWithExtension, global::System.Uri uri, global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> StorageFile.CreateStreamedFileFromUriAsync(string displayNameWithExtension, Uri uri, IRandomAccessStreamReference thumbnail) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20StorageFile.CreateStreamedFileFromUriAsync%28string%20displayNameWithExtension%2C%20Uri%20uri%2C%20IRandomAccessStreamReference%20thumbnail%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> ReplaceWithStreamedFileFromUriAsync(global::Windows.Storage.IStorageFile fileToReplace, global::System.Uri uri, global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> StorageFile.ReplaceWithStreamedFileFromUriAsync(IStorageFile fileToReplace, Uri uri, IRandomAccessStreamReference thumbnail) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20StorageFile.ReplaceWithStreamedFileFromUriAsync%28IStorageFile%20fileToReplace%2C%20Uri%20uri%2C%20IRandomAccessStreamReference%20thumbnail%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromPathForUserAsync(global::Windows.System.User user, string path)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> StorageFile.GetFileFromPathForUserAsync(User user, string path) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20StorageFile.GetFileFromPathForUserAsync%28User%20user%2C%20string%20path%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.FromAbi(nint)
		// Forced skipping of method Windows.Storage.StorageFile.operator ==(Windows.Storage.StorageFile, Windows.Storage.StorageFile)
		// Forced skipping of method Windows.Storage.StorageFile.operator !=(Windows.Storage.StorageFile, Windows.Storage.StorageFile)
		// Forced skipping of method Windows.Storage.StorageFile.Equals(Windows.Storage.StorageFile)
		// Forced skipping of method Windows.Storage.StorageFile.Equals(object)
		// Forced skipping of method Windows.Storage.StorageFile.GetHashCode()
		// Forced skipping of method Windows.Storage.StorageFile.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Storage.StorageFile.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Storage.StorageFile.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Storage.StorageFile.WinRT.IWinRTObject.AdditionalTypeData.get
		// Skipping already declared method Windows.Storage.StorageFile.OpenAsync(Windows.Storage.FileAccessMode)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.OpenAsync(Windows.Storage.FileAccessMode)
		// Skipping already declared method Windows.Storage.StorageFile.OpenTransactedWriteAsync()
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.OpenTransactedWriteAsync()
		// Skipping already declared method Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder)
		// Skipping already declared method Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder, string)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder, string)
		// Skipping already declared method Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder, string, Windows.Storage.NameCollisionOption)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder, string, Windows.Storage.NameCollisionOption)
		// Skipping already declared method Windows.Storage.StorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)
		// Skipping already declared method Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder)
		// Skipping already declared method Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder, string)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder, string)
		// Skipping already declared method Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder, string, Windows.Storage.NameCollisionOption)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder, string, Windows.Storage.NameCollisionOption)
		// Skipping already declared method Windows.Storage.StorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.ContentType.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile.FileType.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IInputStream> OpenSequentialReadAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IInputStream> StorageFile.OpenSequentialReadAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIInputStream%3E%20StorageFile.OpenSequentialReadAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.Streams.IInputStreamReference.OpenSequentialReadAsync()
		// Skipping already declared method Windows.Storage.StorageFile.OpenReadAsync()
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.Streams.IRandomAccessStreamReference.OpenReadAsync()
		// Skipping already declared method Windows.Storage.StorageFile.RenameAsync(string)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.RenameAsync(string)
		// Skipping already declared method Windows.Storage.StorageFile.RenameAsync(string, Windows.Storage.NameCollisionOption)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.RenameAsync(string, Windows.Storage.NameCollisionOption)
		// Skipping already declared method Windows.Storage.StorageFile.DeleteAsync()
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.DeleteAsync()
		// Skipping already declared method Windows.Storage.StorageFile.DeleteAsync(Windows.Storage.StorageDeleteOption)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)
		// Skipping already declared method Windows.Storage.StorageFile.GetBasicPropertiesAsync()
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.GetBasicPropertiesAsync()
		// Skipping already declared method Windows.Storage.StorageFile.IsOfType(Windows.Storage.StorageItemTypes)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.Attributes.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.DateCreated.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.Name.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem.Path.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageItemThumbnail> StorageFile.GetThumbnailAsync(ThumbnailMode mode) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageItemThumbnail%3E%20StorageFile.GetThumbnailAsync%28ThumbnailMode%20mode%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode, uint requestedSize)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageItemThumbnail> StorageFile.GetThumbnailAsync(ThumbnailMode mode, uint requestedSize) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageItemThumbnail%3E%20StorageFile.GetThumbnailAsync%28ThumbnailMode%20mode%2C%20uint%20requestedSize%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode, uint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode, uint requestedSize, global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageItemThumbnail> StorageFile.GetThumbnailAsync(ThumbnailMode mode, uint requestedSize, ThumbnailOptions options) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageItemThumbnail%3E%20StorageFile.GetThumbnailAsync%28ThumbnailMode%20mode%2C%20uint%20requestedSize%2C%20ThumbnailOptions%20options%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode, uint, Windows.Storage.FileProperties.ThumbnailOptions)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.DisplayName.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.DisplayType.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.FolderRelativeId.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties.Properties.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageItemThumbnail> StorageFile.GetScaledImageAsThumbnailAsync(ThumbnailMode mode) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageItemThumbnail%3E%20StorageFile.GetScaledImageAsThumbnailAsync%28ThumbnailMode%20mode%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode, uint requestedSize)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageItemThumbnail> StorageFile.GetScaledImageAsThumbnailAsync(ThumbnailMode mode, uint requestedSize) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageItemThumbnail%3E%20StorageFile.GetScaledImageAsThumbnailAsync%28ThumbnailMode%20mode%2C%20uint%20requestedSize%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode, uint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode, uint requestedSize, global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageItemThumbnail> StorageFile.GetScaledImageAsThumbnailAsync(ThumbnailMode mode, uint requestedSize, ThumbnailOptions options) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageItemThumbnail%3E%20StorageFile.GetScaledImageAsThumbnailAsync%28ThumbnailMode%20mode%2C%20uint%20requestedSize%2C%20ThumbnailOptions%20options%29");
		}
#endif
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode, uint, Windows.Storage.FileProperties.ThumbnailOptions)
		// Skipping already declared method Windows.Storage.StorageFile.GetParentAsync()
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem2.GetParentAsync()
		// Skipping already declared method Windows.Storage.StorageFile.IsEqual(Windows.Storage.IStorageItem)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItem2.IsEqual(Windows.Storage.IStorageItem)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageItemPropertiesWithProvider.Provider.get
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFilePropertiesWithAvailability.IsAvailable.get
		// Skipping already declared method Windows.Storage.StorageFile.OpenAsync(Windows.Storage.FileAccessMode, Windows.Storage.StorageOpenOptions)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile2.OpenAsync(Windows.Storage.FileAccessMode, Windows.Storage.StorageOpenOptions)
		// Skipping already declared method Windows.Storage.StorageFile.OpenTransactedWriteAsync(Windows.Storage.StorageOpenOptions)
		// Forced skipping of method Windows.Storage.StorageFile.Windows.Storage.IStorageFile2.OpenTransactedWriteAsync(Windows.Storage.StorageOpenOptions)
		// Forced skipping of method Windows.Storage.StorageFile.Attributes.get
		// Forced skipping of method Windows.Storage.StorageFile.ContentType.get
		// Forced skipping of method Windows.Storage.StorageFile.DateCreated.get
		// Forced skipping of method Windows.Storage.StorageFile.DisplayName.get
		// Forced skipping of method Windows.Storage.StorageFile.DisplayType.get
		// Forced skipping of method Windows.Storage.StorageFile.FileType.get
		// Forced skipping of method Windows.Storage.StorageFile.FolderRelativeId.get
		// Forced skipping of method Windows.Storage.StorageFile.IsAvailable.get
		// Forced skipping of method Windows.Storage.StorageFile.Name.get
		// Forced skipping of method Windows.Storage.StorageFile.Path.get
		// Forced skipping of method Windows.Storage.StorageFile.Properties.get
		// Forced skipping of method Windows.Storage.StorageFile.Provider.get
		// Forced skipping of method Windows.Storage.StorageFile.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Storage.IStorageFile
		// Processing: Windows.Storage.IStorageItem
		// Processing: Windows.Storage.Streams.IRandomAccessStreamReference
		// Processing: Windows.Storage.Streams.IInputStreamReference
		// Processing: Windows.Storage.IStorageItemProperties
		// Processing: Windows.Storage.IStorageItemProperties2
		// Processing: Windows.Storage.IStorageItem2
		// Processing: Windows.Storage.IStorageItemPropertiesWithProvider
		// Processing: Windows.Storage.IStorageFilePropertiesWithAvailability
		// Processing: Windows.Storage.IStorageFile2
	}
}
