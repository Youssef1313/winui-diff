// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.TargetedContent
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class TargetedContentItem
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal TargetedContentItem()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Services.TargetedContent.TargetedContentCollection> Collections
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<TargetedContentCollection> TargetedContentItem.Collections is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CTargetedContentCollection%3E%20TargetedContentItem.Collections");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Path
		{
			get
			{
				throw new global::System.NotImplementedException("The member string TargetedContentItem.Path is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20TargetedContentItem.Path");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.Services.TargetedContent.TargetedContentValue> Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, TargetedContentValue> TargetedContentItem.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20TargetedContentValue%3E%20TargetedContentItem.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.TargetedContent.TargetedContentItemState State
		{
			get
			{
				throw new global::System.NotImplementedException("The member TargetedContentItemState TargetedContentItem.State is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TargetedContentItemState%20TargetedContentItem.State");
			}
		}
#endif
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.FromAbi(nint)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.operator ==(Windows.Services.TargetedContent.TargetedContentItem, Windows.Services.TargetedContent.TargetedContentItem)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.operator !=(Windows.Services.TargetedContent.TargetedContentItem, Windows.Services.TargetedContent.TargetedContentItem)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.Equals(Windows.Services.TargetedContent.TargetedContentItem)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.Equals(object)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.GetHashCode()
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ReportInteraction(global::Windows.Services.TargetedContent.TargetedContentInteraction interaction)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.TargetedContent.TargetedContentItem", "void TargetedContentItem.ReportInteraction(TargetedContentInteraction interaction)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ReportCustomInteraction(string customInteractionName)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.TargetedContent.TargetedContentItem", "void TargetedContentItem.ReportCustomInteraction(string customInteractionName)");
		}
#endif
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.Collections.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.Path.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.Properties.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.State.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentItem.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
