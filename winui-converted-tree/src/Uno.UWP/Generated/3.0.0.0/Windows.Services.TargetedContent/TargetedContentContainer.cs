// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.TargetedContent
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class TargetedContentContainer
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal TargetedContentContainer()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.TargetedContent.TargetedContentAvailability Availability
		{
			get
			{
				throw new global::System.NotImplementedException("The member TargetedContentAvailability TargetedContentContainer.Availability is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TargetedContentAvailability%20TargetedContentContainer.Availability");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.TargetedContent.TargetedContentCollection Content
		{
			get
			{
				throw new global::System.NotImplementedException("The member TargetedContentCollection TargetedContentContainer.Content is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TargetedContentCollection%20TargetedContentContainer.Content");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string TargetedContentContainer.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20TargetedContentContainer.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset Timestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset TargetedContentContainer.Timestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20TargetedContentContainer.Timestamp");
			}
		}
#endif
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Services.TargetedContent.TargetedContentContainer> GetAsync(string contentId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<TargetedContentContainer> TargetedContentContainer.GetAsync(string contentId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CTargetedContentContainer%3E%20TargetedContentContainer.GetAsync%28string%20contentId%29");
		}
#endif
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.FromAbi(nint)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.operator ==(Windows.Services.TargetedContent.TargetedContentContainer, Windows.Services.TargetedContent.TargetedContentContainer)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.operator !=(Windows.Services.TargetedContent.TargetedContentContainer, Windows.Services.TargetedContent.TargetedContentContainer)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.Equals(Windows.Services.TargetedContent.TargetedContentContainer)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.Equals(object)
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.GetHashCode()
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.TargetedContent.TargetedContentObject SelectSingleObject(string path)
		{
			throw new global::System.NotImplementedException("The member TargetedContentObject TargetedContentContainer.SelectSingleObject(string path) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TargetedContentObject%20TargetedContentContainer.SelectSingleObject%28string%20path%29");
		}
#endif
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.Availability.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.Content.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.Id.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.Timestamp.get
		// Forced skipping of method Windows.Services.TargetedContent.TargetedContentContainer.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
