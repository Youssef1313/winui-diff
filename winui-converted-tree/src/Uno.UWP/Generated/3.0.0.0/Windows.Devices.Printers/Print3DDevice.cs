// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Printers
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class Print3DDevice
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal Print3DDevice()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Printers.PrintSchema PrintSchema
		{
			get
			{
				throw new global::System.NotImplementedException("The member PrintSchema Print3DDevice.PrintSchema is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PrintSchema%20Print3DDevice.PrintSchema");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Printers.Print3DDevice> FromIdAsync(string deviceId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<Print3DDevice> Print3DDevice.FromIdAsync(string deviceId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CPrint3DDevice%3E%20Print3DDevice.FromIdAsync%28string%20deviceId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string GetDeviceSelector()
		{
			throw new global::System.NotImplementedException("The member string Print3DDevice.GetDeviceSelector() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Print3DDevice.GetDeviceSelector%28%29");
		}
#endif
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.operator ==(Windows.Devices.Printers.Print3DDevice, Windows.Devices.Printers.Print3DDevice)
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.operator !=(Windows.Devices.Printers.Print3DDevice, Windows.Devices.Printers.Print3DDevice)
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.Equals(Windows.Devices.Printers.Print3DDevice)
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.Equals(object)
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.GetHashCode()
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.PrintSchema.get
		// Forced skipping of method Windows.Devices.Printers.Print3DDevice.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
