// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Security.Isolation
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class IsolatedWindowsEnvironmentOwnerRegistrationData
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<string> ActivationFileExtensions
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<string> IsolatedWindowsEnvironmentOwnerRegistrationData.ActivationFileExtensions is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3Cstring%3E%20IsolatedWindowsEnvironmentOwnerRegistrationData.ActivationFileExtensions");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<string> ProcessesRunnableAsSystem
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<string> IsolatedWindowsEnvironmentOwnerRegistrationData.ProcessesRunnableAsSystem is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3Cstring%3E%20IsolatedWindowsEnvironmentOwnerRegistrationData.ProcessesRunnableAsSystem");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<string> ProcessesRunnableAsUser
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<string> IsolatedWindowsEnvironmentOwnerRegistrationData.ProcessesRunnableAsUser is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3Cstring%3E%20IsolatedWindowsEnvironmentOwnerRegistrationData.ProcessesRunnableAsUser");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<string> ShareableFolders
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<string> IsolatedWindowsEnvironmentOwnerRegistrationData.ShareableFolders is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3Cstring%3E%20IsolatedWindowsEnvironmentOwnerRegistrationData.ShareableFolders");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public IsolatedWindowsEnvironmentOwnerRegistrationData()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData", "IsolatedWindowsEnvironmentOwnerRegistrationData.IsolatedWindowsEnvironmentOwnerRegistrationData()");
		}
#endif
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.IsolatedWindowsEnvironmentOwnerRegistrationData()
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.FromAbi(nint)
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.operator ==(Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData, Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData)
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.operator !=(Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData, Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData)
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.Equals(Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData)
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.Equals(object)
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.GetHashCode()
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.ActivationFileExtensions.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.ProcessesRunnableAsSystem.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.ProcessesRunnableAsUser.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.ShareableFolders.get
		// Forced skipping of method Windows.Security.Isolation.IsolatedWindowsEnvironmentOwnerRegistrationData.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
