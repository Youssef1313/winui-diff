// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.AI.MachineLearning.Preview
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LearningModelEvaluationResultPreview
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal LearningModelEvaluationResultPreview()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CorrelationId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LearningModelEvaluationResultPreview.CorrelationId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LearningModelEvaluationResultPreview.CorrelationId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, object> Outputs
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, object> LearningModelEvaluationResultPreview.Outputs is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20object%3E%20LearningModelEvaluationResultPreview.Outputs");
			}
		}
#endif
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.FromAbi(nint)
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.operator ==(Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview, Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview)
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.operator !=(Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview, Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview)
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.Equals(Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview)
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.Equals(object)
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.GetHashCode()
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.CorrelationId.get
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.Outputs.get
		// Forced skipping of method Windows.AI.MachineLearning.Preview.LearningModelEvaluationResultPreview.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
