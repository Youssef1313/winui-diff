// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Input.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class RadialControllerIndependentInputSource
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal RadialControllerIndependentInputSource()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.RadialController Controller
		{
			get
			{
				throw new global::System.NotImplementedException("The member RadialController RadialControllerIndependentInputSource.Controller is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=RadialController%20RadialControllerIndependentInputSource.Controller");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Core.CoreDispatcher Dispatcher
		{
			get
			{
				throw new global::System.NotImplementedException("The member CoreDispatcher RadialControllerIndependentInputSource.Dispatcher is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CoreDispatcher%20RadialControllerIndependentInputSource.Dispatcher");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.DispatcherQueue DispatcherQueue
		{
			get
			{
				throw new global::System.NotImplementedException("The member DispatcherQueue RadialControllerIndependentInputSource.DispatcherQueue is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DispatcherQueue%20RadialControllerIndependentInputSource.DispatcherQueue");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.UI.Input.Core.RadialControllerIndependentInputSource CreateForView(global::Windows.ApplicationModel.Core.CoreApplicationView view)
		{
			throw new global::System.NotImplementedException("The member RadialControllerIndependentInputSource RadialControllerIndependentInputSource.CreateForView(CoreApplicationView view) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=RadialControllerIndependentInputSource%20RadialControllerIndependentInputSource.CreateForView%28CoreApplicationView%20view%29");
		}
#endif
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.FromAbi(nint)
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.operator ==(Windows.UI.Input.Core.RadialControllerIndependentInputSource, Windows.UI.Input.Core.RadialControllerIndependentInputSource)
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.operator !=(Windows.UI.Input.Core.RadialControllerIndependentInputSource, Windows.UI.Input.Core.RadialControllerIndependentInputSource)
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.Equals(Windows.UI.Input.Core.RadialControllerIndependentInputSource)
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.Equals(object)
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.GetHashCode()
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.Controller.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.Dispatcher.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.DispatcherQueue.get
		// Forced skipping of method Windows.UI.Input.Core.RadialControllerIndependentInputSource.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
