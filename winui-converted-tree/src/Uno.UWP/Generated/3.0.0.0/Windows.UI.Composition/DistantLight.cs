// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Composition
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class DistantLight : global::Windows.UI.Composition.CompositionLight
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal DistantLight()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Color Color
		{
			get
			{
				throw new global::System.NotImplementedException("The member Color DistantLight.Color is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%20DistantLight.Color");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Composition.DistantLight", "Color DistantLight.Color");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Composition.Visual CoordinateSpace
		{
			get
			{
				throw new global::System.NotImplementedException("The member Visual DistantLight.CoordinateSpace is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Visual%20DistantLight.CoordinateSpace");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Composition.DistantLight", "Visual DistantLight.CoordinateSpace");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Numerics.Vector3 Direction
		{
			get
			{
				throw new global::System.NotImplementedException("The member Vector3 DistantLight.Direction is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Vector3%20DistantLight.Direction");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Composition.DistantLight", "Vector3 DistantLight.Direction");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float Intensity
		{
			get
			{
				throw new global::System.NotImplementedException("The member float DistantLight.Intensity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20DistantLight.Intensity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Composition.DistantLight", "float DistantLight.Intensity");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Composition.DistantLight.FromAbi(nint)
		// Forced skipping of method Windows.UI.Composition.DistantLight.operator ==(Windows.UI.Composition.DistantLight, Windows.UI.Composition.DistantLight)
		// Forced skipping of method Windows.UI.Composition.DistantLight.operator !=(Windows.UI.Composition.DistantLight, Windows.UI.Composition.DistantLight)
		// Forced skipping of method Windows.UI.Composition.DistantLight.Equals(Windows.UI.Composition.DistantLight)
		// Forced skipping of method Windows.UI.Composition.DistantLight.Equals(object)
		// Forced skipping of method Windows.UI.Composition.DistantLight.GetHashCode()
		// Forced skipping of method Windows.UI.Composition.DistantLight.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Composition.DistantLight.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Composition.DistantLight.Color.get
		// Forced skipping of method Windows.UI.Composition.DistantLight.Color.set
		// Forced skipping of method Windows.UI.Composition.DistantLight.CoordinateSpace.get
		// Forced skipping of method Windows.UI.Composition.DistantLight.CoordinateSpace.set
		// Forced skipping of method Windows.UI.Composition.DistantLight.Direction.get
		// Forced skipping of method Windows.UI.Composition.DistantLight.Direction.set
		// Forced skipping of method Windows.UI.Composition.DistantLight.Intensity.get
		// Forced skipping of method Windows.UI.Composition.DistantLight.Intensity.set
		// Forced skipping of method Windows.UI.Composition.DistantLight.IsOverridableInterface(System.Guid)
		// Forced skipping of method Windows.UI.Composition.DistantLight.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
