// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Data.Xml.Dom
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class XmlComment : global::Windows.Data.Xml.Dom.IXmlCharacterData, global::Windows.Data.Xml.Dom.IXmlNode, global::Windows.Data.Xml.Dom.IXmlNodeSelector, global::Windows.Data.Xml.Dom.IXmlNodeSerializer
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Data.Xml.Dom.IXmlCharacterData.Data
		{
			get
			{
				throw new global::System.NotImplementedException("The member string XmlComment.Data is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20XmlComment.Data");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Data.Xml.Dom.XmlComment", "string XmlComment.Data");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		uint global::Windows.Data.Xml.Dom.IXmlCharacterData.Length
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint XmlComment.Length is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20XmlComment.Length");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.XmlNamedNodeMap global::Windows.Data.Xml.Dom.IXmlNode.Attributes
		{
			get
			{
				throw new global::System.NotImplementedException("The member XmlNamedNodeMap XmlComment.Attributes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XmlNamedNodeMap%20XmlComment.Attributes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.XmlNodeList global::Windows.Data.Xml.Dom.IXmlNode.ChildNodes
		{
			get
			{
				throw new global::System.NotImplementedException("The member XmlNodeList XmlComment.ChildNodes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XmlNodeList%20XmlComment.ChildNodes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.IXmlNode global::Windows.Data.Xml.Dom.IXmlNode.FirstChild
		{
			get
			{
				throw new global::System.NotImplementedException("The member IXmlNode XmlComment.FirstChild is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IXmlNode%20XmlComment.FirstChild");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.IXmlNode global::Windows.Data.Xml.Dom.IXmlNode.LastChild
		{
			get
			{
				throw new global::System.NotImplementedException("The member IXmlNode XmlComment.LastChild is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IXmlNode%20XmlComment.LastChild");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		object global::Windows.Data.Xml.Dom.IXmlNode.LocalName
		{
			get
			{
				throw new global::System.NotImplementedException("The member object XmlComment.LocalName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20XmlComment.LocalName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		object global::Windows.Data.Xml.Dom.IXmlNode.NamespaceUri
		{
			get
			{
				throw new global::System.NotImplementedException("The member object XmlComment.NamespaceUri is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20XmlComment.NamespaceUri");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.IXmlNode global::Windows.Data.Xml.Dom.IXmlNode.NextSibling
		{
			get
			{
				throw new global::System.NotImplementedException("The member IXmlNode XmlComment.NextSibling is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IXmlNode%20XmlComment.NextSibling");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Data.Xml.Dom.IXmlNode.NodeName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string XmlComment.NodeName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20XmlComment.NodeName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.NodeType global::Windows.Data.Xml.Dom.IXmlNode.NodeType
		{
			get
			{
				throw new global::System.NotImplementedException("The member NodeType XmlComment.NodeType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=NodeType%20XmlComment.NodeType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		object global::Windows.Data.Xml.Dom.IXmlNode.NodeValue
		{
			get
			{
				throw new global::System.NotImplementedException("The member object XmlComment.NodeValue is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20XmlComment.NodeValue");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Data.Xml.Dom.XmlComment", "object XmlComment.NodeValue");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.XmlDocument global::Windows.Data.Xml.Dom.IXmlNode.OwnerDocument
		{
			get
			{
				throw new global::System.NotImplementedException("The member XmlDocument XmlComment.OwnerDocument is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XmlDocument%20XmlComment.OwnerDocument");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.IXmlNode global::Windows.Data.Xml.Dom.IXmlNode.ParentNode
		{
			get
			{
				throw new global::System.NotImplementedException("The member IXmlNode XmlComment.ParentNode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IXmlNode%20XmlComment.ParentNode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		object global::Windows.Data.Xml.Dom.IXmlNode.Prefix
		{
			get
			{
				throw new global::System.NotImplementedException("The member object XmlComment.Prefix is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20XmlComment.Prefix");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Data.Xml.Dom.XmlComment", "object XmlComment.Prefix");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Data.Xml.Dom.IXmlNode global::Windows.Data.Xml.Dom.IXmlNode.PreviousSibling
		{
			get
			{
				throw new global::System.NotImplementedException("The member IXmlNode XmlComment.PreviousSibling is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IXmlNode%20XmlComment.PreviousSibling");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Data.Xml.Dom.IXmlNodeSerializer.InnerText
		{
			get
			{
				throw new global::System.NotImplementedException("The member string XmlComment.InnerText is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20XmlComment.InnerText");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Data.Xml.Dom.XmlComment", "string XmlComment.InnerText");
			}
		}
#endif
		// Skipping already declared property Attributes
		// Skipping already declared property ChildNodes
		// Skipping already declared property Data
		// Skipping already declared property FirstChild
		// Skipping already declared property InnerText
		// Skipping already declared property LastChild
		// Skipping already declared property Length
		// Skipping already declared property LocalName
		// Skipping already declared property NamespaceUri
		// Skipping already declared property NextSibling
		// Skipping already declared property NodeName
		// Skipping already declared property NodeType
		// Skipping already declared property NodeValue
		// Skipping already declared property OwnerDocument
		// Skipping already declared property ParentNode
		// Skipping already declared property Prefix
		// Skipping already declared property PreviousSibling
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.FromAbi(nint)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.operator ==(Windows.Data.Xml.Dom.XmlComment, Windows.Data.Xml.Dom.XmlComment)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.operator !=(Windows.Data.Xml.Dom.XmlComment, Windows.Data.Xml.Dom.XmlComment)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Equals(Windows.Data.Xml.Dom.XmlComment)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Equals(object)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.GetHashCode()
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.WinRT.IWinRTObject.AdditionalTypeData.get
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.SubstringData(uint, uint)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.SubstringData(uint, uint)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.AppendData(string)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.AppendData(string)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.InsertData(uint, string)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.InsertData(uint, string)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.DeleteData(uint, uint)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.DeleteData(uint, uint)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.ReplaceData(uint, uint, string)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.ReplaceData(uint, uint, string)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.Data.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.Data.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlCharacterData.Length.get
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.HasChildNodes()
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.HasChildNodes()
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.InsertBefore(Windows.Data.Xml.Dom.IXmlNode, Windows.Data.Xml.Dom.IXmlNode)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.InsertBefore(Windows.Data.Xml.Dom.IXmlNode, Windows.Data.Xml.Dom.IXmlNode)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.ReplaceChild(Windows.Data.Xml.Dom.IXmlNode, Windows.Data.Xml.Dom.IXmlNode)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.ReplaceChild(Windows.Data.Xml.Dom.IXmlNode, Windows.Data.Xml.Dom.IXmlNode)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.RemoveChild(Windows.Data.Xml.Dom.IXmlNode)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.RemoveChild(Windows.Data.Xml.Dom.IXmlNode)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.AppendChild(Windows.Data.Xml.Dom.IXmlNode)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.AppendChild(Windows.Data.Xml.Dom.IXmlNode)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.CloneNode(bool)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.CloneNode(bool)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.Normalize()
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.Normalize()
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.Attributes.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.ChildNodes.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.FirstChild.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.LastChild.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.LocalName.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.NamespaceUri.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.NextSibling.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.NodeName.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.NodeType.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.NodeValue.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.NodeValue.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.OwnerDocument.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.ParentNode.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.Prefix.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.Prefix.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNode.PreviousSibling.get
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.GetXml()
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSerializer.GetXml()
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSerializer.InnerText.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSerializer.InnerText.set
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.SelectSingleNode(string)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSelector.SelectSingleNode(string)
		// Skipping already declared method Windows.Data.Xml.Dom.XmlComment.SelectNodes(string)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSelector.SelectNodes(string)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Data.Xml.Dom.IXmlNode SelectSingleNodeNS(string xpath, object namespaces)
		{
			throw new global::System.NotImplementedException("The member IXmlNode XmlComment.SelectSingleNodeNS(string xpath, object namespaces) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IXmlNode%20XmlComment.SelectSingleNodeNS%28string%20xpath%2C%20object%20namespaces%29");
		}
#endif
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSelector.SelectSingleNodeNS(string, object)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Data.Xml.Dom.XmlNodeList SelectNodesNS(string xpath, object namespaces)
		{
			throw new global::System.NotImplementedException("The member XmlNodeList XmlComment.SelectNodesNS(string xpath, object namespaces) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XmlNodeList%20XmlComment.SelectNodesNS%28string%20xpath%2C%20object%20namespaces%29");
		}
#endif
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Windows.Data.Xml.Dom.IXmlNodeSelector.SelectNodesNS(string, object)
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Attributes.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.ChildNodes.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Data.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Data.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.FirstChild.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.InnerText.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.InnerText.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.LastChild.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Length.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.LocalName.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.NamespaceUri.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.NextSibling.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.NodeName.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.NodeType.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.NodeValue.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.NodeValue.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.OwnerDocument.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.ParentNode.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Prefix.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.Prefix.set
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.PreviousSibling.get
		// Forced skipping of method Windows.Data.Xml.Dom.XmlComment.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Data.Xml.Dom.IXmlCharacterData
		// Processing: Windows.Data.Xml.Dom.IXmlNode
		// Processing: Windows.Data.Xml.Dom.IXmlNodeSelector
		// Processing: Windows.Data.Xml.Dom.IXmlNodeSerializer
	}
}
