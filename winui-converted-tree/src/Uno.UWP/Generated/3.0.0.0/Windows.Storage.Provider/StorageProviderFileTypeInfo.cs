// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage.Provider
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class StorageProviderFileTypeInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string FileExtension
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderFileTypeInfo.FileExtension is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderFileTypeInfo.FileExtension");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string IconResource
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderFileTypeInfo.IconResource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderFileTypeInfo.IconResource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public StorageProviderFileTypeInfo(string fileExtension, string iconResource)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderFileTypeInfo", "StorageProviderFileTypeInfo.StorageProviderFileTypeInfo(string fileExtension, string iconResource)");
		}
#endif
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.StorageProviderFileTypeInfo(string, string)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.FromAbi(nint)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.operator ==(Windows.Storage.Provider.StorageProviderFileTypeInfo, Windows.Storage.Provider.StorageProviderFileTypeInfo)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.operator !=(Windows.Storage.Provider.StorageProviderFileTypeInfo, Windows.Storage.Provider.StorageProviderFileTypeInfo)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.Equals(Windows.Storage.Provider.StorageProviderFileTypeInfo)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.Equals(object)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.GetHashCode()
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.FileExtension.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.IconResource.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderFileTypeInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
