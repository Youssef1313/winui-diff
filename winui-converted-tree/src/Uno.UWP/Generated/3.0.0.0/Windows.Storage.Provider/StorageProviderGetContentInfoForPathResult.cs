// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage.Provider
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class StorageProviderGetContentInfoForPathResult
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ContentId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderGetContentInfoForPathResult.ContentId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderGetContentInfoForPathResult.ContentId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult", "string StorageProviderGetContentInfoForPathResult.ContentId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ContentUri
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderGetContentInfoForPathResult.ContentUri is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderGetContentInfoForPathResult.ContentUri");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult", "string StorageProviderGetContentInfoForPathResult.ContentUri");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderUriSourceStatus Status
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderUriSourceStatus StorageProviderGetContentInfoForPathResult.Status is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderUriSourceStatus%20StorageProviderGetContentInfoForPathResult.Status");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult", "StorageProviderUriSourceStatus StorageProviderGetContentInfoForPathResult.Status");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public StorageProviderGetContentInfoForPathResult()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult", "StorageProviderGetContentInfoForPathResult.StorageProviderGetContentInfoForPathResult()");
		}
#endif
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.StorageProviderGetContentInfoForPathResult()
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.FromAbi(nint)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.operator ==(Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult, Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.operator !=(Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult, Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.Equals(Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.Equals(object)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.GetHashCode()
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.ContentId.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.ContentId.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.ContentUri.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.ContentUri.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.Status.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.Status.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderGetContentInfoForPathResult.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
