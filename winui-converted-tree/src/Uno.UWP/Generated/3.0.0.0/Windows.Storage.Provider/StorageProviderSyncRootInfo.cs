// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage.Provider
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class StorageProviderSyncRootInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AllowPinning
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool StorageProviderSyncRootInfo.AllowPinning is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20StorageProviderSyncRootInfo.AllowPinning");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "bool StorageProviderSyncRootInfo.AllowPinning");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer Context
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer StorageProviderSyncRootInfo.Context is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20StorageProviderSyncRootInfo.Context");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "IBuffer StorageProviderSyncRootInfo.Context");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayNameResource
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderSyncRootInfo.DisplayNameResource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderSyncRootInfo.DisplayNameResource");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "string StorageProviderSyncRootInfo.DisplayNameResource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Storage.Provider.StorageProviderFileTypeInfo> FallbackFileTypeInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<StorageProviderFileTypeInfo> StorageProviderSyncRootInfo.FallbackFileTypeInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CStorageProviderFileTypeInfo%3E%20StorageProviderSyncRootInfo.FallbackFileTypeInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderHardlinkPolicy HardlinkPolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderHardlinkPolicy StorageProviderSyncRootInfo.HardlinkPolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderHardlinkPolicy%20StorageProviderSyncRootInfo.HardlinkPolicy");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderHardlinkPolicy StorageProviderSyncRootInfo.HardlinkPolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderHydrationPolicy HydrationPolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderHydrationPolicy StorageProviderSyncRootInfo.HydrationPolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderHydrationPolicy%20StorageProviderSyncRootInfo.HydrationPolicy");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderHydrationPolicy StorageProviderSyncRootInfo.HydrationPolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderHydrationPolicyModifier HydrationPolicyModifier
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderHydrationPolicyModifier StorageProviderSyncRootInfo.HydrationPolicyModifier is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderHydrationPolicyModifier%20StorageProviderSyncRootInfo.HydrationPolicyModifier");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderHydrationPolicyModifier StorageProviderSyncRootInfo.HydrationPolicyModifier");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string IconResource
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderSyncRootInfo.IconResource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderSyncRootInfo.IconResource");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "string StorageProviderSyncRootInfo.IconResource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderSyncRootInfo.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderSyncRootInfo.Id");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "string StorageProviderSyncRootInfo.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderInSyncPolicy InSyncPolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderInSyncPolicy StorageProviderSyncRootInfo.InSyncPolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderInSyncPolicy%20StorageProviderSyncRootInfo.InSyncPolicy");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderInSyncPolicy StorageProviderSyncRootInfo.InSyncPolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.IStorageFolder Path
		{
			get
			{
				throw new global::System.NotImplementedException("The member IStorageFolder StorageProviderSyncRootInfo.Path is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IStorageFolder%20StorageProviderSyncRootInfo.Path");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "IStorageFolder StorageProviderSyncRootInfo.Path");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderPopulationPolicy PopulationPolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderPopulationPolicy StorageProviderSyncRootInfo.PopulationPolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderPopulationPolicy%20StorageProviderSyncRootInfo.PopulationPolicy");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderPopulationPolicy StorageProviderSyncRootInfo.PopulationPolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Provider.StorageProviderProtectionMode ProtectionMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageProviderProtectionMode StorageProviderSyncRootInfo.ProtectionMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageProviderProtectionMode%20StorageProviderSyncRootInfo.ProtectionMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderProtectionMode StorageProviderSyncRootInfo.ProtectionMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid ProviderId
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid StorageProviderSyncRootInfo.ProviderId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20StorageProviderSyncRootInfo.ProviderId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "Guid StorageProviderSyncRootInfo.ProviderId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri RecycleBinUri
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri StorageProviderSyncRootInfo.RecycleBinUri is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20StorageProviderSyncRootInfo.RecycleBinUri");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "Uri StorageProviderSyncRootInfo.RecycleBinUri");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShowSiblingsAsGroup
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool StorageProviderSyncRootInfo.ShowSiblingsAsGroup is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20StorageProviderSyncRootInfo.ShowSiblingsAsGroup");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "bool StorageProviderSyncRootInfo.ShowSiblingsAsGroup");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Storage.Provider.StorageProviderItemPropertyDefinition> StorageProviderItemPropertyDefinitions
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<StorageProviderItemPropertyDefinition> StorageProviderSyncRootInfo.StorageProviderItemPropertyDefinitions is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CStorageProviderItemPropertyDefinition%3E%20StorageProviderSyncRootInfo.StorageProviderItemPropertyDefinitions");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Version
		{
			get
			{
				throw new global::System.NotImplementedException("The member string StorageProviderSyncRootInfo.Version is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20StorageProviderSyncRootInfo.Version");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "string StorageProviderSyncRootInfo.Version");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public StorageProviderSyncRootInfo()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Provider.StorageProviderSyncRootInfo", "StorageProviderSyncRootInfo.StorageProviderSyncRootInfo()");
		}
#endif
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.StorageProviderSyncRootInfo()
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.FromAbi(nint)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.operator ==(Windows.Storage.Provider.StorageProviderSyncRootInfo, Windows.Storage.Provider.StorageProviderSyncRootInfo)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.operator !=(Windows.Storage.Provider.StorageProviderSyncRootInfo, Windows.Storage.Provider.StorageProviderSyncRootInfo)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Equals(Windows.Storage.Provider.StorageProviderSyncRootInfo)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Equals(object)
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.GetHashCode()
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.AllowPinning.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.AllowPinning.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Context.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Context.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.DisplayNameResource.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.DisplayNameResource.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.FallbackFileTypeInfo.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.HardlinkPolicy.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.HardlinkPolicy.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.HydrationPolicy.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.HydrationPolicy.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.HydrationPolicyModifier.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.HydrationPolicyModifier.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.IconResource.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.IconResource.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Id.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Id.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.InSyncPolicy.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.InSyncPolicy.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Path.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Path.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.PopulationPolicy.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.PopulationPolicy.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.ProtectionMode.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.ProtectionMode.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.ProviderId.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.ProviderId.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.RecycleBinUri.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.RecycleBinUri.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.ShowSiblingsAsGroup.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.ShowSiblingsAsGroup.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.StorageProviderItemPropertyDefinitions.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Version.get
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.Version.set
		// Forced skipping of method Windows.Storage.Provider.StorageProviderSyncRootInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
