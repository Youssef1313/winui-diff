// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Notifications
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ToastNotificationManagerForUser
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ToastNotificationManagerForUser()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastNotificationHistory History
		{
			get
			{
				throw new global::System.NotImplementedException("The member ToastNotificationHistory ToastNotificationManagerForUser.History is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastNotificationHistory%20ToastNotificationManagerForUser.History");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.User User
		{
			get
			{
				throw new global::System.NotImplementedException("The member User ToastNotificationManagerForUser.User is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=User%20ToastNotificationManagerForUser.User");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.FromAbi(nint)
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.operator ==(Windows.UI.Notifications.ToastNotificationManagerForUser, Windows.UI.Notifications.ToastNotificationManagerForUser)
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.operator !=(Windows.UI.Notifications.ToastNotificationManagerForUser, Windows.UI.Notifications.ToastNotificationManagerForUser)
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.Equals(Windows.UI.Notifications.ToastNotificationManagerForUser)
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.Equals(object)
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.GetHashCode()
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastNotifier CreateToastNotifier()
		{
			throw new global::System.NotImplementedException("The member ToastNotifier ToastNotificationManagerForUser.CreateToastNotifier() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastNotifier%20ToastNotificationManagerForUser.CreateToastNotifier%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastNotifier CreateToastNotifier(string applicationId)
		{
			throw new global::System.NotImplementedException("The member ToastNotifier ToastNotificationManagerForUser.CreateToastNotifier(string applicationId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastNotifier%20ToastNotificationManagerForUser.CreateToastNotifier%28string%20applicationId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Notifications.ToastNotifier> GetToastNotifierForToastCollectionIdAsync(string collectionId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<ToastNotifier> ToastNotificationManagerForUser.GetToastNotifierForToastCollectionIdAsync(string collectionId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CToastNotifier%3E%20ToastNotificationManagerForUser.GetToastNotifierForToastCollectionIdAsync%28string%20collectionId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Notifications.ToastNotificationHistory> GetHistoryForToastCollectionIdAsync(string collectionId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<ToastNotificationHistory> ToastNotificationManagerForUser.GetHistoryForToastCollectionIdAsync(string collectionId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CToastNotificationHistory%3E%20ToastNotificationManagerForUser.GetHistoryForToastCollectionIdAsync%28string%20collectionId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastCollectionManager GetToastCollectionManager()
		{
			throw new global::System.NotImplementedException("The member ToastCollectionManager ToastNotificationManagerForUser.GetToastCollectionManager() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastCollectionManager%20ToastNotificationManagerForUser.GetToastCollectionManager%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastCollectionManager GetToastCollectionManager(string appId)
		{
			throw new global::System.NotImplementedException("The member ToastCollectionManager ToastNotificationManagerForUser.GetToastCollectionManager(string appId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastCollectionManager%20ToastNotificationManagerForUser.GetToastCollectionManager%28string%20appId%29");
		}
#endif
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.History.get
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.User.get
		// Forced skipping of method Windows.UI.Notifications.ToastNotificationManagerForUser.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
