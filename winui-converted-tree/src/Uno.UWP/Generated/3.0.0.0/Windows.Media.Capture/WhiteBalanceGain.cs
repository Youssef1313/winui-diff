// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct WhiteBalanceGain
	{
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.WhiteBalanceGain()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public WhiteBalanceGain(double _R, double _G, double _B)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.WhiteBalanceGain", "WhiteBalanceGain.WhiteBalanceGain(double _R, double _G, double _B)");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.WhiteBalanceGain(double, double, double)
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.operator ==(Windows.Media.Capture.WhiteBalanceGain, Windows.Media.Capture.WhiteBalanceGain)
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.operator !=(Windows.Media.Capture.WhiteBalanceGain, Windows.Media.Capture.WhiteBalanceGain)
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.Equals(Windows.Media.Capture.WhiteBalanceGain)
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.Equals(object)
		// Forced skipping of method Windows.Media.Capture.WhiteBalanceGain.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public double R;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public double G;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public double B;
#endif
	}
}
