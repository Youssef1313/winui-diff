// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppBroadcastPlugInManager
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppBroadcastPlugInManager()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastPlugIn DefaultPlugIn
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastPlugIn AppBroadcastPlugInManager.DefaultPlugIn is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastPlugIn%20AppBroadcastPlugInManager.DefaultPlugIn");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastPlugInManager", "AppBroadcastPlugIn AppBroadcastPlugInManager.DefaultPlugIn");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsBroadcastProviderAvailable
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppBroadcastPlugInManager.IsBroadcastProviderAvailable is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppBroadcastPlugInManager.IsBroadcastProviderAvailable");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Media.Capture.AppBroadcastPlugIn> PlugInList
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<AppBroadcastPlugIn> AppBroadcastPlugInManager.PlugInList is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CAppBroadcastPlugIn%3E%20AppBroadcastPlugInManager.PlugInList");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Media.Capture.AppBroadcastPlugInManager GetDefault()
		{
			throw new global::System.NotImplementedException("The member AppBroadcastPlugInManager AppBroadcastPlugInManager.GetDefault() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastPlugInManager%20AppBroadcastPlugInManager.GetDefault%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Media.Capture.AppBroadcastPlugInManager GetForUser(global::Windows.System.User user)
		{
			throw new global::System.NotImplementedException("The member AppBroadcastPlugInManager AppBroadcastPlugInManager.GetForUser(User user) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastPlugInManager%20AppBroadcastPlugInManager.GetForUser%28User%20user%29");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.operator ==(Windows.Media.Capture.AppBroadcastPlugInManager, Windows.Media.Capture.AppBroadcastPlugInManager)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.operator !=(Windows.Media.Capture.AppBroadcastPlugInManager, Windows.Media.Capture.AppBroadcastPlugInManager)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.Equals(Windows.Media.Capture.AppBroadcastPlugInManager)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.DefaultPlugIn.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.DefaultPlugIn.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.IsBroadcastProviderAvailable.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.PlugInList.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugInManager.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
