// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppBroadcastState
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppBroadcastState()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Security.Authentication.Web.WebAuthenticationResult AuthenticationResult
		{
			get
			{
				throw new global::System.NotImplementedException("The member WebAuthenticationResult AppBroadcastState.AuthenticationResult is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=WebAuthenticationResult%20AppBroadcastState.AuthenticationResult");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "WebAuthenticationResult AppBroadcastState.AuthenticationResult");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CameraCaptureError
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastState.CameraCaptureError is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastState.CameraCaptureError");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastCameraCaptureState CameraCaptureState
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastCameraCaptureState AppBroadcastState.CameraCaptureState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastCameraCaptureState%20AppBroadcastState.CameraCaptureState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Size EncodedVideoSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Size AppBroadcastState.EncodedVideoSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Size%20AppBroadcastState.EncodedVideoSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsCaptureTargetRunning
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppBroadcastState.IsCaptureTargetRunning is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppBroadcastState.IsCaptureTargetRunning");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint MicrophoneCaptureError
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastState.MicrophoneCaptureError is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastState.MicrophoneCaptureError");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastMicrophoneCaptureState MicrophoneCaptureState
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastMicrophoneCaptureState AppBroadcastState.MicrophoneCaptureState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastMicrophoneCaptureState%20AppBroadcastState.MicrophoneCaptureState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri OAuthCallbackUri
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri AppBroadcastState.OAuthCallbackUri is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20AppBroadcastState.OAuthCallbackUri");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri OAuthRequestUri
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri AppBroadcastState.OAuthRequestUri is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20AppBroadcastState.OAuthRequestUri");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastPlugInState PlugInState
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastPlugInState AppBroadcastState.PlugInState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastPlugInState%20AppBroadcastState.PlugInState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldCaptureCamera
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppBroadcastState.ShouldCaptureCamera is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppBroadcastState.ShouldCaptureCamera");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "bool AppBroadcastState.ShouldCaptureCamera");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldCaptureMicrophone
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppBroadcastState.ShouldCaptureMicrophone is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppBroadcastState.ShouldCaptureMicrophone");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "bool AppBroadcastState.ShouldCaptureMicrophone");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastSignInState SignInState
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastSignInState AppBroadcastState.SignInState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastSignInState%20AppBroadcastState.SignInState");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "AppBroadcastSignInState AppBroadcastState.SignInState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastStreamState StreamState
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastStreamState AppBroadcastState.StreamState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastStreamState%20AppBroadcastState.StreamState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastTerminationReason TerminationReason
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastTerminationReason AppBroadcastState.TerminationReason is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastTerminationReason%20AppBroadcastState.TerminationReason");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint TerminationReasonPlugInSpecific
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastState.TerminationReasonPlugInSpecific is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastState.TerminationReasonPlugInSpecific");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ViewerCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastState.ViewerCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastState.ViewerCount");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.operator ==(Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastState)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.operator !=(Windows.Media.Capture.AppBroadcastState, Windows.Media.Capture.AppBroadcastState)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.Equals(Windows.Media.Capture.AppBroadcastState)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void RestartMicrophoneCapture()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "void AppBroadcastState.RestartMicrophoneCapture()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void RestartCameraCapture()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "void AppBroadcastState.RestartCameraCapture()");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.CameraCaptureStateChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.CameraCaptureStateChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.CaptureTargetClosed.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.CaptureTargetClosed.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.MicrophoneCaptureStateChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.MicrophoneCaptureStateChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.PlugInStateChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.PlugInStateChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.StreamStateChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.StreamStateChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ViewerCountChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ViewerCountChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.AuthenticationResult.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.AuthenticationResult.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.CameraCaptureError.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.CameraCaptureState.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.EncodedVideoSize.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.IsCaptureTargetRunning.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.MicrophoneCaptureError.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.MicrophoneCaptureState.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.OAuthCallbackUri.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.OAuthRequestUri.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.PlugInState.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ShouldCaptureCamera.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ShouldCaptureCamera.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ShouldCaptureMicrophone.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ShouldCaptureMicrophone.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.SignInState.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.SignInState.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.StreamState.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.TerminationReason.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.TerminationReasonPlugInSpecific.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.ViewerCount.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastState.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastState, global::Windows.Media.Capture.AppBroadcastCameraCaptureStateChangedEventArgs> CameraCaptureStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastCameraCaptureStateChangedEventArgs> AppBroadcastState.CameraCaptureStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastCameraCaptureStateChangedEventArgs> AppBroadcastState.CameraCaptureStateChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastState, object> CaptureTargetClosed
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, object> AppBroadcastState.CaptureTargetClosed");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, object> AppBroadcastState.CaptureTargetClosed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastState, global::Windows.Media.Capture.AppBroadcastMicrophoneCaptureStateChangedEventArgs> MicrophoneCaptureStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastMicrophoneCaptureStateChangedEventArgs> AppBroadcastState.MicrophoneCaptureStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastMicrophoneCaptureStateChangedEventArgs> AppBroadcastState.MicrophoneCaptureStateChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastState, global::Windows.Media.Capture.AppBroadcastPlugInStateChangedEventArgs> PlugInStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastPlugInStateChangedEventArgs> AppBroadcastState.PlugInStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastPlugInStateChangedEventArgs> AppBroadcastState.PlugInStateChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastState, global::Windows.Media.Capture.AppBroadcastStreamStateChangedEventArgs> StreamStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastStreamStateChangedEventArgs> AppBroadcastState.StreamStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastStreamStateChangedEventArgs> AppBroadcastState.StreamStateChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastState, global::Windows.Media.Capture.AppBroadcastViewerCountChangedEventArgs> ViewerCountChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastViewerCountChangedEventArgs> AppBroadcastState.ViewerCountChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastState", "event TypedEventHandler<AppBroadcastState, AppBroadcastViewerCountChangedEventArgs> AppBroadcastState.ViewerCountChanged");
			}
		}
#endif
	}
}
