// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppBroadcastProviderSettings
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppBroadcastProviderSettings()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint AudioEncodingBitrate
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastProviderSettings.AudioEncodingBitrate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastProviderSettings.AudioEncodingBitrate");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "uint AppBroadcastProviderSettings.AudioEncodingBitrate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CustomVideoEncodingBitrate
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastProviderSettings.CustomVideoEncodingBitrate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastProviderSettings.CustomVideoEncodingBitrate");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "uint AppBroadcastProviderSettings.CustomVideoEncodingBitrate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CustomVideoEncodingHeight
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastProviderSettings.CustomVideoEncodingHeight is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastProviderSettings.CustomVideoEncodingHeight");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "uint AppBroadcastProviderSettings.CustomVideoEncodingHeight");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CustomVideoEncodingWidth
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastProviderSettings.CustomVideoEncodingWidth is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastProviderSettings.CustomVideoEncodingWidth");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "uint AppBroadcastProviderSettings.CustomVideoEncodingWidth");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DefaultBroadcastTitle
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastProviderSettings.DefaultBroadcastTitle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastProviderSettings.DefaultBroadcastTitle");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "string AppBroadcastProviderSettings.DefaultBroadcastTitle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastVideoEncodingBitrateMode VideoEncodingBitrateMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastVideoEncodingBitrateMode AppBroadcastProviderSettings.VideoEncodingBitrateMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastVideoEncodingBitrateMode%20AppBroadcastProviderSettings.VideoEncodingBitrateMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "AppBroadcastVideoEncodingBitrateMode AppBroadcastProviderSettings.VideoEncodingBitrateMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastVideoEncodingResolutionMode VideoEncodingResolutionMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastVideoEncodingResolutionMode AppBroadcastProviderSettings.VideoEncodingResolutionMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastVideoEncodingResolutionMode%20AppBroadcastProviderSettings.VideoEncodingResolutionMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastProviderSettings", "AppBroadcastVideoEncodingResolutionMode AppBroadcastProviderSettings.VideoEncodingResolutionMode");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.operator ==(Windows.Media.Capture.AppBroadcastProviderSettings, Windows.Media.Capture.AppBroadcastProviderSettings)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.operator !=(Windows.Media.Capture.AppBroadcastProviderSettings, Windows.Media.Capture.AppBroadcastProviderSettings)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.Equals(Windows.Media.Capture.AppBroadcastProviderSettings)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.AudioEncodingBitrate.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.AudioEncodingBitrate.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.CustomVideoEncodingBitrate.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.CustomVideoEncodingBitrate.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.CustomVideoEncodingHeight.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.CustomVideoEncodingHeight.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.CustomVideoEncodingWidth.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.CustomVideoEncodingWidth.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.DefaultBroadcastTitle.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.DefaultBroadcastTitle.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.VideoEncodingBitrateMode.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.VideoEncodingBitrateMode.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.VideoEncodingResolutionMode.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.VideoEncodingResolutionMode.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastProviderSettings.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
