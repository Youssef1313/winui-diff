// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppCaptureSettings
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppCaptureSettings()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureAlternateShortcutKeys AlternateShortcutKeys
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureAlternateShortcutKeys AppCaptureSettings.AlternateShortcutKeys is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureAlternateShortcutKeys%20AppCaptureSettings.AlternateShortcutKeys");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder AppCaptureDestinationFolder
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder AppCaptureSettings.AppCaptureDestinationFolder is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20AppCaptureSettings.AppCaptureDestinationFolder");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "StorageFolder AppCaptureSettings.AppCaptureDestinationFolder");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint AudioEncodingBitrate
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppCaptureSettings.AudioEncodingBitrate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppCaptureSettings.AudioEncodingBitrate");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "uint AppCaptureSettings.AudioEncodingBitrate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CustomVideoEncodingBitrate
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppCaptureSettings.CustomVideoEncodingBitrate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppCaptureSettings.CustomVideoEncodingBitrate");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "uint AppCaptureSettings.CustomVideoEncodingBitrate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CustomVideoEncodingHeight
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppCaptureSettings.CustomVideoEncodingHeight is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppCaptureSettings.CustomVideoEncodingHeight");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "uint AppCaptureSettings.CustomVideoEncodingHeight");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CustomVideoEncodingWidth
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppCaptureSettings.CustomVideoEncodingWidth is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppCaptureSettings.CustomVideoEncodingWidth");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "uint AppCaptureSettings.CustomVideoEncodingWidth");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool HasHardwareEncoder
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.HasHardwareEncoder is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.HasHardwareEncoder");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint HistoricalBufferLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppCaptureSettings.HistoricalBufferLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppCaptureSettings.HistoricalBufferLength");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "uint AppCaptureSettings.HistoricalBufferLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureHistoricalBufferLengthUnit HistoricalBufferLengthUnit
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureHistoricalBufferLengthUnit AppCaptureSettings.HistoricalBufferLengthUnit is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureHistoricalBufferLengthUnit%20AppCaptureSettings.HistoricalBufferLengthUnit");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "AppCaptureHistoricalBufferLengthUnit AppCaptureSettings.HistoricalBufferLengthUnit");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAppCaptureEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsAppCaptureEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsAppCaptureEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsAppCaptureEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAudioCaptureEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsAudioCaptureEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsAudioCaptureEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsAudioCaptureEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsCpuConstrained
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsCpuConstrained is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsCpuConstrained");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsCursorImageCaptureEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsCursorImageCaptureEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsCursorImageCaptureEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsCursorImageCaptureEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsDisabledByPolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsDisabledByPolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsDisabledByPolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsEchoCancellationEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsEchoCancellationEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsEchoCancellationEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsEchoCancellationEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsGpuConstrained
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsGpuConstrained is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsGpuConstrained");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHistoricalCaptureEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsHistoricalCaptureEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsHistoricalCaptureEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsHistoricalCaptureEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHistoricalCaptureOnBatteryAllowed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsHistoricalCaptureOnBatteryAllowed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsHistoricalCaptureOnBatteryAllowed");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsHistoricalCaptureOnBatteryAllowed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHistoricalCaptureOnWirelessDisplayAllowed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsHistoricalCaptureOnWirelessDisplayAllowed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsHistoricalCaptureOnWirelessDisplayAllowed");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsHistoricalCaptureOnWirelessDisplayAllowed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsMemoryConstrained
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsMemoryConstrained is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsMemoryConstrained");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsMicrophoneCaptureEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsMicrophoneCaptureEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsMicrophoneCaptureEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsMicrophoneCaptureEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsMicrophoneCaptureEnabledByDefault
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureSettings.IsMicrophoneCaptureEnabledByDefault is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureSettings.IsMicrophoneCaptureEnabledByDefault");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "bool AppCaptureSettings.IsMicrophoneCaptureEnabledByDefault");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan MaximumRecordLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan AppCaptureSettings.MaximumRecordLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20AppCaptureSettings.MaximumRecordLength");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "TimeSpan AppCaptureSettings.MaximumRecordLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double MicrophoneGain
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AppCaptureSettings.MicrophoneGain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AppCaptureSettings.MicrophoneGain");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "double AppCaptureSettings.MicrophoneGain");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder ScreenshotDestinationFolder
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder AppCaptureSettings.ScreenshotDestinationFolder is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20AppCaptureSettings.ScreenshotDestinationFolder");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "StorageFolder AppCaptureSettings.ScreenshotDestinationFolder");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double SystemAudioGain
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AppCaptureSettings.SystemAudioGain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AppCaptureSettings.SystemAudioGain");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "double AppCaptureSettings.SystemAudioGain");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureVideoEncodingBitrateMode VideoEncodingBitrateMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureVideoEncodingBitrateMode AppCaptureSettings.VideoEncodingBitrateMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureVideoEncodingBitrateMode%20AppCaptureSettings.VideoEncodingBitrateMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "AppCaptureVideoEncodingBitrateMode AppCaptureSettings.VideoEncodingBitrateMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureVideoEncodingFrameRateMode VideoEncodingFrameRateMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureVideoEncodingFrameRateMode AppCaptureSettings.VideoEncodingFrameRateMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureVideoEncodingFrameRateMode%20AppCaptureSettings.VideoEncodingFrameRateMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "AppCaptureVideoEncodingFrameRateMode AppCaptureSettings.VideoEncodingFrameRateMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureVideoEncodingResolutionMode VideoEncodingResolutionMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureVideoEncodingResolutionMode AppCaptureSettings.VideoEncodingResolutionMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureVideoEncodingResolutionMode%20AppCaptureSettings.VideoEncodingResolutionMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppCaptureSettings", "AppCaptureVideoEncodingResolutionMode AppCaptureSettings.VideoEncodingResolutionMode");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.operator ==(Windows.Media.Capture.AppCaptureSettings, Windows.Media.Capture.AppCaptureSettings)
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.operator !=(Windows.Media.Capture.AppCaptureSettings, Windows.Media.Capture.AppCaptureSettings)
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.Equals(Windows.Media.Capture.AppCaptureSettings)
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.AlternateShortcutKeys.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.AppCaptureDestinationFolder.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.AppCaptureDestinationFolder.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.AudioEncodingBitrate.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.AudioEncodingBitrate.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.CustomVideoEncodingBitrate.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.CustomVideoEncodingBitrate.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.CustomVideoEncodingHeight.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.CustomVideoEncodingHeight.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.CustomVideoEncodingWidth.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.CustomVideoEncodingWidth.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.HasHardwareEncoder.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.HistoricalBufferLength.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.HistoricalBufferLength.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.HistoricalBufferLengthUnit.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.HistoricalBufferLengthUnit.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsAppCaptureEnabled.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsAppCaptureEnabled.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsAudioCaptureEnabled.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsAudioCaptureEnabled.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsCpuConstrained.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsCursorImageCaptureEnabled.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsCursorImageCaptureEnabled.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsDisabledByPolicy.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsEchoCancellationEnabled.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsEchoCancellationEnabled.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsGpuConstrained.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsHistoricalCaptureEnabled.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsHistoricalCaptureEnabled.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsHistoricalCaptureOnBatteryAllowed.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsHistoricalCaptureOnBatteryAllowed.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsHistoricalCaptureOnWirelessDisplayAllowed.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsHistoricalCaptureOnWirelessDisplayAllowed.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsMemoryConstrained.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsMicrophoneCaptureEnabled.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsMicrophoneCaptureEnabled.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsMicrophoneCaptureEnabledByDefault.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.IsMicrophoneCaptureEnabledByDefault.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.MaximumRecordLength.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.MaximumRecordLength.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.MicrophoneGain.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.MicrophoneGain.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.ScreenshotDestinationFolder.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.ScreenshotDestinationFolder.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.SystemAudioGain.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.SystemAudioGain.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.VideoEncodingBitrateMode.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.VideoEncodingBitrateMode.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.VideoEncodingFrameRateMode.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.VideoEncodingFrameRateMode.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.VideoEncodingResolutionMode.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.VideoEncodingResolutionMode.set
		// Forced skipping of method Windows.Media.Capture.AppCaptureSettings.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
