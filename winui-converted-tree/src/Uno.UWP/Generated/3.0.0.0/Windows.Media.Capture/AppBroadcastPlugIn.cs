// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppBroadcastPlugIn
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppBroadcastPlugIn()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string AppId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastPlugIn.AppId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastPlugIn.AppId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastPlugIn.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastPlugIn.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IRandomAccessStreamReference Logo
		{
			get
			{
				throw new global::System.NotImplementedException("The member IRandomAccessStreamReference AppBroadcastPlugIn.Logo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IRandomAccessStreamReference%20AppBroadcastPlugIn.Logo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastProviderSettings ProviderSettings
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastProviderSettings AppBroadcastPlugIn.ProviderSettings is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastProviderSettings%20AppBroadcastPlugIn.ProviderSettings");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.operator ==(Windows.Media.Capture.AppBroadcastPlugIn, Windows.Media.Capture.AppBroadcastPlugIn)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.operator !=(Windows.Media.Capture.AppBroadcastPlugIn, Windows.Media.Capture.AppBroadcastPlugIn)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.Equals(Windows.Media.Capture.AppBroadcastPlugIn)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.AppId.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.DisplayName.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.Logo.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.ProviderSettings.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastPlugIn.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
