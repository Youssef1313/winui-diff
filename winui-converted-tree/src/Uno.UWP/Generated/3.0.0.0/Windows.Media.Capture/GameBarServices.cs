// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GameBarServices
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GameBarServices()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastServices AppBroadcastServices
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastServices GameBarServices.AppBroadcastServices is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastServices%20GameBarServices.AppBroadcastServices");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureServices AppCaptureServices
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureServices GameBarServices.AppCaptureServices is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureServices%20GameBarServices.AppCaptureServices");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SessionId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GameBarServices.SessionId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GameBarServices.SessionId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.GameBarTargetCapturePolicy TargetCapturePolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameBarTargetCapturePolicy GameBarServices.TargetCapturePolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameBarTargetCapturePolicy%20GameBarServices.TargetCapturePolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.GameBarServicesTargetInfo TargetInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameBarServicesTargetInfo GameBarServices.TargetInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameBarServicesTargetInfo%20GameBarServices.TargetInfo");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.GameBarServices.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.GameBarServices.operator ==(Windows.Media.Capture.GameBarServices, Windows.Media.Capture.GameBarServices)
		// Forced skipping of method Windows.Media.Capture.GameBarServices.operator !=(Windows.Media.Capture.GameBarServices, Windows.Media.Capture.GameBarServices)
		// Forced skipping of method Windows.Media.Capture.GameBarServices.Equals(Windows.Media.Capture.GameBarServices)
		// Forced skipping of method Windows.Media.Capture.GameBarServices.Equals(object)
		// Forced skipping of method Windows.Media.Capture.GameBarServices.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.GameBarServices.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void EnableCapture()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.GameBarServices", "void GameBarServices.EnableCapture()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void DisableCapture()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.GameBarServices", "void GameBarServices.DisableCapture()");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.GameBarServices.CommandReceived.add
		// Forced skipping of method Windows.Media.Capture.GameBarServices.CommandReceived.remove
		// Forced skipping of method Windows.Media.Capture.GameBarServices.AppBroadcastServices.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.AppCaptureServices.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.SessionId.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.TargetCapturePolicy.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.TargetInfo.get
		// Forced skipping of method Windows.Media.Capture.GameBarServices.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.GameBarServices, global::Windows.Media.Capture.GameBarServicesCommandEventArgs> CommandReceived
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.GameBarServices", "event TypedEventHandler<GameBarServices, GameBarServicesCommandEventArgs> GameBarServices.CommandReceived");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.GameBarServices", "event TypedEventHandler<GameBarServices, GameBarServicesCommandEventArgs> GameBarServices.CommandReceived");
			}
		}
#endif
	}
}
