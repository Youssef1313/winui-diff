// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppCaptureServices
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppCaptureServices()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool CanCapture
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppCaptureServices.CanCapture is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppCaptureServices.CanCapture");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureState State
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppCaptureState AppCaptureServices.State is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureState%20AppCaptureServices.State");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.operator ==(Windows.Media.Capture.AppCaptureServices, Windows.Media.Capture.AppCaptureServices)
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.operator !=(Windows.Media.Capture.AppCaptureServices, Windows.Media.Capture.AppCaptureServices)
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.Equals(Windows.Media.Capture.AppCaptureServices)
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureRecordOperation Record()
		{
			throw new global::System.NotImplementedException("The member AppCaptureRecordOperation AppCaptureServices.Record() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureRecordOperation%20AppCaptureServices.Record%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppCaptureRecordOperation RecordTimeSpan(global::System.DateTimeOffset startTime, global::System.TimeSpan duration)
		{
			throw new global::System.NotImplementedException("The member AppCaptureRecordOperation AppCaptureServices.RecordTimeSpan(DateTimeOffset startTime, TimeSpan duration) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppCaptureRecordOperation%20AppCaptureServices.RecordTimeSpan%28DateTimeOffset%20startTime%2C%20TimeSpan%20duration%29");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.CanCapture.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.State.get
		// Forced skipping of method Windows.Media.Capture.AppCaptureServices.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
