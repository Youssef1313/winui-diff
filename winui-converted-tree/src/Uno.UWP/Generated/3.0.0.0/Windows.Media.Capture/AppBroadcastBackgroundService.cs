// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppBroadcastBackgroundService
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppBroadcastBackgroundService()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string AppId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastBackgroundService.AppId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastBackgroundService.AppId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string BroadcastChannel
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastBackgroundService.BroadcastChannel is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastBackgroundService.BroadcastChannel");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "string AppBroadcastBackgroundService.BroadcastChannel");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string BroadcastLanguage
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastBackgroundService.BroadcastLanguage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastBackgroundService.BroadcastLanguage");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "string AppBroadcastBackgroundService.BroadcastLanguage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string BroadcastTitle
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastBackgroundService.BroadcastTitle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastBackgroundService.BroadcastTitle");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "string AppBroadcastBackgroundService.BroadcastTitle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastPlugInState PlugInState
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastPlugInState AppBroadcastBackgroundService.PlugInState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastPlugInState%20AppBroadcastBackgroundService.PlugInState");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "AppBroadcastPlugInState AppBroadcastBackgroundService.PlugInState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastBackgroundServiceSignInInfo SignInInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastBackgroundServiceSignInInfo AppBroadcastBackgroundService.SignInInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastBackgroundServiceSignInInfo%20AppBroadcastBackgroundService.SignInInfo");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "AppBroadcastBackgroundServiceSignInInfo AppBroadcastBackgroundService.SignInInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.AppBroadcastBackgroundServiceStreamInfo StreamInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppBroadcastBackgroundServiceStreamInfo AppBroadcastBackgroundService.StreamInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppBroadcastBackgroundServiceStreamInfo%20AppBroadcastBackgroundService.StreamInfo");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "AppBroadcastBackgroundServiceStreamInfo AppBroadcastBackgroundService.StreamInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string TitleId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppBroadcastBackgroundService.TitleId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppBroadcastBackgroundService.TitleId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ViewerCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppBroadcastBackgroundService.ViewerCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppBroadcastBackgroundService.ViewerCount");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "uint AppBroadcastBackgroundService.ViewerCount");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.operator ==(Windows.Media.Capture.AppBroadcastBackgroundService, Windows.Media.Capture.AppBroadcastBackgroundService)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.operator !=(Windows.Media.Capture.AppBroadcastBackgroundService, Windows.Media.Capture.AppBroadcastBackgroundService)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.Equals(Windows.Media.Capture.AppBroadcastBackgroundService)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.Equals(object)
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void TerminateBroadcast(global::Windows.Media.Capture.AppBroadcastTerminationReason reason, uint providerSpecificReason)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "void AppBroadcastBackgroundService.TerminateBroadcast(AppBroadcastTerminationReason reason, uint providerSpecificReason)");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.HeartbeatRequested.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.HeartbeatRequested.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastChannelChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastChannelChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastLanguageChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastLanguageChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastTitleChanged.add
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastTitleChanged.remove
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.AppId.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastChannel.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastChannel.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastLanguage.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastLanguage.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastTitle.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.BroadcastTitle.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.PlugInState.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.PlugInState.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.SignInInfo.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.SignInInfo.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.StreamInfo.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.StreamInfo.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.TitleId.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.ViewerCount.get
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.ViewerCount.set
		// Forced skipping of method Windows.Media.Capture.AppBroadcastBackgroundService.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastBackgroundService, global::Windows.Media.Capture.AppBroadcastHeartbeatRequestedEventArgs> HeartbeatRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, AppBroadcastHeartbeatRequestedEventArgs> AppBroadcastBackgroundService.HeartbeatRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, AppBroadcastHeartbeatRequestedEventArgs> AppBroadcastBackgroundService.HeartbeatRequested");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastBackgroundService, object> BroadcastChannelChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, object> AppBroadcastBackgroundService.BroadcastChannelChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, object> AppBroadcastBackgroundService.BroadcastChannelChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastBackgroundService, object> BroadcastLanguageChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, object> AppBroadcastBackgroundService.BroadcastLanguageChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, object> AppBroadcastBackgroundService.BroadcastLanguageChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Capture.AppBroadcastBackgroundService, object> BroadcastTitleChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, object> AppBroadcastBackgroundService.BroadcastTitleChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.AppBroadcastBackgroundService", "event TypedEventHandler<AppBroadcastBackgroundService, object> AppBroadcastBackgroundService.BroadcastTitleChanged");
			}
		}
#endif
	}
}
