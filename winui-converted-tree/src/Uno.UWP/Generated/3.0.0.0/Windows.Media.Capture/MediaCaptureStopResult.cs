// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MediaCaptureStopResult : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal MediaCaptureStopResult()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.VideoFrame LastFrame
		{
			get
			{
				throw new global::System.NotImplementedException("The member VideoFrame MediaCaptureStopResult.LastFrame is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoFrame%20MediaCaptureStopResult.LastFrame");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan RecordDuration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan MediaCaptureStopResult.RecordDuration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20MediaCaptureStopResult.RecordDuration");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.FromAbi(nint)
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.operator ==(Windows.Media.Capture.MediaCaptureStopResult, Windows.Media.Capture.MediaCaptureStopResult)
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.operator !=(Windows.Media.Capture.MediaCaptureStopResult, Windows.Media.Capture.MediaCaptureStopResult)
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.Equals(Windows.Media.Capture.MediaCaptureStopResult)
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.Equals(object)
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.GetHashCode()
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Capture.MediaCaptureStopResult", "void MediaCaptureStopResult.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.LastFrame.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.RecordDuration.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureStopResult.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
