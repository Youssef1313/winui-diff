// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Gaming.XboxLive.Storage
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GameSaveProviderGetResult
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GameSaveProviderGetResult()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Gaming.XboxLive.Storage.GameSaveErrorStatus Status
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameSaveErrorStatus GameSaveProviderGetResult.Status is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameSaveErrorStatus%20GameSaveProviderGetResult.Status");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Gaming.XboxLive.Storage.GameSaveProvider Value
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameSaveProvider GameSaveProviderGetResult.Value is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameSaveProvider%20GameSaveProviderGetResult.Value");
			}
		}
#endif
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.FromAbi(nint)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.operator ==(Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult, Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.operator !=(Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult, Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.Equals(Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.Equals(object)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.GetHashCode()
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.Status.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.Value.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveProviderGetResult.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
