// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Gaming.XboxLive.Storage
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GameSaveContainerInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GameSaveContainerInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GameSaveContainerInfo.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GameSaveContainerInfo.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset LastModifiedTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset GameSaveContainerInfo.LastModifiedTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20GameSaveContainerInfo.LastModifiedTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Name
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GameSaveContainerInfo.Name is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GameSaveContainerInfo.Name");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool NeedsSync
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GameSaveContainerInfo.NeedsSync is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GameSaveContainerInfo.NeedsSync");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ulong TotalSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member ulong GameSaveContainerInfo.TotalSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ulong%20GameSaveContainerInfo.TotalSize");
			}
		}
#endif
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.FromAbi(nint)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.operator ==(Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo, Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.operator !=(Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo, Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.Equals(Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.Equals(object)
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.GetHashCode()
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.DisplayName.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.LastModifiedTime.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.Name.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.NeedsSync.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.TotalSize.get
		// Forced skipping of method Windows.Gaming.XboxLive.Storage.GameSaveContainerInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
