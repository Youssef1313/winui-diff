// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.System
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ProcessLauncherOptions
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IOutputStream StandardError
		{
			get
			{
				throw new global::System.NotImplementedException("The member IOutputStream ProcessLauncherOptions.StandardError is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IOutputStream%20ProcessLauncherOptions.StandardError");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.ProcessLauncherOptions", "IOutputStream ProcessLauncherOptions.StandardError");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IInputStream StandardInput
		{
			get
			{
				throw new global::System.NotImplementedException("The member IInputStream ProcessLauncherOptions.StandardInput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IInputStream%20ProcessLauncherOptions.StandardInput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.ProcessLauncherOptions", "IInputStream ProcessLauncherOptions.StandardInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IOutputStream StandardOutput
		{
			get
			{
				throw new global::System.NotImplementedException("The member IOutputStream ProcessLauncherOptions.StandardOutput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IOutputStream%20ProcessLauncherOptions.StandardOutput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.ProcessLauncherOptions", "IOutputStream ProcessLauncherOptions.StandardOutput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string WorkingDirectory
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ProcessLauncherOptions.WorkingDirectory is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ProcessLauncherOptions.WorkingDirectory");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.ProcessLauncherOptions", "string ProcessLauncherOptions.WorkingDirectory");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ProcessLauncherOptions()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.ProcessLauncherOptions", "ProcessLauncherOptions.ProcessLauncherOptions()");
		}
#endif
		// Forced skipping of method Windows.System.ProcessLauncherOptions.ProcessLauncherOptions()
		// Forced skipping of method Windows.System.ProcessLauncherOptions.FromAbi(nint)
		// Forced skipping of method Windows.System.ProcessLauncherOptions.operator ==(Windows.System.ProcessLauncherOptions, Windows.System.ProcessLauncherOptions)
		// Forced skipping of method Windows.System.ProcessLauncherOptions.operator !=(Windows.System.ProcessLauncherOptions, Windows.System.ProcessLauncherOptions)
		// Forced skipping of method Windows.System.ProcessLauncherOptions.Equals(Windows.System.ProcessLauncherOptions)
		// Forced skipping of method Windows.System.ProcessLauncherOptions.Equals(object)
		// Forced skipping of method Windows.System.ProcessLauncherOptions.GetHashCode()
		// Forced skipping of method Windows.System.ProcessLauncherOptions.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.StandardError.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.StandardError.set
		// Forced skipping of method Windows.System.ProcessLauncherOptions.StandardInput.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.StandardInput.set
		// Forced skipping of method Windows.System.ProcessLauncherOptions.StandardOutput.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.StandardOutput.set
		// Forced skipping of method Windows.System.ProcessLauncherOptions.WorkingDirectory.get
		// Forced skipping of method Windows.System.ProcessLauncherOptions.WorkingDirectory.set
		// Forced skipping of method Windows.System.ProcessLauncherOptions.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
