// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Audio
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AudioNodeEmitterConeProperties
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AudioNodeEmitterConeProperties()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double InnerAngle
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AudioNodeEmitterConeProperties.InnerAngle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AudioNodeEmitterConeProperties.InnerAngle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double OuterAngle
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AudioNodeEmitterConeProperties.OuterAngle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AudioNodeEmitterConeProperties.OuterAngle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double OuterAngleGain
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AudioNodeEmitterConeProperties.OuterAngleGain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AudioNodeEmitterConeProperties.OuterAngleGain");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.FromAbi(nint)
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.operator ==(Windows.Media.Audio.AudioNodeEmitterConeProperties, Windows.Media.Audio.AudioNodeEmitterConeProperties)
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.operator !=(Windows.Media.Audio.AudioNodeEmitterConeProperties, Windows.Media.Audio.AudioNodeEmitterConeProperties)
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.Equals(Windows.Media.Audio.AudioNodeEmitterConeProperties)
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.Equals(object)
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.GetHashCode()
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.InnerAngle.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.OuterAngle.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.OuterAngleGain.get
		// Forced skipping of method Windows.Media.Audio.AudioNodeEmitterConeProperties.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
