// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Audio
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class EchoEffectDefinition : global::Windows.Media.Effects.IAudioEffectDefinition
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Media.Effects.IAudioEffectDefinition.ActivatableClassId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string EchoEffectDefinition.ActivatableClassId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20EchoEffectDefinition.ActivatableClassId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Foundation.Collections.IPropertySet global::Windows.Media.Effects.IAudioEffectDefinition.Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPropertySet EchoEffectDefinition.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPropertySet%20EchoEffectDefinition.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ActivatableClassId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string EchoEffectDefinition.ActivatableClassId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20EchoEffectDefinition.ActivatableClassId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double Delay
		{
			get
			{
				throw new global::System.NotImplementedException("The member double EchoEffectDefinition.Delay is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20EchoEffectDefinition.Delay");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Audio.EchoEffectDefinition", "double EchoEffectDefinition.Delay");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double Feedback
		{
			get
			{
				throw new global::System.NotImplementedException("The member double EchoEffectDefinition.Feedback is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20EchoEffectDefinition.Feedback");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Audio.EchoEffectDefinition", "double EchoEffectDefinition.Feedback");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.IPropertySet Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPropertySet EchoEffectDefinition.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPropertySet%20EchoEffectDefinition.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double WetDryMix
		{
			get
			{
				throw new global::System.NotImplementedException("The member double EchoEffectDefinition.WetDryMix is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20EchoEffectDefinition.WetDryMix");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Audio.EchoEffectDefinition", "double EchoEffectDefinition.WetDryMix");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public EchoEffectDefinition(global::Windows.Media.Audio.AudioGraph audioGraph)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Audio.EchoEffectDefinition", "EchoEffectDefinition.EchoEffectDefinition(AudioGraph audioGraph)");
		}
#endif
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.EchoEffectDefinition(Windows.Media.Audio.AudioGraph)
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.FromAbi(nint)
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.operator ==(Windows.Media.Audio.EchoEffectDefinition, Windows.Media.Audio.EchoEffectDefinition)
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.operator !=(Windows.Media.Audio.EchoEffectDefinition, Windows.Media.Audio.EchoEffectDefinition)
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Equals(Windows.Media.Audio.EchoEffectDefinition)
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Equals(object)
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.GetHashCode()
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Windows.Media.Effects.IAudioEffectDefinition.ActivatableClassId.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Windows.Media.Effects.IAudioEffectDefinition.Properties.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.ActivatableClassId.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Delay.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Delay.set
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Feedback.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Feedback.set
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.Properties.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.WetDryMix.get
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.WetDryMix.set
		// Forced skipping of method Windows.Media.Audio.EchoEffectDefinition.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Media.Effects.IAudioEffectDefinition
	}
}
