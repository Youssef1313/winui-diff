// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.SmartCards
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SmartCardCryptogramStorageKeyInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SmartCardCryptogramStorageKeyInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer Attestation
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer SmartCardCryptogramStorageKeyInfo.Attestation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20SmartCardCryptogramStorageKeyInfo.Attestation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer AttestationCertificateChain
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer SmartCardCryptogramStorageKeyInfo.AttestationCertificateChain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20SmartCardCryptogramStorageKeyInfo.AttestationCertificateChain");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.SmartCards.SmartCardCryptographicKeyAttestationStatus AttestationStatus
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmartCardCryptographicKeyAttestationStatus SmartCardCryptogramStorageKeyInfo.AttestationStatus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmartCardCryptographicKeyAttestationStatus%20SmartCardCryptogramStorageKeyInfo.AttestationStatus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyCapabilities Capabilities
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmartCardCryptogramStorageKeyCapabilities SmartCardCryptogramStorageKeyInfo.Capabilities is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmartCardCryptogramStorageKeyCapabilities%20SmartCardCryptogramStorageKeyInfo.Capabilities");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.SmartCards.SmartCardCryptogramGeneratorOperationStatus OperationStatus
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmartCardCryptogramGeneratorOperationStatus SmartCardCryptogramStorageKeyInfo.OperationStatus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmartCardCryptogramGeneratorOperationStatus%20SmartCardCryptogramStorageKeyInfo.OperationStatus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string OperationalRequirements
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SmartCardCryptogramStorageKeyInfo.OperationalRequirements is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SmartCardCryptogramStorageKeyInfo.OperationalRequirements");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer PublicKey
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer SmartCardCryptogramStorageKeyInfo.PublicKey is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20SmartCardCryptogramStorageKeyInfo.PublicKey");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Security.Cryptography.Core.CryptographicPublicKeyBlobType PublicKeyBlobType
		{
			get
			{
				throw new global::System.NotImplementedException("The member CryptographicPublicKeyBlobType SmartCardCryptogramStorageKeyInfo.PublicKeyBlobType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CryptographicPublicKeyBlobType%20SmartCardCryptogramStorageKeyInfo.PublicKeyBlobType");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.FromAbi(nint)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.operator ==(Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo, Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.operator !=(Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo, Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.Equals(Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.Equals(object)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.GetHashCode()
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.Attestation.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.AttestationCertificateChain.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.AttestationStatus.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.Capabilities.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.OperationStatus.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.OperationalRequirements.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.PublicKey.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.PublicKeyBlobType.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramStorageKeyInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
