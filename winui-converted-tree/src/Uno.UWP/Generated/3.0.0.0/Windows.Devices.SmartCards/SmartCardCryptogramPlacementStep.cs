// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.SmartCards
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SmartCardCryptogramPlacementStep
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.SmartCards.SmartCardCryptogramAlgorithm Algorithm
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmartCardCryptogramAlgorithm SmartCardCryptogramPlacementStep.Algorithm is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmartCardCryptogramAlgorithm%20SmartCardCryptogramPlacementStep.Algorithm");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "SmartCardCryptogramAlgorithm SmartCardCryptogramPlacementStep.Algorithm");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep ChainedOutputStep
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmartCardCryptogramPlacementStep SmartCardCryptogramPlacementStep.ChainedOutputStep is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmartCardCryptogramPlacementStep%20SmartCardCryptogramPlacementStep.ChainedOutputStep");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "SmartCardCryptogramPlacementStep SmartCardCryptogramPlacementStep.ChainedOutputStep");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int CryptogramLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SmartCardCryptogramPlacementStep.CryptogramLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SmartCardCryptogramPlacementStep.CryptogramLength");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "int SmartCardCryptogramPlacementStep.CryptogramLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CryptogramMaterialName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SmartCardCryptogramPlacementStep.CryptogramMaterialName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SmartCardCryptogramPlacementStep.CryptogramMaterialName");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "string SmartCardCryptogramPlacementStep.CryptogramMaterialName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CryptogramMaterialPackageName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SmartCardCryptogramPlacementStep.CryptogramMaterialPackageName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SmartCardCryptogramPlacementStep.CryptogramMaterialPackageName");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "string SmartCardCryptogramPlacementStep.CryptogramMaterialPackageName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int CryptogramOffset
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SmartCardCryptogramPlacementStep.CryptogramOffset is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SmartCardCryptogramPlacementStep.CryptogramOffset");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "int SmartCardCryptogramPlacementStep.CryptogramOffset");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.SmartCards.SmartCardCryptogramPlacementOptions CryptogramPlacementOptions
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmartCardCryptogramPlacementOptions SmartCardCryptogramPlacementStep.CryptogramPlacementOptions is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmartCardCryptogramPlacementOptions%20SmartCardCryptogramPlacementStep.CryptogramPlacementOptions");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "SmartCardCryptogramPlacementOptions SmartCardCryptogramPlacementStep.CryptogramPlacementOptions");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer SourceData
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer SmartCardCryptogramPlacementStep.SourceData is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20SmartCardCryptogramPlacementStep.SourceData");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "IBuffer SmartCardCryptogramPlacementStep.SourceData");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int TemplateOffset
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SmartCardCryptogramPlacementStep.TemplateOffset is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SmartCardCryptogramPlacementStep.TemplateOffset");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "int SmartCardCryptogramPlacementStep.TemplateOffset");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SmartCardCryptogramPlacementStep()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep", "SmartCardCryptogramPlacementStep.SmartCardCryptogramPlacementStep()");
		}
#endif
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.SmartCardCryptogramPlacementStep()
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.FromAbi(nint)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.operator ==(Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep, Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.operator !=(Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep, Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.Equals(Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.Equals(object)
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.GetHashCode()
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.Algorithm.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.Algorithm.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.ChainedOutputStep.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.ChainedOutputStep.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramLength.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramLength.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramMaterialName.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramMaterialName.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramMaterialPackageName.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramMaterialPackageName.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramOffset.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramOffset.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramPlacementOptions.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.CryptogramPlacementOptions.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.SourceData.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.SourceData.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.TemplateOffset.get
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.TemplateOffset.set
		// Forced skipping of method Windows.Devices.SmartCards.SmartCardCryptogramPlacementStep.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
