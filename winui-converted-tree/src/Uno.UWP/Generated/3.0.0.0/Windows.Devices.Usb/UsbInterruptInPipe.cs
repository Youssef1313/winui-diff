// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Usb
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class UsbInterruptInPipe
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal UsbInterruptInPipe()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Usb.UsbInterruptInEndpointDescriptor EndpointDescriptor
		{
			get
			{
				throw new global::System.NotImplementedException("The member UsbInterruptInEndpointDescriptor UsbInterruptInPipe.EndpointDescriptor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=UsbInterruptInEndpointDescriptor%20UsbInterruptInPipe.EndpointDescriptor");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.operator ==(Windows.Devices.Usb.UsbInterruptInPipe, Windows.Devices.Usb.UsbInterruptInPipe)
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.operator !=(Windows.Devices.Usb.UsbInterruptInPipe, Windows.Devices.Usb.UsbInterruptInPipe)
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.Equals(Windows.Devices.Usb.UsbInterruptInPipe)
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.Equals(object)
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.GetHashCode()
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction ClearStallAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction UsbInterruptInPipe.ClearStallAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20UsbInterruptInPipe.ClearStallAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.DataReceived.add
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.DataReceived.remove
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.EndpointDescriptor.get
		// Forced skipping of method Windows.Devices.Usb.UsbInterruptInPipe.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Usb.UsbInterruptInPipe, global::Windows.Devices.Usb.UsbInterruptInEventArgs> DataReceived
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Usb.UsbInterruptInPipe", "event TypedEventHandler<UsbInterruptInPipe, UsbInterruptInEventArgs> UsbInterruptInPipe.DataReceived");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Usb.UsbInterruptInPipe", "event TypedEventHandler<UsbInterruptInPipe, UsbInterruptInEventArgs> UsbInterruptInPipe.DataReceived");
			}
		}
#endif
	}
}
