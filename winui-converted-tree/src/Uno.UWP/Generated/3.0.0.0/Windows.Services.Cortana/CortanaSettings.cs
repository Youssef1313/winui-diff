// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Cortana
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class CortanaSettings
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal CortanaSettings()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool HasUserConsentToVoiceActivation
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CortanaSettings.HasUserConsentToVoiceActivation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CortanaSettings.HasUserConsentToVoiceActivation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsVoiceActivationEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CortanaSettings.IsVoiceActivationEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CortanaSettings.IsVoiceActivationEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.Cortana.CortanaSettings", "bool CortanaSettings.IsVoiceActivationEnabled");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool IsSupported()
		{
			throw new global::System.NotImplementedException("The member bool CortanaSettings.IsSupported() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CortanaSettings.IsSupported%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Services.Cortana.CortanaSettings GetDefault()
		{
			throw new global::System.NotImplementedException("The member CortanaSettings CortanaSettings.GetDefault() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CortanaSettings%20CortanaSettings.GetDefault%28%29");
		}
#endif
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.FromAbi(nint)
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.operator ==(Windows.Services.Cortana.CortanaSettings, Windows.Services.Cortana.CortanaSettings)
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.operator !=(Windows.Services.Cortana.CortanaSettings, Windows.Services.Cortana.CortanaSettings)
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.Equals(Windows.Services.Cortana.CortanaSettings)
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.Equals(object)
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.GetHashCode()
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.HasUserConsentToVoiceActivation.get
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.IsVoiceActivationEnabled.get
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.IsVoiceActivationEnabled.set
		// Forced skipping of method Windows.Services.Cortana.CortanaSettings.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
