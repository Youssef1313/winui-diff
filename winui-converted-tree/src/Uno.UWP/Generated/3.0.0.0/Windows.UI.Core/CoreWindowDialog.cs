// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class CoreWindowDialog
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Popups.UICommandInvokedHandler BackButtonCommand
		{
			get
			{
				throw new global::System.NotImplementedException("The member UICommandInvokedHandler CoreWindowDialog.BackButtonCommand is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=UICommandInvokedHandler%20CoreWindowDialog.BackButtonCommand");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "UICommandInvokedHandler CoreWindowDialog.BackButtonCommand");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CancelCommandIndex
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint CoreWindowDialog.CancelCommandIndex is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20CoreWindowDialog.CancelCommandIndex");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "uint CoreWindowDialog.CancelCommandIndex");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.UI.Popups.IUICommand> Commands
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<IUICommand> CoreWindowDialog.Commands is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CIUICommand%3E%20CoreWindowDialog.Commands");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint DefaultCommandIndex
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint CoreWindowDialog.DefaultCommandIndex is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20CoreWindowDialog.DefaultCommandIndex");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "uint CoreWindowDialog.DefaultCommandIndex");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int IsInteractionDelayed
		{
			get
			{
				throw new global::System.NotImplementedException("The member int CoreWindowDialog.IsInteractionDelayed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20CoreWindowDialog.IsInteractionDelayed");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "int CoreWindowDialog.IsInteractionDelayed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Size MaxSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Size CoreWindowDialog.MaxSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Size%20CoreWindowDialog.MaxSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Size MinSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Size CoreWindowDialog.MinSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Size%20CoreWindowDialog.MinSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Title
		{
			get
			{
				throw new global::System.NotImplementedException("The member string CoreWindowDialog.Title is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20CoreWindowDialog.Title");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "string CoreWindowDialog.Title");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public CoreWindowDialog()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "CoreWindowDialog.CoreWindowDialog()");
		}
#endif
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.CoreWindowDialog()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public CoreWindowDialog(string title)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "CoreWindowDialog.CoreWindowDialog(string title)");
		}
#endif
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.CoreWindowDialog(string)
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.FromAbi(nint)
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.operator ==(Windows.UI.Core.CoreWindowDialog, Windows.UI.Core.CoreWindowDialog)
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.operator !=(Windows.UI.Core.CoreWindowDialog, Windows.UI.Core.CoreWindowDialog)
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Equals(Windows.UI.Core.CoreWindowDialog)
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Equals(object)
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.GetHashCode()
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> ShowAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IUICommand> CoreWindowDialog.ShowAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIUICommand%3E%20CoreWindowDialog.ShowAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Showing.add
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Showing.remove
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.BackButtonCommand.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.BackButtonCommand.set
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.CancelCommandIndex.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.CancelCommandIndex.set
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Commands.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.DefaultCommandIndex.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.DefaultCommandIndex.set
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.IsInteractionDelayed.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.IsInteractionDelayed.set
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.MaxSize.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.MinSize.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Title.get
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.Title.set
		// Forced skipping of method Windows.UI.Core.CoreWindowDialog.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.CoreWindowPopupShowingEventArgs> Showing
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "event TypedEventHandler<CoreWindow, CoreWindowPopupShowingEventArgs> CoreWindowDialog.Showing");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreWindowDialog", "event TypedEventHandler<CoreWindow, CoreWindowPopupShowingEventArgs> CoreWindowDialog.Showing");
			}
		}
#endif
	}
}
