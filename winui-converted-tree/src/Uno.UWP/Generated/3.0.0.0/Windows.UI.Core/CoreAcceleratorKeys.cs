// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class CoreAcceleratorKeys : global::Windows.UI.Core.ICoreAcceleratorKeys
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal CoreAcceleratorKeys()
		{
		}
#endif
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.FromAbi(nint)
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.operator ==(Windows.UI.Core.CoreAcceleratorKeys, Windows.UI.Core.CoreAcceleratorKeys)
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.operator !=(Windows.UI.Core.CoreAcceleratorKeys, Windows.UI.Core.CoreAcceleratorKeys)
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.Equals(Windows.UI.Core.CoreAcceleratorKeys)
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.Equals(object)
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.GetHashCode()
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.AcceleratorKeyActivated.add
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.AcceleratorKeyActivated.remove
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.Windows.UI.Core.ICoreAcceleratorKeys.AcceleratorKeyActivated.add
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.Windows.UI.Core.ICoreAcceleratorKeys.AcceleratorKeyActivated.remove
		// Forced skipping of method Windows.UI.Core.CoreAcceleratorKeys.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreDispatcher, global::Windows.UI.Core.AcceleratorKeyEventArgs> AcceleratorKeyActivated
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreAcceleratorKeys", "event TypedEventHandler<CoreDispatcher, AcceleratorKeyEventArgs> CoreAcceleratorKeys.AcceleratorKeyActivated");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreAcceleratorKeys", "event TypedEventHandler<CoreDispatcher, AcceleratorKeyEventArgs> CoreAcceleratorKeys.AcceleratorKeyActivated");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		event global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreDispatcher, global::Windows.UI.Core.AcceleratorKeyEventArgs> global::Windows.UI.Core.ICoreAcceleratorKeys.AcceleratorKeyActivated
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreAcceleratorKeys", "event TypedEventHandler<CoreDispatcher, AcceleratorKeyEventArgs> CoreAcceleratorKeys.AcceleratorKeyActivated");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.CoreAcceleratorKeys", "event TypedEventHandler<CoreDispatcher, AcceleratorKeyEventArgs> CoreAcceleratorKeys.AcceleratorKeyActivated");
			}
		}
#endif
		// Processing: Windows.UI.Core.ICoreAcceleratorKeys
	}
}
