// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.ConversationalAgent
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ConversationalAgentSignal
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ConversationalAgentSignal()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsSignalVerificationRequired
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ConversationalAgentSignal.IsSignalVerificationRequired is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConversationalAgentSignal.IsSignalVerificationRequired");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal", "bool ConversationalAgentSignal.IsSignalVerificationRequired");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public object SignalContext
		{
			get
			{
				throw new global::System.NotImplementedException("The member object ConversationalAgentSignal.SignalContext is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20ConversationalAgentSignal.SignalContext");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal", "object ConversationalAgentSignal.SignalContext");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan SignalEnd
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ConversationalAgentSignal.SignalEnd is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ConversationalAgentSignal.SignalEnd");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal", "TimeSpan ConversationalAgentSignal.SignalEnd");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SignalId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ConversationalAgentSignal.SignalId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ConversationalAgentSignal.SignalId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal", "string ConversationalAgentSignal.SignalId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SignalName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ConversationalAgentSignal.SignalName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ConversationalAgentSignal.SignalName");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal", "string ConversationalAgentSignal.SignalName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan SignalStart
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ConversationalAgentSignal.SignalStart is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ConversationalAgentSignal.SignalStart");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal", "TimeSpan ConversationalAgentSignal.SignalStart");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.operator ==(Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal, Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal)
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.operator !=(Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal, Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal)
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.Equals(Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal)
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.IsSignalVerificationRequired.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.IsSignalVerificationRequired.set
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalContext.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalContext.set
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalEnd.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalEnd.set
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalId.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalId.set
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalName.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalName.set
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalStart.get
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.SignalStart.set
		// Forced skipping of method Windows.ApplicationModel.ConversationalAgent.ConversationalAgentSignal.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
