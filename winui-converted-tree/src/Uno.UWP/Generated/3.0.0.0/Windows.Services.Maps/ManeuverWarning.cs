// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Maps
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ManeuverWarning
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ManeuverWarning()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.ManeuverWarningKind Kind
		{
			get
			{
				throw new global::System.NotImplementedException("The member ManeuverWarningKind ManeuverWarning.Kind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ManeuverWarningKind%20ManeuverWarning.Kind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.ManeuverWarningSeverity Severity
		{
			get
			{
				throw new global::System.NotImplementedException("The member ManeuverWarningSeverity ManeuverWarning.Severity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ManeuverWarningSeverity%20ManeuverWarning.Severity");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.FromAbi(nint)
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.operator ==(Windows.Services.Maps.ManeuverWarning, Windows.Services.Maps.ManeuverWarning)
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.operator !=(Windows.Services.Maps.ManeuverWarning, Windows.Services.Maps.ManeuverWarning)
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.Equals(Windows.Services.Maps.ManeuverWarning)
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.Equals(object)
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.GetHashCode()
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.Kind.get
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.Severity.get
		// Forced skipping of method Windows.Services.Maps.ManeuverWarning.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
