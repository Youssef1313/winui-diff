// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.AppRecording
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppRecordingStatus
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppRecordingStatus()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool CanRecord
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppRecordingStatus.CanRecord is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppRecordingStatus.CanRecord");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool CanRecordTimeSpan
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppRecordingStatus.CanRecordTimeSpan is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppRecordingStatus.CanRecordTimeSpan");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.AppRecording.AppRecordingStatusDetails Details
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppRecordingStatusDetails AppRecordingStatus.Details is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppRecordingStatusDetails%20AppRecordingStatus.Details");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan HistoricalBufferDuration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan AppRecordingStatus.HistoricalBufferDuration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20AppRecordingStatus.HistoricalBufferDuration");
			}
		}
#endif
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.FromAbi(nint)
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.operator ==(Windows.Media.AppRecording.AppRecordingStatus, Windows.Media.AppRecording.AppRecordingStatus)
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.operator !=(Windows.Media.AppRecording.AppRecordingStatus, Windows.Media.AppRecording.AppRecordingStatus)
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.Equals(Windows.Media.AppRecording.AppRecordingStatus)
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.Equals(object)
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.GetHashCode()
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.CanRecord.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.CanRecordTimeSpan.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.Details.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.HistoricalBufferDuration.get
		// Forced skipping of method Windows.Media.AppRecording.AppRecordingStatus.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
