// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Spi
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SpiBusInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SpiBusInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int ChipSelectLineCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SpiBusInfo.ChipSelectLineCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SpiBusInfo.ChipSelectLineCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int MaxClockFrequency
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SpiBusInfo.MaxClockFrequency is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SpiBusInfo.MaxClockFrequency");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int MinClockFrequency
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SpiBusInfo.MinClockFrequency is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SpiBusInfo.MinClockFrequency");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<int> SupportedDataBitLengths
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<int> SpiBusInfo.SupportedDataBitLengths is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3Cint%3E%20SpiBusInfo.SupportedDataBitLengths");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.operator ==(Windows.Devices.Spi.SpiBusInfo, Windows.Devices.Spi.SpiBusInfo)
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.operator !=(Windows.Devices.Spi.SpiBusInfo, Windows.Devices.Spi.SpiBusInfo)
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.Equals(Windows.Devices.Spi.SpiBusInfo)
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.Equals(object)
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.GetHashCode()
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.ChipSelectLineCount.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.MaxClockFrequency.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.MinClockFrequency.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.SupportedDataBitLengths.get
		// Forced skipping of method Windows.Devices.Spi.SpiBusInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
