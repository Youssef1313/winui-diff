// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LowLevelDevicesAggregateProvider : global::Windows.Devices.ILowLevelDevicesAggregateProvider
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Adc.Provider.IAdcControllerProvider global::Windows.Devices.ILowLevelDevicesAggregateProvider.AdcControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member IAdcControllerProvider LowLevelDevicesAggregateProvider.AdcControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAdcControllerProvider%20LowLevelDevicesAggregateProvider.AdcControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Gpio.Provider.IGpioControllerProvider global::Windows.Devices.ILowLevelDevicesAggregateProvider.GpioControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member IGpioControllerProvider LowLevelDevicesAggregateProvider.GpioControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IGpioControllerProvider%20LowLevelDevicesAggregateProvider.GpioControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.I2c.Provider.II2cControllerProvider global::Windows.Devices.ILowLevelDevicesAggregateProvider.I2cControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member II2cControllerProvider LowLevelDevicesAggregateProvider.I2cControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=II2cControllerProvider%20LowLevelDevicesAggregateProvider.I2cControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Pwm.Provider.IPwmControllerProvider global::Windows.Devices.ILowLevelDevicesAggregateProvider.PwmControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPwmControllerProvider LowLevelDevicesAggregateProvider.PwmControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPwmControllerProvider%20LowLevelDevicesAggregateProvider.PwmControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Spi.Provider.ISpiControllerProvider global::Windows.Devices.ILowLevelDevicesAggregateProvider.SpiControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member ISpiControllerProvider LowLevelDevicesAggregateProvider.SpiControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ISpiControllerProvider%20LowLevelDevicesAggregateProvider.SpiControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Adc.Provider.IAdcControllerProvider AdcControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member IAdcControllerProvider LowLevelDevicesAggregateProvider.AdcControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAdcControllerProvider%20LowLevelDevicesAggregateProvider.AdcControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.Provider.IGpioControllerProvider GpioControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member IGpioControllerProvider LowLevelDevicesAggregateProvider.GpioControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IGpioControllerProvider%20LowLevelDevicesAggregateProvider.GpioControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.I2c.Provider.II2cControllerProvider I2cControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member II2cControllerProvider LowLevelDevicesAggregateProvider.I2cControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=II2cControllerProvider%20LowLevelDevicesAggregateProvider.I2cControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Pwm.Provider.IPwmControllerProvider PwmControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPwmControllerProvider LowLevelDevicesAggregateProvider.PwmControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPwmControllerProvider%20LowLevelDevicesAggregateProvider.PwmControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Spi.Provider.ISpiControllerProvider SpiControllerProvider
		{
			get
			{
				throw new global::System.NotImplementedException("The member ISpiControllerProvider LowLevelDevicesAggregateProvider.SpiControllerProvider is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ISpiControllerProvider%20LowLevelDevicesAggregateProvider.SpiControllerProvider");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public LowLevelDevicesAggregateProvider(global::Windows.Devices.Adc.Provider.IAdcControllerProvider adc, global::Windows.Devices.Pwm.Provider.IPwmControllerProvider pwm, global::Windows.Devices.Gpio.Provider.IGpioControllerProvider gpio, global::Windows.Devices.I2c.Provider.II2cControllerProvider i2c, global::Windows.Devices.Spi.Provider.ISpiControllerProvider spi)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.LowLevelDevicesAggregateProvider", "LowLevelDevicesAggregateProvider.LowLevelDevicesAggregateProvider(IAdcControllerProvider adc, IPwmControllerProvider pwm, IGpioControllerProvider gpio, II2cControllerProvider i2c, ISpiControllerProvider spi)");
		}
#endif
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.LowLevelDevicesAggregateProvider(Windows.Devices.Adc.Provider.IAdcControllerProvider, Windows.Devices.Pwm.Provider.IPwmControllerProvider, Windows.Devices.Gpio.Provider.IGpioControllerProvider, Windows.Devices.I2c.Provider.II2cControllerProvider, Windows.Devices.Spi.Provider.ISpiControllerProvider)
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.FromAbi(nint)
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.operator ==(Windows.Devices.LowLevelDevicesAggregateProvider, Windows.Devices.LowLevelDevicesAggregateProvider)
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.operator !=(Windows.Devices.LowLevelDevicesAggregateProvider, Windows.Devices.LowLevelDevicesAggregateProvider)
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Equals(Windows.Devices.LowLevelDevicesAggregateProvider)
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Equals(object)
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.GetHashCode()
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Windows.Devices.ILowLevelDevicesAggregateProvider.AdcControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Windows.Devices.ILowLevelDevicesAggregateProvider.GpioControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Windows.Devices.ILowLevelDevicesAggregateProvider.I2cControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Windows.Devices.ILowLevelDevicesAggregateProvider.PwmControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.Windows.Devices.ILowLevelDevicesAggregateProvider.SpiControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.AdcControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.GpioControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.I2cControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.PwmControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.SpiControllerProvider.get
		// Forced skipping of method Windows.Devices.LowLevelDevicesAggregateProvider.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Devices.ILowLevelDevicesAggregateProvider
	}
}
