// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Perception.Spatial
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct SpatialBoundingSphere
	{
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.SpatialBoundingSphere()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SpatialBoundingSphere(global::System.Numerics.Vector3 _Center, float _Radius)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Perception.Spatial.SpatialBoundingSphere", "SpatialBoundingSphere.SpatialBoundingSphere(Vector3 _Center, float _Radius)");
		}
#endif
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.SpatialBoundingSphere(System.Numerics.Vector3, float)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.operator ==(Windows.Perception.Spatial.SpatialBoundingSphere, Windows.Perception.Spatial.SpatialBoundingSphere)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.operator !=(Windows.Perception.Spatial.SpatialBoundingSphere, Windows.Perception.Spatial.SpatialBoundingSphere)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.Equals(Windows.Perception.Spatial.SpatialBoundingSphere)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.Equals(object)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingSphere.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public global::System.Numerics.Vector3 Center;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public float Radius;
#endif
	}
}
