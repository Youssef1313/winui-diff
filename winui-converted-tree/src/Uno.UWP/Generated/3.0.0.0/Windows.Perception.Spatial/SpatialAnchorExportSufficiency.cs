// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Perception.Spatial
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SpatialAnchorExportSufficiency
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SpatialAnchorExportSufficiency()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsMinimallySufficient
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SpatialAnchorExportSufficiency.IsMinimallySufficient is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SpatialAnchorExportSufficiency.IsMinimallySufficient");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double RecommendedSufficiencyLevel
		{
			get
			{
				throw new global::System.NotImplementedException("The member double SpatialAnchorExportSufficiency.RecommendedSufficiencyLevel is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20SpatialAnchorExportSufficiency.RecommendedSufficiencyLevel");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double SufficiencyLevel
		{
			get
			{
				throw new global::System.NotImplementedException("The member double SpatialAnchorExportSufficiency.SufficiencyLevel is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20SpatialAnchorExportSufficiency.SufficiencyLevel");
			}
		}
#endif
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.FromAbi(nint)
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.operator ==(Windows.Perception.Spatial.SpatialAnchorExportSufficiency, Windows.Perception.Spatial.SpatialAnchorExportSufficiency)
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.operator !=(Windows.Perception.Spatial.SpatialAnchorExportSufficiency, Windows.Perception.Spatial.SpatialAnchorExportSufficiency)
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.Equals(Windows.Perception.Spatial.SpatialAnchorExportSufficiency)
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.Equals(object)
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.GetHashCode()
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.IsMinimallySufficient.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.RecommendedSufficiencyLevel.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.SufficiencyLevel.get
		// Forced skipping of method Windows.Perception.Spatial.SpatialAnchorExportSufficiency.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
