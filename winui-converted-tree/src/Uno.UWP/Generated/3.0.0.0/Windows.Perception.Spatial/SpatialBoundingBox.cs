// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Perception.Spatial
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct SpatialBoundingBox
	{
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.SpatialBoundingBox()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SpatialBoundingBox(global::System.Numerics.Vector3 _Center, global::System.Numerics.Vector3 _Extents)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Perception.Spatial.SpatialBoundingBox", "SpatialBoundingBox.SpatialBoundingBox(Vector3 _Center, Vector3 _Extents)");
		}
#endif
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.SpatialBoundingBox(System.Numerics.Vector3, System.Numerics.Vector3)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.operator ==(Windows.Perception.Spatial.SpatialBoundingBox, Windows.Perception.Spatial.SpatialBoundingBox)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.operator !=(Windows.Perception.Spatial.SpatialBoundingBox, Windows.Perception.Spatial.SpatialBoundingBox)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.Equals(Windows.Perception.Spatial.SpatialBoundingBox)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.Equals(object)
		// Forced skipping of method Windows.Perception.Spatial.SpatialBoundingBox.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public global::System.Numerics.Vector3 Center;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public global::System.Numerics.Vector3 Extents;
#endif
	}
}
