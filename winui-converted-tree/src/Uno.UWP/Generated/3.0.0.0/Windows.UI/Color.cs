// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial struct Color
	{
		// Skipping already declared property A
		// Skipping already declared property R
		// Skipping already declared property G
		// Skipping already declared property B
		// Forced skipping of method Windows.UI.Color.Color()
		// Skipping already declared method Windows.UI.Color.FromArgb(byte, byte, byte, byte)
		// Forced skipping of method Windows.UI.Color.A.get
		// Forced skipping of method Windows.UI.Color.A.set
		// Forced skipping of method Windows.UI.Color.R.get
		// Forced skipping of method Windows.UI.Color.R.set
		// Forced skipping of method Windows.UI.Color.G.get
		// Forced skipping of method Windows.UI.Color.G.set
		// Forced skipping of method Windows.UI.Color.B.get
		// Forced skipping of method Windows.UI.Color.B.set
		// Skipping already declared method Windows.UI.Color.ToString()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ToString(global::System.IFormatProvider provider)
		{
			throw new global::System.NotImplementedException("The member string Color.ToString(IFormatProvider provider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Color.ToString%28IFormatProvider%20provider%29");
		}
#endif
		// Forced skipping of method Windows.UI.Color.System.IFormattable.ToString(string, System.IFormatProvider)
		// Forced skipping of method Windows.UI.Color.GetHashCode()
		// Forced skipping of method Windows.UI.Color.Equals(object)
		// Forced skipping of method Windows.UI.Color.Equals(Windows.UI.Color)
		// Forced skipping of method Windows.UI.Color.operator ==(Windows.UI.Color, Windows.UI.Color)
		// Forced skipping of method Windows.UI.Color.operator !=(Windows.UI.Color, Windows.UI.Color)
	}
}
