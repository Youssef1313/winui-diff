// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Playback
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MediaPlaybackTimedMetadataTrackList : global::System.Collections.Generic.IReadOnlyList<global::Windows.Media.Core.TimedMetadataTrack>, global::System.Collections.Generic.IEnumerable<global::Windows.Media.Core.TimedMetadataTrack>, global::System.Collections.IEnumerable, global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Media.Core.TimedMetadataTrack>
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal MediaPlaybackTimedMetadataTrackList()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int Count
		{
			get
			{
				throw new global::System.NotImplementedException("The member int MediaPlaybackTimedMetadataTrackList.Count is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20MediaPlaybackTimedMetadataTrackList.Count");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Core.TimedMetadataTrack this[int index]
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimedMetadataTrack MediaPlaybackTimedMetadataTrackList.this[int index] is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimedMetadataTrack%20MediaPlaybackTimedMetadataTrackList.this%5Bint%20index%5D");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.FromAbi(nint)
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.operator ==(Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList, Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList)
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.operator !=(Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList, Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList)
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.Equals(Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList)
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.Equals(object)
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.GetHashCode()
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.Count.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.this[int].get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IEnumerator<global::Windows.Media.Core.TimedMetadataTrack> GetEnumerator()
		{
			throw new global::System.NotImplementedException("The member IEnumerator<TimedMetadataTrack> MediaPlaybackTimedMetadataTrackList.GetEnumerator() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IEnumerator%3CTimedMetadataTrack%3E%20MediaPlaybackTimedMetadataTrackList.GetEnumerator%28%29");
		}
#endif
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.System.Collections.IEnumerable.GetEnumerator()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Playback.TimedMetadataTrackPresentationMode GetPresentationMode(uint index)
		{
			throw new global::System.NotImplementedException("The member TimedMetadataTrackPresentationMode MediaPlaybackTimedMetadataTrackList.GetPresentationMode(uint index) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimedMetadataTrackPresentationMode%20MediaPlaybackTimedMetadataTrackList.GetPresentationMode%28uint%20index%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetPresentationMode(uint index, global::Windows.Media.Playback.TimedMetadataTrackPresentationMode value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList", "void MediaPlaybackTimedMetadataTrackList.SetPresentationMode(uint index, TimedMetadataTrackPresentationMode value)");
		}
#endif
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.PresentationModeChanged.add
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.PresentationModeChanged.remove
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList.System.Collections.Generic.IReadOnlyList<Windows.Media.Core.TimedMetadataTrack>.get_Item(int)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList, global::Windows.Media.Playback.TimedMetadataPresentationModeChangedEventArgs> PresentationModeChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList", "event TypedEventHandler<MediaPlaybackTimedMetadataTrackList, TimedMetadataPresentationModeChangedEventArgs> MediaPlaybackTimedMetadataTrackList.PresentationModeChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList", "event TypedEventHandler<MediaPlaybackTimedMetadataTrackList, TimedMetadataPresentationModeChangedEventArgs> MediaPlaybackTimedMetadataTrackList.PresentationModeChanged");
			}
		}
#endif
		// Processing: System.Collections.Generic.IReadOnlyList<Windows.Media.Core.TimedMetadataTrack>
		// Processing: System.Collections.Generic.IEnumerable<Windows.Media.Core.TimedMetadataTrack>
		// Processing: System.Collections.IEnumerable
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		// DeclaringType: System.Collections.IEnumerable
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		 global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			throw new global::System.NotSupportedException();
		}
#endif
		// Processing: System.Collections.Generic.IReadOnlyCollection<Windows.Media.Core.TimedMetadataTrack>
	}
}
