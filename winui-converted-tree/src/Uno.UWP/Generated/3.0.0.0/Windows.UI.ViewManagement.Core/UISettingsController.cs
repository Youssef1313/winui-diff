// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.ViewManagement.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class UISettingsController
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal UISettingsController()
		{
		}
#endif
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.UI.ViewManagement.Core.UISettingsController> RequestDefaultAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<UISettingsController> UISettingsController.RequestDefaultAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CUISettingsController%3E%20UISettingsController.RequestDefaultAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.FromAbi(nint)
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.operator ==(Windows.UI.ViewManagement.Core.UISettingsController, Windows.UI.ViewManagement.Core.UISettingsController)
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.operator !=(Windows.UI.ViewManagement.Core.UISettingsController, Windows.UI.ViewManagement.Core.UISettingsController)
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.Equals(Windows.UI.ViewManagement.Core.UISettingsController)
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.Equals(object)
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.GetHashCode()
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetAdvancedEffectsEnabled(bool value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.Core.UISettingsController", "void UISettingsController.SetAdvancedEffectsEnabled(bool value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetAnimationsEnabled(bool value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.Core.UISettingsController", "void UISettingsController.SetAnimationsEnabled(bool value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetAutoHideScrollBars(bool value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.Core.UISettingsController", "void UISettingsController.SetAutoHideScrollBars(bool value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetMessageDuration(uint value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.Core.UISettingsController", "void UISettingsController.SetMessageDuration(uint value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetTextScaleFactor(double value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.Core.UISettingsController", "void UISettingsController.SetTextScaleFactor(double value)");
		}
#endif
		// Forced skipping of method Windows.UI.ViewManagement.Core.UISettingsController.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
