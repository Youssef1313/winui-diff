// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Graphics.Printing3D
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class Printing3DBaseMaterial
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Abs
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Printing3DBaseMaterial.Abs is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Printing3DBaseMaterial.Abs");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Pla
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Printing3DBaseMaterial.Pla is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Printing3DBaseMaterial.Pla");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.Printing3D.Printing3DColorMaterial Color
		{
			get
			{
				throw new global::System.NotImplementedException("The member Printing3DColorMaterial Printing3DBaseMaterial.Color is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Printing3DColorMaterial%20Printing3DBaseMaterial.Color");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Printing3D.Printing3DBaseMaterial", "Printing3DColorMaterial Printing3DBaseMaterial.Color");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Name
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Printing3DBaseMaterial.Name is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Printing3DBaseMaterial.Name");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Printing3D.Printing3DBaseMaterial", "string Printing3DBaseMaterial.Name");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public Printing3DBaseMaterial()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Printing3D.Printing3DBaseMaterial", "Printing3DBaseMaterial.Printing3DBaseMaterial()");
		}
#endif
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Printing3DBaseMaterial()
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.As<I>()
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Abs.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Pla.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.FromAbi(nint)
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.operator ==(Windows.Graphics.Printing3D.Printing3DBaseMaterial, Windows.Graphics.Printing3D.Printing3DBaseMaterial)
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.operator !=(Windows.Graphics.Printing3D.Printing3DBaseMaterial, Windows.Graphics.Printing3D.Printing3DBaseMaterial)
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Equals(Windows.Graphics.Printing3D.Printing3DBaseMaterial)
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Equals(object)
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.GetHashCode()
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Color.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Color.set
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Name.get
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.Name.set
		// Forced skipping of method Windows.Graphics.Printing3D.Printing3DBaseMaterial.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
