// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.Sockets
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ControlChannelTrigger : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ControlChannelTriggerId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ControlChannelTrigger.ControlChannelTriggerId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ControlChannelTrigger.ControlChannelTriggerId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint CurrentKeepAliveIntervalInMinutes
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint ControlChannelTrigger.CurrentKeepAliveIntervalInMinutes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20ControlChannelTrigger.CurrentKeepAliveIntervalInMinutes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsWakeFromLowPowerSupported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ControlChannelTrigger.IsWakeFromLowPowerSupported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ControlChannelTrigger.IsWakeFromLowPowerSupported");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.Background.IBackgroundTrigger KeepAliveTrigger
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBackgroundTrigger ControlChannelTrigger.KeepAliveTrigger is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBackgroundTrigger%20ControlChannelTrigger.KeepAliveTrigger");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.Background.IBackgroundTrigger PushNotificationTrigger
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBackgroundTrigger ControlChannelTrigger.PushNotificationTrigger is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBackgroundTrigger%20ControlChannelTrigger.PushNotificationTrigger");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ServerKeepAliveIntervalInMinutes
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint ControlChannelTrigger.ServerKeepAliveIntervalInMinutes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20ControlChannelTrigger.ServerKeepAliveIntervalInMinutes");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "uint ControlChannelTrigger.ServerKeepAliveIntervalInMinutes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public object TransportObject
		{
			get
			{
				throw new global::System.NotImplementedException("The member object ControlChannelTrigger.TransportObject is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20ControlChannelTrigger.TransportObject");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ControlChannelTrigger(string channelId, uint serverKeepAliveIntervalInMinutes)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "ControlChannelTrigger.ControlChannelTrigger(string channelId, uint serverKeepAliveIntervalInMinutes)");
		}
#endif
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.ControlChannelTrigger(string, uint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ControlChannelTrigger(string channelId, uint serverKeepAliveIntervalInMinutes, global::Windows.Networking.Sockets.ControlChannelTriggerResourceType resourceRequestType)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "ControlChannelTrigger.ControlChannelTrigger(string channelId, uint serverKeepAliveIntervalInMinutes, ControlChannelTriggerResourceType resourceRequestType)");
		}
#endif
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.ControlChannelTrigger(string, uint, Windows.Networking.Sockets.ControlChannelTriggerResourceType)
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.FromAbi(nint)
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.operator ==(Windows.Networking.Sockets.ControlChannelTrigger, Windows.Networking.Sockets.ControlChannelTrigger)
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.operator !=(Windows.Networking.Sockets.ControlChannelTrigger, Windows.Networking.Sockets.ControlChannelTrigger)
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.Equals(Windows.Networking.Sockets.ControlChannelTrigger)
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.Equals(object)
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.GetHashCode()
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void UsingTransport(object transport)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "void ControlChannelTrigger.UsingTransport(object transport)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.Sockets.ControlChannelTriggerStatus WaitForPushEnabled()
		{
			throw new global::System.NotImplementedException("The member ControlChannelTriggerStatus ControlChannelTrigger.WaitForPushEnabled() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ControlChannelTriggerStatus%20ControlChannelTrigger.WaitForPushEnabled%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void DecreaseNetworkKeepAliveInterval()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "void ControlChannelTrigger.DecreaseNetworkKeepAliveInterval()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void FlushTransport()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "void ControlChannelTrigger.FlushTransport()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.ControlChannelTrigger", "void ControlChannelTrigger.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.ControlChannelTriggerId.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.CurrentKeepAliveIntervalInMinutes.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.IsWakeFromLowPowerSupported.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.KeepAliveTrigger.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.PushNotificationTrigger.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.ServerKeepAliveIntervalInMinutes.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.ServerKeepAliveIntervalInMinutes.set
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.TransportObject.get
		// Forced skipping of method Windows.Networking.Sockets.ControlChannelTrigger.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
