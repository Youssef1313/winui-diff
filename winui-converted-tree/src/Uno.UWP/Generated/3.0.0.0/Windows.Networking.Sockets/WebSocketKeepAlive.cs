// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.Sockets
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class WebSocketKeepAlive : global::Windows.ApplicationModel.Background.IBackgroundTask
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public WebSocketKeepAlive()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.WebSocketKeepAlive", "WebSocketKeepAlive.WebSocketKeepAlive()");
		}
#endif
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.WebSocketKeepAlive()
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.FromAbi(nint)
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.operator ==(Windows.Networking.Sockets.WebSocketKeepAlive, Windows.Networking.Sockets.WebSocketKeepAlive)
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.operator !=(Windows.Networking.Sockets.WebSocketKeepAlive, Windows.Networking.Sockets.WebSocketKeepAlive)
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.Equals(Windows.Networking.Sockets.WebSocketKeepAlive)
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.Equals(object)
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.GetHashCode()
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Run(global::Windows.ApplicationModel.Background.IBackgroundTaskInstance taskInstance)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.WebSocketKeepAlive", "void WebSocketKeepAlive.Run(IBackgroundTaskInstance taskInstance)");
		}
#endif
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.Windows.ApplicationModel.Background.IBackgroundTask.Run(Windows.ApplicationModel.Background.IBackgroundTaskInstance)
		// Forced skipping of method Windows.Networking.Sockets.WebSocketKeepAlive.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.ApplicationModel.Background.IBackgroundTask
	}
}
