// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.Sockets
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct RoundTripTimeStatistics
	{
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.RoundTripTimeStatistics()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public RoundTripTimeStatistics(uint _Variance, uint _Max, uint _Min, uint _Sum)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Sockets.RoundTripTimeStatistics", "RoundTripTimeStatistics.RoundTripTimeStatistics(uint _Variance, uint _Max, uint _Min, uint _Sum)");
		}
#endif
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.RoundTripTimeStatistics(uint, uint, uint, uint)
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.operator ==(Windows.Networking.Sockets.RoundTripTimeStatistics, Windows.Networking.Sockets.RoundTripTimeStatistics)
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.operator !=(Windows.Networking.Sockets.RoundTripTimeStatistics, Windows.Networking.Sockets.RoundTripTimeStatistics)
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.Equals(Windows.Networking.Sockets.RoundTripTimeStatistics)
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.Equals(object)
		// Forced skipping of method Windows.Networking.Sockets.RoundTripTimeStatistics.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public uint Variance;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public uint Max;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public uint Min;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public uint Sum;
#endif
	}
}
