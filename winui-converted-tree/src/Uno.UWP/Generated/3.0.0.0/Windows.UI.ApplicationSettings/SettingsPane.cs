// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.ApplicationSettings
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SettingsPane
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SettingsPane()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.UI.ApplicationSettings.SettingsEdgeLocation Edge
		{
			get
			{
				throw new global::System.NotImplementedException("The member SettingsEdgeLocation SettingsPane.Edge is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SettingsEdgeLocation%20SettingsPane.Edge");
			}
		}
#endif
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.UI.ApplicationSettings.SettingsPane GetForCurrentView()
		{
			throw new global::System.NotImplementedException("The member SettingsPane SettingsPane.GetForCurrentView() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SettingsPane%20SettingsPane.GetForCurrentView%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void Show()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ApplicationSettings.SettingsPane", "void SettingsPane.Show()");
		}
#endif
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.Edge.get
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.FromAbi(nint)
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.operator ==(Windows.UI.ApplicationSettings.SettingsPane, Windows.UI.ApplicationSettings.SettingsPane)
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.operator !=(Windows.UI.ApplicationSettings.SettingsPane, Windows.UI.ApplicationSettings.SettingsPane)
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.Equals(Windows.UI.ApplicationSettings.SettingsPane)
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.Equals(object)
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.GetHashCode()
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.CommandsRequested.add
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.CommandsRequested.remove
		// Forced skipping of method Windows.UI.ApplicationSettings.SettingsPane.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ApplicationSettings.SettingsPane, global::Windows.UI.ApplicationSettings.SettingsPaneCommandsRequestedEventArgs> CommandsRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ApplicationSettings.SettingsPane", "event TypedEventHandler<SettingsPane, SettingsPaneCommandsRequestedEventArgs> SettingsPane.CommandsRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ApplicationSettings.SettingsPane", "event TypedEventHandler<SettingsPane, SettingsPaneCommandsRequestedEventArgs> SettingsPane.CommandsRequested");
			}
		}
#endif
	}
}
