// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Devices.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class FrameFlashCapabilities
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal FrameFlashCapabilities()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool PowerSupported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool FrameFlashCapabilities.PowerSupported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20FrameFlashCapabilities.PowerSupported");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool RedEyeReductionSupported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool FrameFlashCapabilities.RedEyeReductionSupported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20FrameFlashCapabilities.RedEyeReductionSupported");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Supported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool FrameFlashCapabilities.Supported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20FrameFlashCapabilities.Supported");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.FromAbi(nint)
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.operator ==(Windows.Media.Devices.Core.FrameFlashCapabilities, Windows.Media.Devices.Core.FrameFlashCapabilities)
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.operator !=(Windows.Media.Devices.Core.FrameFlashCapabilities, Windows.Media.Devices.Core.FrameFlashCapabilities)
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.Equals(Windows.Media.Devices.Core.FrameFlashCapabilities)
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.Equals(object)
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.GetHashCode()
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.PowerSupported.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.RedEyeReductionSupported.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.Supported.get
		// Forced skipping of method Windows.Media.Devices.Core.FrameFlashCapabilities.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
