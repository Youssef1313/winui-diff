// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace System
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public static partial class WindowsRuntimeSystemExtensions
	{
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction, System.Threading.CancellationToken)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TResult>(Windows.Foundation.IAsyncOperation<TResult>, System.Threading.CancellationToken)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TResult>(Windows.Foundation.IAsyncOperation<TResult>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.GetAwaiter<TResult>(Windows.Foundation.IAsyncOperation<TResult>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>, System.Threading.CancellationToken, System.IProgress<TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>, System.Threading.CancellationToken)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>, System.IProgress<TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.GetAwaiter<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>, System.Threading.CancellationToken, System.IProgress<TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>, System.Threading.CancellationToken)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>, System.IProgress<TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.GetAwaiter<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)
		// Skipping already declared method System.WindowsRuntimeSystemExtensions.AsAsyncOperation<TResult>(System.Threading.Tasks.Task<TResult>)
	}
}
