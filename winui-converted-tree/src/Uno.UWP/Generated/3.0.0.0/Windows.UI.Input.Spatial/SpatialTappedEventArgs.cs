// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Input.Spatial
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SpatialTappedEventArgs
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SpatialTappedEventArgs()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind InteractionSourceKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member SpatialInteractionSourceKind SpatialTappedEventArgs.InteractionSourceKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SpatialInteractionSourceKind%20SpatialTappedEventArgs.InteractionSourceKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint TapCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint SpatialTappedEventArgs.TapCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20SpatialTappedEventArgs.TapCount");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.FromAbi(nint)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.operator ==(Windows.UI.Input.Spatial.SpatialTappedEventArgs, Windows.UI.Input.Spatial.SpatialTappedEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.operator !=(Windows.UI.Input.Spatial.SpatialTappedEventArgs, Windows.UI.Input.Spatial.SpatialTappedEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.Equals(Windows.UI.Input.Spatial.SpatialTappedEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.Equals(object)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.GetHashCode()
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem)
		{
			throw new global::System.NotImplementedException("The member SpatialPointerPose SpatialTappedEventArgs.TryGetPointerPose(SpatialCoordinateSystem coordinateSystem) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SpatialPointerPose%20SpatialTappedEventArgs.TryGetPointerPose%28SpatialCoordinateSystem%20coordinateSystem%29");
		}
#endif
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.InteractionSourceKind.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.TapCount.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialTappedEventArgs.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
