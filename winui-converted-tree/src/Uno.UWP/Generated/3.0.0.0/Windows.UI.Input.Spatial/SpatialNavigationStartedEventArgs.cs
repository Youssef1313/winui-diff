// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Input.Spatial
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SpatialNavigationStartedEventArgs
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SpatialNavigationStartedEventArgs()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind InteractionSourceKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member SpatialInteractionSourceKind SpatialNavigationStartedEventArgs.InteractionSourceKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SpatialInteractionSourceKind%20SpatialNavigationStartedEventArgs.InteractionSourceKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsNavigatingX
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SpatialNavigationStartedEventArgs.IsNavigatingX is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SpatialNavigationStartedEventArgs.IsNavigatingX");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsNavigatingY
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SpatialNavigationStartedEventArgs.IsNavigatingY is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SpatialNavigationStartedEventArgs.IsNavigatingY");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsNavigatingZ
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SpatialNavigationStartedEventArgs.IsNavigatingZ is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SpatialNavigationStartedEventArgs.IsNavigatingZ");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.FromAbi(nint)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.operator ==(Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs, Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.operator !=(Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs, Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.Equals(Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.Equals(object)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.GetHashCode()
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem)
		{
			throw new global::System.NotImplementedException("The member SpatialPointerPose SpatialNavigationStartedEventArgs.TryGetPointerPose(SpatialCoordinateSystem coordinateSystem) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SpatialPointerPose%20SpatialNavigationStartedEventArgs.TryGetPointerPose%28SpatialCoordinateSystem%20coordinateSystem%29");
		}
#endif
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.InteractionSourceKind.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.IsNavigatingX.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.IsNavigatingY.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.IsNavigatingZ.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialNavigationStartedEventArgs.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
