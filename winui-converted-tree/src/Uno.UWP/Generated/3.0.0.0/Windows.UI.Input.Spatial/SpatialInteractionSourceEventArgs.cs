// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Input.Spatial
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SpatialInteractionSourceEventArgs
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SpatialInteractionSourceEventArgs()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionPressKind PressKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member SpatialInteractionPressKind SpatialInteractionSourceEventArgs.PressKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SpatialInteractionPressKind%20SpatialInteractionSourceEventArgs.PressKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceState State
		{
			get
			{
				throw new global::System.NotImplementedException("The member SpatialInteractionSourceState SpatialInteractionSourceEventArgs.State is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SpatialInteractionSourceState%20SpatialInteractionSourceEventArgs.State");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.FromAbi(nint)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.operator ==(Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.operator !=(Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.Equals(Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.Equals(object)
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.GetHashCode()
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.PressKind.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.State.get
		// Forced skipping of method Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
