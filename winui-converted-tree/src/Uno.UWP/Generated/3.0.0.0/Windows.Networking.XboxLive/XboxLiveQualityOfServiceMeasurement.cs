// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.XboxLive
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class XboxLiveQualityOfServiceMeasurement
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool IsSystemInboundBandwidthConstrained
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool XboxLiveQualityOfServiceMeasurement.IsSystemInboundBandwidthConstrained is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20XboxLiveQualityOfServiceMeasurement.IsSystemInboundBandwidthConstrained");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "bool XboxLiveQualityOfServiceMeasurement.IsSystemInboundBandwidthConstrained");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool IsSystemOutboundBandwidthConstrained
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool XboxLiveQualityOfServiceMeasurement.IsSystemOutboundBandwidthConstrained is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20XboxLiveQualityOfServiceMeasurement.IsSystemOutboundBandwidthConstrained");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "bool XboxLiveQualityOfServiceMeasurement.IsSystemOutboundBandwidthConstrained");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static uint MaxPrivatePayloadSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint XboxLiveQualityOfServiceMeasurement.MaxPrivatePayloadSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20XboxLiveQualityOfServiceMeasurement.MaxPrivatePayloadSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static uint MaxSimultaneousProbeConnections
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint XboxLiveQualityOfServiceMeasurement.MaxSimultaneousProbeConnections is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20XboxLiveQualityOfServiceMeasurement.MaxSimultaneousProbeConnections");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "uint XboxLiveQualityOfServiceMeasurement.MaxSimultaneousProbeConnections");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Storage.Streams.IBuffer PublishedPrivatePayload
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer XboxLiveQualityOfServiceMeasurement.PublishedPrivatePayload is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20XboxLiveQualityOfServiceMeasurement.PublishedPrivatePayload");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "IBuffer XboxLiveQualityOfServiceMeasurement.PublishedPrivatePayload");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Networking.XboxLive.XboxLiveDeviceAddress> DeviceAddresses
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<XboxLiveDeviceAddress> XboxLiveQualityOfServiceMeasurement.DeviceAddresses is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CXboxLiveDeviceAddress%3E%20XboxLiveQualityOfServiceMeasurement.DeviceAddresses");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetricResult> MetricResults
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<XboxLiveQualityOfServiceMetricResult> XboxLiveQualityOfServiceMeasurement.MetricResults is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CXboxLiveQualityOfServiceMetricResult%3E%20XboxLiveQualityOfServiceMeasurement.MetricResults");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetric> Metrics
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<XboxLiveQualityOfServiceMetric> XboxLiveQualityOfServiceMeasurement.Metrics is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CXboxLiveQualityOfServiceMetric%3E%20XboxLiveQualityOfServiceMeasurement.Metrics");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint NumberOfProbesToAttempt
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint XboxLiveQualityOfServiceMeasurement.NumberOfProbesToAttempt is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20XboxLiveQualityOfServiceMeasurement.NumberOfProbesToAttempt");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "uint XboxLiveQualityOfServiceMeasurement.NumberOfProbesToAttempt");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint NumberOfResultsPending
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint XboxLiveQualityOfServiceMeasurement.NumberOfResultsPending is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20XboxLiveQualityOfServiceMeasurement.NumberOfResultsPending");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.XboxLive.XboxLiveQualityOfServicePrivatePayloadResult> PrivatePayloadResults
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<XboxLiveQualityOfServicePrivatePayloadResult> XboxLiveQualityOfServiceMeasurement.PrivatePayloadResults is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CXboxLiveQualityOfServicePrivatePayloadResult%3E%20XboxLiveQualityOfServiceMeasurement.PrivatePayloadResults");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldRequestPrivatePayloads
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool XboxLiveQualityOfServiceMeasurement.ShouldRequestPrivatePayloads is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20XboxLiveQualityOfServiceMeasurement.ShouldRequestPrivatePayloads");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "bool XboxLiveQualityOfServiceMeasurement.ShouldRequestPrivatePayloads");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint TimeoutInMilliseconds
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint XboxLiveQualityOfServiceMeasurement.TimeoutInMilliseconds is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20XboxLiveQualityOfServiceMeasurement.TimeoutInMilliseconds");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "uint XboxLiveQualityOfServiceMeasurement.TimeoutInMilliseconds");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public XboxLiveQualityOfServiceMeasurement()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "XboxLiveQualityOfServiceMeasurement.XboxLiveQualityOfServiceMeasurement()");
		}
#endif
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.XboxLiveQualityOfServiceMeasurement()
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void PublishPrivatePayloadBytes(byte[] payload)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "void XboxLiveQualityOfServiceMeasurement.PublishPrivatePayloadBytes(byte[] payload)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void ClearPrivatePayload()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement", "void XboxLiveQualityOfServiceMeasurement.ClearPrivatePayload()");
		}
#endif
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.IsSystemInboundBandwidthConstrained.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.IsSystemInboundBandwidthConstrained.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.IsSystemOutboundBandwidthConstrained.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.IsSystemOutboundBandwidthConstrained.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.MaxPrivatePayloadSize.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.MaxSimultaneousProbeConnections.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.MaxSimultaneousProbeConnections.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.PublishedPrivatePayload.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.PublishedPrivatePayload.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.FromAbi(nint)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.operator ==(Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement, Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.operator !=(Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement, Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.Equals(Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.Equals(object)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.GetHashCode()
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction MeasureAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction XboxLiveQualityOfServiceMeasurement.MeasureAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20XboxLiveQualityOfServiceMeasurement.MeasureAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetricResult> GetMetricResultsForDevice(global::Windows.Networking.XboxLive.XboxLiveDeviceAddress deviceAddress)
		{
			throw new global::System.NotImplementedException("The member IReadOnlyList<XboxLiveQualityOfServiceMetricResult> XboxLiveQualityOfServiceMeasurement.GetMetricResultsForDevice(XboxLiveDeviceAddress deviceAddress) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CXboxLiveQualityOfServiceMetricResult%3E%20XboxLiveQualityOfServiceMeasurement.GetMetricResultsForDevice%28XboxLiveDeviceAddress%20deviceAddress%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetricResult> GetMetricResultsForMetric(global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetric metric)
		{
			throw new global::System.NotImplementedException("The member IReadOnlyList<XboxLiveQualityOfServiceMetricResult> XboxLiveQualityOfServiceMeasurement.GetMetricResultsForMetric(XboxLiveQualityOfServiceMetric metric) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CXboxLiveQualityOfServiceMetricResult%3E%20XboxLiveQualityOfServiceMeasurement.GetMetricResultsForMetric%28XboxLiveQualityOfServiceMetric%20metric%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetricResult GetMetricResult(global::Windows.Networking.XboxLive.XboxLiveDeviceAddress deviceAddress, global::Windows.Networking.XboxLive.XboxLiveQualityOfServiceMetric metric)
		{
			throw new global::System.NotImplementedException("The member XboxLiveQualityOfServiceMetricResult XboxLiveQualityOfServiceMeasurement.GetMetricResult(XboxLiveDeviceAddress deviceAddress, XboxLiveQualityOfServiceMetric metric) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveQualityOfServiceMetricResult%20XboxLiveQualityOfServiceMeasurement.GetMetricResult%28XboxLiveDeviceAddress%20deviceAddress%2C%20XboxLiveQualityOfServiceMetric%20metric%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.XboxLive.XboxLiveQualityOfServicePrivatePayloadResult GetPrivatePayloadResult(global::Windows.Networking.XboxLive.XboxLiveDeviceAddress deviceAddress)
		{
			throw new global::System.NotImplementedException("The member XboxLiveQualityOfServicePrivatePayloadResult XboxLiveQualityOfServiceMeasurement.GetPrivatePayloadResult(XboxLiveDeviceAddress deviceAddress) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveQualityOfServicePrivatePayloadResult%20XboxLiveQualityOfServiceMeasurement.GetPrivatePayloadResult%28XboxLiveDeviceAddress%20deviceAddress%29");
		}
#endif
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.DeviceAddresses.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.MetricResults.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.Metrics.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.NumberOfProbesToAttempt.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.NumberOfProbesToAttempt.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.NumberOfResultsPending.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.PrivatePayloadResults.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.ShouldRequestPrivatePayloads.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.ShouldRequestPrivatePayloads.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.TimeoutInMilliseconds.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.TimeoutInMilliseconds.set
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveQualityOfServiceMeasurement.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
