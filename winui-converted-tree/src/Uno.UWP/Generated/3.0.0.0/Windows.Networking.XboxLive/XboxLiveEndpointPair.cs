// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.XboxLive
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class XboxLiveEndpointPair
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal XboxLiveEndpointPair()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.HostName LocalHostName
		{
			get
			{
				throw new global::System.NotImplementedException("The member HostName XboxLiveEndpointPair.LocalHostName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HostName%20XboxLiveEndpointPair.LocalHostName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string LocalPort
		{
			get
			{
				throw new global::System.NotImplementedException("The member string XboxLiveEndpointPair.LocalPort is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20XboxLiveEndpointPair.LocalPort");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.XboxLive.XboxLiveDeviceAddress RemoteDeviceAddress
		{
			get
			{
				throw new global::System.NotImplementedException("The member XboxLiveDeviceAddress XboxLiveEndpointPair.RemoteDeviceAddress is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveDeviceAddress%20XboxLiveEndpointPair.RemoteDeviceAddress");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.HostName RemoteHostName
		{
			get
			{
				throw new global::System.NotImplementedException("The member HostName XboxLiveEndpointPair.RemoteHostName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HostName%20XboxLiveEndpointPair.RemoteHostName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string RemotePort
		{
			get
			{
				throw new global::System.NotImplementedException("The member string XboxLiveEndpointPair.RemotePort is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20XboxLiveEndpointPair.RemotePort");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.XboxLive.XboxLiveEndpointPairState State
		{
			get
			{
				throw new global::System.NotImplementedException("The member XboxLiveEndpointPairState XboxLiveEndpointPair.State is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveEndpointPairState%20XboxLiveEndpointPair.State");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.XboxLive.XboxLiveEndpointPairTemplate Template
		{
			get
			{
				throw new global::System.NotImplementedException("The member XboxLiveEndpointPairTemplate XboxLiveEndpointPair.Template is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveEndpointPairTemplate%20XboxLiveEndpointPair.Template");
			}
		}
#endif
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Networking.XboxLive.XboxLiveEndpointPair FindEndpointPairBySocketAddressBytes(byte[] localSocketAddress, byte[] remoteSocketAddress)
		{
			throw new global::System.NotImplementedException("The member XboxLiveEndpointPair XboxLiveEndpointPair.FindEndpointPairBySocketAddressBytes(byte[] localSocketAddress, byte[] remoteSocketAddress) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveEndpointPair%20XboxLiveEndpointPair.FindEndpointPairBySocketAddressBytes%28byte%5B%5D%20localSocketAddress%2C%20byte%5B%5D%20remoteSocketAddress%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Networking.XboxLive.XboxLiveEndpointPair FindEndpointPairByHostNamesAndPorts(global::Windows.Networking.HostName localHostName, string localPort, global::Windows.Networking.HostName remoteHostName, string remotePort)
		{
			throw new global::System.NotImplementedException("The member XboxLiveEndpointPair XboxLiveEndpointPair.FindEndpointPairByHostNamesAndPorts(HostName localHostName, string localPort, HostName remoteHostName, string remotePort) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=XboxLiveEndpointPair%20XboxLiveEndpointPair.FindEndpointPairByHostNamesAndPorts%28HostName%20localHostName%2C%20string%20localPort%2C%20HostName%20remoteHostName%2C%20string%20remotePort%29");
		}
#endif
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.FromAbi(nint)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.operator ==(Windows.Networking.XboxLive.XboxLiveEndpointPair, Windows.Networking.XboxLive.XboxLiveEndpointPair)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.operator !=(Windows.Networking.XboxLive.XboxLiveEndpointPair, Windows.Networking.XboxLive.XboxLiveEndpointPair)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.Equals(Windows.Networking.XboxLive.XboxLiveEndpointPair)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.Equals(object)
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.GetHashCode()
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction DeleteAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction XboxLiveEndpointPair.DeleteAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20XboxLiveEndpointPair.DeleteAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void GetRemoteSocketAddressBytes(byte[] socketAddress)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveEndpointPair", "void XboxLiveEndpointPair.GetRemoteSocketAddressBytes(byte[] socketAddress)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void GetLocalSocketAddressBytes(byte[] socketAddress)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveEndpointPair", "void XboxLiveEndpointPair.GetLocalSocketAddressBytes(byte[] socketAddress)");
		}
#endif
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.StateChanged.add
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.StateChanged.remove
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.LocalHostName.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.LocalPort.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.RemoteDeviceAddress.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.RemoteHostName.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.RemotePort.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.State.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.Template.get
		// Forced skipping of method Windows.Networking.XboxLive.XboxLiveEndpointPair.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.XboxLive.XboxLiveEndpointPair, global::Windows.Networking.XboxLive.XboxLiveEndpointPairStateChangedEventArgs> StateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveEndpointPair", "event TypedEventHandler<XboxLiveEndpointPair, XboxLiveEndpointPairStateChangedEventArgs> XboxLiveEndpointPair.StateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.XboxLive.XboxLiveEndpointPair", "event TypedEventHandler<XboxLiveEndpointPair, XboxLiveEndpointPairStateChangedEventArgs> XboxLiveEndpointPair.StateChanged");
			}
		}
#endif
	}
}
