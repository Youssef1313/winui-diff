// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Geolocation
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial struct BasicGeoposition
	{
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.BasicGeoposition()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public BasicGeoposition(double _Latitude, double _Longitude, double _Altitude)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Geolocation.BasicGeoposition", "BasicGeoposition.BasicGeoposition(double _Latitude, double _Longitude, double _Altitude)");
		}
#endif
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.BasicGeoposition(double, double, double)
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.operator ==(Windows.Devices.Geolocation.BasicGeoposition, Windows.Devices.Geolocation.BasicGeoposition)
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.operator !=(Windows.Devices.Geolocation.BasicGeoposition, Windows.Devices.Geolocation.BasicGeoposition)
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.Equals(Windows.Devices.Geolocation.BasicGeoposition)
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.Equals(object)
		// Forced skipping of method Windows.Devices.Geolocation.BasicGeoposition.GetHashCode()
		// Skipping already declared field Windows.Devices.Geolocation.BasicGeoposition.Latitude
		// Skipping already declared field Windows.Devices.Geolocation.BasicGeoposition.Longitude
		// Skipping already declared field Windows.Devices.Geolocation.BasicGeoposition.Altitude
	}
}
