// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Chat
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ChatSearchReader
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ChatSearchReader()
		{
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.operator ==(Windows.ApplicationModel.Chat.ChatSearchReader, Windows.ApplicationModel.Chat.ChatSearchReader)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.operator !=(Windows.ApplicationModel.Chat.ChatSearchReader, Windows.ApplicationModel.Chat.ChatSearchReader)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.Equals(Windows.ApplicationModel.Chat.ChatSearchReader)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Chat.IChatItem>> ReadBatchAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<IChatItem>> ChatSearchReader.ReadBatchAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CIChatItem%3E%3E%20ChatSearchReader.ReadBatchAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Chat.IChatItem>> ReadBatchAsync(int count)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<IChatItem>> ChatSearchReader.ReadBatchAsync(int count) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CIChatItem%3E%3E%20ChatSearchReader.ReadBatchAsync%28int%20count%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSearchReader.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
