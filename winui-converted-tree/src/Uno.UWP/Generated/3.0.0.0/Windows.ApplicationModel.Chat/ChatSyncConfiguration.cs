// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Chat
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ChatSyncConfiguration
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ChatSyncConfiguration()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsSyncEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatSyncConfiguration.IsSyncEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatSyncConfiguration.IsSyncEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatSyncConfiguration", "bool ChatSyncConfiguration.IsSyncEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.Chat.ChatRestoreHistorySpan RestoreHistorySpan
		{
			get
			{
				throw new global::System.NotImplementedException("The member ChatRestoreHistorySpan ChatSyncConfiguration.RestoreHistorySpan is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ChatRestoreHistorySpan%20ChatSyncConfiguration.RestoreHistorySpan");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatSyncConfiguration", "ChatRestoreHistorySpan ChatSyncConfiguration.RestoreHistorySpan");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.operator ==(Windows.ApplicationModel.Chat.ChatSyncConfiguration, Windows.ApplicationModel.Chat.ChatSyncConfiguration)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.operator !=(Windows.ApplicationModel.Chat.ChatSyncConfiguration, Windows.ApplicationModel.Chat.ChatSyncConfiguration)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.Equals(Windows.ApplicationModel.Chat.ChatSyncConfiguration)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.IsSyncEnabled.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.IsSyncEnabled.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.RestoreHistorySpan.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.RestoreHistorySpan.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatSyncConfiguration.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
