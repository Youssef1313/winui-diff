// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Chat
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ChatQueryOptions
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SearchString
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatQueryOptions.SearchString is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatQueryOptions.SearchString");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatQueryOptions", "string ChatQueryOptions.SearchString");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ChatQueryOptions()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatQueryOptions", "ChatQueryOptions.ChatQueryOptions()");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.ChatQueryOptions()
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.operator ==(Windows.ApplicationModel.Chat.ChatQueryOptions, Windows.ApplicationModel.Chat.ChatQueryOptions)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.operator !=(Windows.ApplicationModel.Chat.ChatQueryOptions, Windows.ApplicationModel.Chat.ChatQueryOptions)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.Equals(Windows.ApplicationModel.Chat.ChatQueryOptions)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.SearchString.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.SearchString.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatQueryOptions.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
