// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.I2c
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class I2cDevice : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal I2cDevice()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.I2c.I2cConnectionSettings ConnectionSettings
		{
			get
			{
				throw new global::System.NotImplementedException("The member I2cConnectionSettings I2cDevice.ConnectionSettings is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=I2cConnectionSettings%20I2cDevice.ConnectionSettings");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DeviceId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string I2cDevice.DeviceId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20I2cDevice.DeviceId");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string GetDeviceSelector()
		{
			throw new global::System.NotImplementedException("The member string I2cDevice.GetDeviceSelector() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20I2cDevice.GetDeviceSelector%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string GetDeviceSelector(string friendlyName)
		{
			throw new global::System.NotImplementedException("The member string I2cDevice.GetDeviceSelector(string friendlyName) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20I2cDevice.GetDeviceSelector%28string%20friendlyName%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.I2c.I2cDevice> FromIdAsync(string deviceId, global::Windows.Devices.I2c.I2cConnectionSettings settings)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<I2cDevice> I2cDevice.FromIdAsync(string deviceId, I2cConnectionSettings settings) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CI2cDevice%3E%20I2cDevice.FromIdAsync%28string%20deviceId%2C%20I2cConnectionSettings%20settings%29");
		}
#endif
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.FromAbi(nint)
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.operator ==(Windows.Devices.I2c.I2cDevice, Windows.Devices.I2c.I2cDevice)
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.operator !=(Windows.Devices.I2c.I2cDevice, Windows.Devices.I2c.I2cDevice)
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.Equals(Windows.Devices.I2c.I2cDevice)
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.Equals(object)
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.GetHashCode()
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Write(byte[] buffer)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.I2c.I2cDevice", "void I2cDevice.Write(byte[] buffer)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.I2c.I2cTransferResult WritePartial(byte[] buffer)
		{
			throw new global::System.NotImplementedException("The member I2cTransferResult I2cDevice.WritePartial(byte[] buffer) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=I2cTransferResult%20I2cDevice.WritePartial%28byte%5B%5D%20buffer%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Read(byte[] buffer)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.I2c.I2cDevice", "void I2cDevice.Read(byte[] buffer)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.I2c.I2cTransferResult ReadPartial(byte[] buffer)
		{
			throw new global::System.NotImplementedException("The member I2cTransferResult I2cDevice.ReadPartial(byte[] buffer) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=I2cTransferResult%20I2cDevice.ReadPartial%28byte%5B%5D%20buffer%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void WriteRead(byte[] writeBuffer, byte[] readBuffer)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.I2c.I2cDevice", "void I2cDevice.WriteRead(byte[] writeBuffer, byte[] readBuffer)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.I2c.I2cTransferResult WriteReadPartial(byte[] writeBuffer, byte[] readBuffer)
		{
			throw new global::System.NotImplementedException("The member I2cTransferResult I2cDevice.WriteReadPartial(byte[] writeBuffer, byte[] readBuffer) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=I2cTransferResult%20I2cDevice.WriteReadPartial%28byte%5B%5D%20writeBuffer%2C%20byte%5B%5D%20readBuffer%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.I2c.I2cDevice", "void I2cDevice.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.ConnectionSettings.get
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.DeviceId.get
		// Forced skipping of method Windows.Devices.I2c.I2cDevice.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
