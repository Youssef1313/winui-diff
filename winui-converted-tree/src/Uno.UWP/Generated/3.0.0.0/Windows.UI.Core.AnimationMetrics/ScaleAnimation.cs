// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Core.AnimationMetrics
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ScaleAnimation : global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ScaleAnimation()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Foundation.Point global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Control1
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point ScaleAnimation.Control1 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20ScaleAnimation.Control1");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Foundation.Point global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Control2
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point ScaleAnimation.Control2 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20ScaleAnimation.Control2");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.TimeSpan global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Delay
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ScaleAnimation.Delay is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ScaleAnimation.Delay");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.TimeSpan global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Duration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ScaleAnimation.Duration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ScaleAnimation.Duration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.UI.Core.AnimationMetrics.PropertyAnimationType global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Type
		{
			get
			{
				throw new global::System.NotImplementedException("The member PropertyAnimationType ScaleAnimation.Type is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PropertyAnimationType%20ScaleAnimation.Type");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point Control1
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point ScaleAnimation.Control1 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20ScaleAnimation.Control1");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point Control2
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point ScaleAnimation.Control2 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20ScaleAnimation.Control2");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan Delay
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ScaleAnimation.Delay is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ScaleAnimation.Delay");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan Duration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan ScaleAnimation.Duration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20ScaleAnimation.Duration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float FinalScaleX
		{
			get
			{
				throw new global::System.NotImplementedException("The member float ScaleAnimation.FinalScaleX is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20ScaleAnimation.FinalScaleX");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float FinalScaleY
		{
			get
			{
				throw new global::System.NotImplementedException("The member float ScaleAnimation.FinalScaleY is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20ScaleAnimation.FinalScaleY");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float? InitialScaleX
		{
			get
			{
				throw new global::System.NotImplementedException("The member float? ScaleAnimation.InitialScaleX is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%3F%20ScaleAnimation.InitialScaleX");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float? InitialScaleY
		{
			get
			{
				throw new global::System.NotImplementedException("The member float? ScaleAnimation.InitialScaleY is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%3F%20ScaleAnimation.InitialScaleY");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point NormalizedOrigin
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point ScaleAnimation.NormalizedOrigin is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20ScaleAnimation.NormalizedOrigin");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Core.AnimationMetrics.PropertyAnimationType Type
		{
			get
			{
				throw new global::System.NotImplementedException("The member PropertyAnimationType ScaleAnimation.Type is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PropertyAnimationType%20ScaleAnimation.Type");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.FromAbi(nint)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.operator ==(Windows.UI.Core.AnimationMetrics.ScaleAnimation, Windows.UI.Core.AnimationMetrics.ScaleAnimation)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.operator !=(Windows.UI.Core.AnimationMetrics.ScaleAnimation, Windows.UI.Core.AnimationMetrics.ScaleAnimation)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Equals(Windows.UI.Core.AnimationMetrics.ScaleAnimation)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Equals(object)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.GetHashCode()
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Control1.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Control2.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Delay.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Duration.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Windows.UI.Core.AnimationMetrics.IPropertyAnimation.Type.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Control1.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Control2.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Delay.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Duration.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.FinalScaleX.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.FinalScaleY.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.InitialScaleX.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.InitialScaleY.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.NormalizedOrigin.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.Type.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.ScaleAnimation.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.UI.Core.AnimationMetrics.IPropertyAnimation
	}
}
