// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Core.AnimationMetrics
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AnimationDescription
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Core.AnimationMetrics.IPropertyAnimation> Animations
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<IPropertyAnimation> AnimationDescription.Animations is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CIPropertyAnimation%3E%20AnimationDescription.Animations");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan DelayLimit
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan AnimationDescription.DelayLimit is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20AnimationDescription.DelayLimit");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan StaggerDelay
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan AnimationDescription.StaggerDelay is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20AnimationDescription.StaggerDelay");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float StaggerDelayFactor
		{
			get
			{
				throw new global::System.NotImplementedException("The member float AnimationDescription.StaggerDelayFactor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20AnimationDescription.StaggerDelayFactor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int ZOrder
		{
			get
			{
				throw new global::System.NotImplementedException("The member int AnimationDescription.ZOrder is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20AnimationDescription.ZOrder");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public AnimationDescription(global::Windows.UI.Core.AnimationMetrics.AnimationEffect effect, global::Windows.UI.Core.AnimationMetrics.AnimationEffectTarget target)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.Core.AnimationMetrics.AnimationDescription", "AnimationDescription.AnimationDescription(AnimationEffect effect, AnimationEffectTarget target)");
		}
#endif
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.AnimationDescription(Windows.UI.Core.AnimationMetrics.AnimationEffect, Windows.UI.Core.AnimationMetrics.AnimationEffectTarget)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.FromAbi(nint)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.operator ==(Windows.UI.Core.AnimationMetrics.AnimationDescription, Windows.UI.Core.AnimationMetrics.AnimationDescription)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.operator !=(Windows.UI.Core.AnimationMetrics.AnimationDescription, Windows.UI.Core.AnimationMetrics.AnimationDescription)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.Equals(Windows.UI.Core.AnimationMetrics.AnimationDescription)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.Equals(object)
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.GetHashCode()
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.Animations.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.DelayLimit.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.StaggerDelay.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.StaggerDelayFactor.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.ZOrder.get
		// Forced skipping of method Windows.UI.Core.AnimationMetrics.AnimationDescription.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
