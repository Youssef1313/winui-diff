// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.System.Diagnostics
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ProcessDiagnosticInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ProcessDiagnosticInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.Diagnostics.ProcessCpuUsage CpuUsage
		{
			get
			{
				throw new global::System.NotImplementedException("The member ProcessCpuUsage ProcessDiagnosticInfo.CpuUsage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ProcessCpuUsage%20ProcessDiagnosticInfo.CpuUsage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.Diagnostics.ProcessDiskUsage DiskUsage
		{
			get
			{
				throw new global::System.NotImplementedException("The member ProcessDiskUsage ProcessDiagnosticInfo.DiskUsage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ProcessDiskUsage%20ProcessDiagnosticInfo.DiskUsage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ExecutableFileName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ProcessDiagnosticInfo.ExecutableFileName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ProcessDiagnosticInfo.ExecutableFileName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsPackaged
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ProcessDiagnosticInfo.IsPackaged is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ProcessDiagnosticInfo.IsPackaged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.Diagnostics.ProcessMemoryUsage MemoryUsage
		{
			get
			{
				throw new global::System.NotImplementedException("The member ProcessMemoryUsage ProcessDiagnosticInfo.MemoryUsage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ProcessMemoryUsage%20ProcessDiagnosticInfo.MemoryUsage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.Diagnostics.ProcessDiagnosticInfo Parent
		{
			get
			{
				throw new global::System.NotImplementedException("The member ProcessDiagnosticInfo ProcessDiagnosticInfo.Parent is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ProcessDiagnosticInfo%20ProcessDiagnosticInfo.Parent");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ProcessId
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint ProcessDiagnosticInfo.ProcessId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20ProcessDiagnosticInfo.ProcessId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset ProcessStartTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset ProcessDiagnosticInfo.ProcessStartTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20ProcessDiagnosticInfo.ProcessStartTime");
			}
		}
#endif
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.Collections.Generic.IReadOnlyList<global::Windows.System.Diagnostics.ProcessDiagnosticInfo> GetForProcesses()
		{
			throw new global::System.NotImplementedException("The member IReadOnlyList<ProcessDiagnosticInfo> ProcessDiagnosticInfo.GetForProcesses() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CProcessDiagnosticInfo%3E%20ProcessDiagnosticInfo.GetForProcesses%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.System.Diagnostics.ProcessDiagnosticInfo GetForCurrentProcess()
		{
			throw new global::System.NotImplementedException("The member ProcessDiagnosticInfo ProcessDiagnosticInfo.GetForCurrentProcess() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ProcessDiagnosticInfo%20ProcessDiagnosticInfo.GetForCurrentProcess%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.System.Diagnostics.ProcessDiagnosticInfo TryGetForProcessId(uint processId)
		{
			throw new global::System.NotImplementedException("The member ProcessDiagnosticInfo ProcessDiagnosticInfo.TryGetForProcessId(uint processId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ProcessDiagnosticInfo%20ProcessDiagnosticInfo.TryGetForProcessId%28uint%20processId%29");
		}
#endif
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.FromAbi(nint)
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.operator ==(Windows.System.Diagnostics.ProcessDiagnosticInfo, Windows.System.Diagnostics.ProcessDiagnosticInfo)
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.operator !=(Windows.System.Diagnostics.ProcessDiagnosticInfo, Windows.System.Diagnostics.ProcessDiagnosticInfo)
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.Equals(Windows.System.Diagnostics.ProcessDiagnosticInfo)
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.Equals(object)
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.GetHashCode()
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.System.AppDiagnosticInfo> GetAppDiagnosticInfos()
		{
			throw new global::System.NotImplementedException("The member IList<AppDiagnosticInfo> ProcessDiagnosticInfo.GetAppDiagnosticInfos() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CAppDiagnosticInfo%3E%20ProcessDiagnosticInfo.GetAppDiagnosticInfos%28%29");
		}
#endif
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.CpuUsage.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.DiskUsage.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.ExecutableFileName.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.IsPackaged.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.MemoryUsage.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.Parent.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.ProcessId.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.ProcessStartTime.get
		// Forced skipping of method Windows.System.Diagnostics.ProcessDiagnosticInfo.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
