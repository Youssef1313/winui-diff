// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Gaming.Preview.GamesEnumeration
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GameListEntry : global::Windows.Gaming.Preview.GamesEnumeration.IGameListEntry
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GameListEntry()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Gaming.Preview.GamesEnumeration.GameListCategory global::Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.Category
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameListCategory GameListEntry.Category is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameListCategory%20GameListEntry.Category");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.ApplicationModel.AppDisplayInfo global::Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.DisplayInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppDisplayInfo GameListEntry.DisplayInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppDisplayInfo%20GameListEntry.DisplayInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.Collections.Generic.IReadOnlyDictionary<string, object> global::Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, object> GameListEntry.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20object%3E%20GameListEntry.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Gaming.Preview.GamesEnumeration.GameListCategory Category
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameListCategory GameListEntry.Category is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameListCategory%20GameListEntry.Category");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.AppDisplayInfo DisplayInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppDisplayInfo GameListEntry.DisplayInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppDisplayInfo%20GameListEntry.DisplayInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration GameModeConfiguration
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameModeConfiguration GameListEntry.GameModeConfiguration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameModeConfiguration%20GameListEntry.GameModeConfiguration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string LaunchParameters
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GameListEntry.LaunchParameters is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GameListEntry.LaunchParameters");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Gaming.Preview.GamesEnumeration.GameListEntryLaunchableState LaunchableState
		{
			get
			{
				throw new global::System.NotImplementedException("The member GameListEntryLaunchableState GameListEntry.LaunchableState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GameListEntryLaunchableState%20GameListEntry.LaunchableState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.IStorageFile LauncherExecutable
		{
			get
			{
				throw new global::System.NotImplementedException("The member IStorageFile GameListEntry.LauncherExecutable is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IStorageFile%20GameListEntry.LauncherExecutable");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, object> Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, object> GameListEntry.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20object%3E%20GameListEntry.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string TitleId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GameListEntry.TitleId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GameListEntry.TitleId");
			}
		}
#endif
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.FromAbi(nint)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.operator ==(Windows.Gaming.Preview.GamesEnumeration.GameListEntry, Windows.Gaming.Preview.GamesEnumeration.GameListEntry)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.operator !=(Windows.Gaming.Preview.GamesEnumeration.GameListEntry, Windows.Gaming.Preview.GamesEnumeration.GameListEntry)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Equals(Windows.Gaming.Preview.GamesEnumeration.GameListEntry)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Equals(object)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.GetHashCode()
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> LaunchAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> GameListEntry.LaunchAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20GameListEntry.LaunchAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.LaunchAsync()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetCategoryAsync(global::Windows.Gaming.Preview.GamesEnumeration.GameListCategory value)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction GameListEntry.SetCategoryAsync(GameListCategory value) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20GameListEntry.SetCategoryAsync%28GameListCategory%20value%29");
		}
#endif
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.SetCategoryAsync(Windows.Gaming.Preview.GamesEnumeration.GameListCategory)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.Category.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.DisplayInfo.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Windows.Gaming.Preview.GamesEnumeration.IGameListEntry.Properties.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetLauncherExecutableFileAsync(global::Windows.Storage.IStorageFile executableFile)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction GameListEntry.SetLauncherExecutableFileAsync(IStorageFile executableFile) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20GameListEntry.SetLauncherExecutableFileAsync%28IStorageFile%20executableFile%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetLauncherExecutableFileAsync(global::Windows.Storage.IStorageFile executableFile, string launchParams)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction GameListEntry.SetLauncherExecutableFileAsync(IStorageFile executableFile, string launchParams) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20GameListEntry.SetLauncherExecutableFileAsync%28IStorageFile%20executableFile%2C%20string%20launchParams%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SetTitleIdAsync(string id)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction GameListEntry.SetTitleIdAsync(string id) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20GameListEntry.SetTitleIdAsync%28string%20id%29");
		}
#endif
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Category.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.DisplayInfo.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.GameModeConfiguration.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.LaunchParameters.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.LaunchableState.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.LauncherExecutable.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.Properties.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.TitleId.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameListEntry.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Gaming.Preview.GamesEnumeration.IGameListEntry
	}
}
