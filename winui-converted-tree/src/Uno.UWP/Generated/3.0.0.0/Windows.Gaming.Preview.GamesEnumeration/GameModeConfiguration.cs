// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Gaming.Preview.GamesEnumeration
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GameModeConfiguration
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GameModeConfiguration()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AffinitizeToExclusiveCpus
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GameModeConfiguration.AffinitizeToExclusiveCpus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GameModeConfiguration.AffinitizeToExclusiveCpus");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "bool GameModeConfiguration.AffinitizeToExclusiveCpus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? CpuExclusivityMaskHigh
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? GameModeConfiguration.CpuExclusivityMaskHigh is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20GameModeConfiguration.CpuExclusivityMaskHigh");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "int? GameModeConfiguration.CpuExclusivityMaskHigh");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? CpuExclusivityMaskLow
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? GameModeConfiguration.CpuExclusivityMaskLow is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20GameModeConfiguration.CpuExclusivityMaskLow");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "int? GameModeConfiguration.CpuExclusivityMaskLow");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GameModeConfiguration.IsEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GameModeConfiguration.IsEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "bool GameModeConfiguration.IsEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? MaxCpuCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? GameModeConfiguration.MaxCpuCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20GameModeConfiguration.MaxCpuCount");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "int? GameModeConfiguration.MaxCpuCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? PercentGpuMemoryAllocatedToGame
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? GameModeConfiguration.PercentGpuMemoryAllocatedToGame is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20GameModeConfiguration.PercentGpuMemoryAllocatedToGame");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "int? GameModeConfiguration.PercentGpuMemoryAllocatedToGame");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? PercentGpuMemoryAllocatedToSystemCompositor
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? GameModeConfiguration.PercentGpuMemoryAllocatedToSystemCompositor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20GameModeConfiguration.PercentGpuMemoryAllocatedToSystemCompositor");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "int? GameModeConfiguration.PercentGpuMemoryAllocatedToSystemCompositor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? PercentGpuTimeAllocatedToGame
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? GameModeConfiguration.PercentGpuTimeAllocatedToGame is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20GameModeConfiguration.PercentGpuTimeAllocatedToGame");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration", "int? GameModeConfiguration.PercentGpuTimeAllocatedToGame");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<string> RelatedProcessNames
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<string> GameModeConfiguration.RelatedProcessNames is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3Cstring%3E%20GameModeConfiguration.RelatedProcessNames");
			}
		}
#endif
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.FromAbi(nint)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.operator ==(Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration, Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.operator !=(Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration, Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.Equals(Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.Equals(object)
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.GetHashCode()
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction SaveAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction GameModeConfiguration.SaveAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20GameModeConfiguration.SaveAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.AffinitizeToExclusiveCpus.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.AffinitizeToExclusiveCpus.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.CpuExclusivityMaskHigh.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.CpuExclusivityMaskHigh.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.CpuExclusivityMaskLow.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.CpuExclusivityMaskLow.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.IsEnabled.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.IsEnabled.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.MaxCpuCount.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.MaxCpuCount.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.PercentGpuMemoryAllocatedToGame.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.PercentGpuMemoryAllocatedToGame.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.PercentGpuMemoryAllocatedToSystemCompositor.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.PercentGpuMemoryAllocatedToSystemCompositor.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.PercentGpuTimeAllocatedToGame.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.PercentGpuTimeAllocatedToGame.set
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.RelatedProcessNames.get
		// Forced skipping of method Windows.Gaming.Preview.GamesEnumeration.GameModeConfiguration.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
