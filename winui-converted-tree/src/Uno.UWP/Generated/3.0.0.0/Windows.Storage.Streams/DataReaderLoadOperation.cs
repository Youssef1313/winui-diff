// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage.Streams
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class DataReaderLoadOperation : global::Windows.Foundation.IAsyncOperation<uint>, global::Windows.Foundation.IAsyncInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal DataReaderLoadOperation()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Foundation.AsyncOperationCompletedHandler<uint> global::Windows.Foundation.IAsyncOperation<uint>.Completed
		{
			get
			{
				throw new global::System.NotImplementedException("The member AsyncOperationCompletedHandler<uint> DataReaderLoadOperation.Completed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AsyncOperationCompletedHandler%3Cuint%3E%20DataReaderLoadOperation.Completed");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Streams.DataReaderLoadOperation", "AsyncOperationCompletedHandler<uint> DataReaderLoadOperation.Completed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.Exception global::Windows.Foundation.IAsyncInfo.ErrorCode
		{
			get
			{
				throw new global::System.NotImplementedException("The member Exception DataReaderLoadOperation.ErrorCode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Exception%20DataReaderLoadOperation.ErrorCode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		uint global::Windows.Foundation.IAsyncInfo.Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint DataReaderLoadOperation.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20DataReaderLoadOperation.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Foundation.AsyncStatus global::Windows.Foundation.IAsyncInfo.Status
		{
			get
			{
				throw new global::System.NotImplementedException("The member AsyncStatus DataReaderLoadOperation.Status is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AsyncStatus%20DataReaderLoadOperation.Status");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.AsyncOperationCompletedHandler<uint> Completed
		{
			get
			{
				throw new global::System.NotImplementedException("The member AsyncOperationCompletedHandler<uint> DataReaderLoadOperation.Completed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AsyncOperationCompletedHandler%3Cuint%3E%20DataReaderLoadOperation.Completed");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Streams.DataReaderLoadOperation", "AsyncOperationCompletedHandler<uint> DataReaderLoadOperation.Completed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Exception ErrorCode
		{
			get
			{
				throw new global::System.NotImplementedException("The member Exception DataReaderLoadOperation.ErrorCode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Exception%20DataReaderLoadOperation.ErrorCode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint DataReaderLoadOperation.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20DataReaderLoadOperation.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.AsyncStatus Status
		{
			get
			{
				throw new global::System.NotImplementedException("The member AsyncStatus DataReaderLoadOperation.Status is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AsyncStatus%20DataReaderLoadOperation.Status");
			}
		}
#endif
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.FromAbi(nint)
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.operator ==(Windows.Storage.Streams.DataReaderLoadOperation, Windows.Storage.Streams.DataReaderLoadOperation)
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.operator !=(Windows.Storage.Streams.DataReaderLoadOperation, Windows.Storage.Streams.DataReaderLoadOperation)
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Equals(Windows.Storage.Streams.DataReaderLoadOperation)
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Equals(object)
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.GetHashCode()
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint GetResults()
		{
			throw new global::System.NotImplementedException("The member uint DataReaderLoadOperation.GetResults() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20DataReaderLoadOperation.GetResults%28%29");
		}
#endif
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncOperation<uint>.GetResults()
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncOperation<uint>.Completed.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncOperation<uint>.Completed.set
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Cancel()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Streams.DataReaderLoadOperation", "void DataReaderLoadOperation.Cancel()");
		}
#endif
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncInfo.Cancel()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Close()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Streams.DataReaderLoadOperation", "void DataReaderLoadOperation.Close()");
		}
#endif
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncInfo.Close()
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncInfo.ErrorCode.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncInfo.Id.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Windows.Foundation.IAsyncInfo.Status.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Completed.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Completed.set
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.ErrorCode.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Id.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.Status.get
		// Forced skipping of method Windows.Storage.Streams.DataReaderLoadOperation.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Foundation.IAsyncOperation<uint>
		// Processing: Windows.Foundation.IAsyncInfo
	}
}
