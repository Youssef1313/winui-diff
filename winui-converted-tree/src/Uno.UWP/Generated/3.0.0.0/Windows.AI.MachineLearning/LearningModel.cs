// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.AI.MachineLearning
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LearningModel : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal LearningModel()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Author
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LearningModel.Author is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LearningModel.Author");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Description
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LearningModel.Description is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LearningModel.Description");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Domain
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LearningModel.Domain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LearningModel.Domain");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.AI.MachineLearning.ILearningModelFeatureDescriptor> InputFeatures
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<ILearningModelFeatureDescriptor> LearningModel.InputFeatures is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CILearningModelFeatureDescriptor%3E%20LearningModel.InputFeatures");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, string> Metadata
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, string> LearningModel.Metadata is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20string%3E%20LearningModel.Metadata");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Name
		{
			get
			{
				throw new global::System.NotImplementedException("The member string LearningModel.Name is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20LearningModel.Name");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.AI.MachineLearning.ILearningModelFeatureDescriptor> OutputFeatures
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<ILearningModelFeatureDescriptor> LearningModel.OutputFeatures is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CILearningModelFeatureDescriptor%3E%20LearningModel.OutputFeatures");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public long Version
		{
			get
			{
				throw new global::System.NotImplementedException("The member long LearningModel.Version is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=long%20LearningModel.Version");
			}
		}
#endif
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.AI.MachineLearning.LearningModel> LoadFromStorageFileAsync(global::Windows.Storage.IStorageFile modelFile)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<LearningModel> LearningModel.LoadFromStorageFileAsync(IStorageFile modelFile) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CLearningModel%3E%20LearningModel.LoadFromStorageFileAsync%28IStorageFile%20modelFile%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.AI.MachineLearning.LearningModel> LoadFromStreamAsync(global::Windows.Storage.Streams.IRandomAccessStreamReference modelStream)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<LearningModel> LearningModel.LoadFromStreamAsync(IRandomAccessStreamReference modelStream) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CLearningModel%3E%20LearningModel.LoadFromStreamAsync%28IRandomAccessStreamReference%20modelStream%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.AI.MachineLearning.LearningModel LoadFromFilePath(string filePath)
		{
			throw new global::System.NotImplementedException("The member LearningModel LearningModel.LoadFromFilePath(string filePath) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=LearningModel%20LearningModel.LoadFromFilePath%28string%20filePath%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.AI.MachineLearning.LearningModel LoadFromStream(global::Windows.Storage.Streams.IRandomAccessStreamReference modelStream)
		{
			throw new global::System.NotImplementedException("The member LearningModel LearningModel.LoadFromStream(IRandomAccessStreamReference modelStream) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=LearningModel%20LearningModel.LoadFromStream%28IRandomAccessStreamReference%20modelStream%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.AI.MachineLearning.LearningModel> LoadFromStorageFileAsync(global::Windows.Storage.IStorageFile modelFile, global::Windows.AI.MachineLearning.ILearningModelOperatorProvider operatorProvider)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<LearningModel> LearningModel.LoadFromStorageFileAsync(IStorageFile modelFile, ILearningModelOperatorProvider operatorProvider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CLearningModel%3E%20LearningModel.LoadFromStorageFileAsync%28IStorageFile%20modelFile%2C%20ILearningModelOperatorProvider%20operatorProvider%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.AI.MachineLearning.LearningModel> LoadFromStreamAsync(global::Windows.Storage.Streams.IRandomAccessStreamReference modelStream, global::Windows.AI.MachineLearning.ILearningModelOperatorProvider operatorProvider)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<LearningModel> LearningModel.LoadFromStreamAsync(IRandomAccessStreamReference modelStream, ILearningModelOperatorProvider operatorProvider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CLearningModel%3E%20LearningModel.LoadFromStreamAsync%28IRandomAccessStreamReference%20modelStream%2C%20ILearningModelOperatorProvider%20operatorProvider%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.AI.MachineLearning.LearningModel LoadFromFilePath(string filePath, global::Windows.AI.MachineLearning.ILearningModelOperatorProvider operatorProvider)
		{
			throw new global::System.NotImplementedException("The member LearningModel LearningModel.LoadFromFilePath(string filePath, ILearningModelOperatorProvider operatorProvider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=LearningModel%20LearningModel.LoadFromFilePath%28string%20filePath%2C%20ILearningModelOperatorProvider%20operatorProvider%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.AI.MachineLearning.LearningModel LoadFromStream(global::Windows.Storage.Streams.IRandomAccessStreamReference modelStream, global::Windows.AI.MachineLearning.ILearningModelOperatorProvider operatorProvider)
		{
			throw new global::System.NotImplementedException("The member LearningModel LearningModel.LoadFromStream(IRandomAccessStreamReference modelStream, ILearningModelOperatorProvider operatorProvider) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=LearningModel%20LearningModel.LoadFromStream%28IRandomAccessStreamReference%20modelStream%2C%20ILearningModelOperatorProvider%20operatorProvider%29");
		}
#endif
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.FromAbi(nint)
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.operator ==(Windows.AI.MachineLearning.LearningModel, Windows.AI.MachineLearning.LearningModel)
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.operator !=(Windows.AI.MachineLearning.LearningModel, Windows.AI.MachineLearning.LearningModel)
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Equals(Windows.AI.MachineLearning.LearningModel)
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Equals(object)
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.GetHashCode()
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.AI.MachineLearning.LearningModel", "void LearningModel.Dispose()");
		}
#endif
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Author.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Description.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Domain.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.InputFeatures.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Metadata.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Name.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.OutputFeatures.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.Version.get
		// Forced skipping of method Windows.AI.MachineLearning.LearningModel.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
