// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Pwm
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PwmPin : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal PwmPin()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Pwm.PwmController Controller
		{
			get
			{
				throw new global::System.NotImplementedException("The member PwmController PwmPin.Controller is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PwmController%20PwmPin.Controller");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsStarted
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PwmPin.IsStarted is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PwmPin.IsStarted");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Pwm.PwmPulsePolarity Polarity
		{
			get
			{
				throw new global::System.NotImplementedException("The member PwmPulsePolarity PwmPin.Polarity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PwmPulsePolarity%20PwmPin.Polarity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Pwm.PwmPin", "PwmPulsePolarity PwmPin.Polarity");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.operator ==(Windows.Devices.Pwm.PwmPin, Windows.Devices.Pwm.PwmPin)
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.operator !=(Windows.Devices.Pwm.PwmPin, Windows.Devices.Pwm.PwmPin)
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.Equals(Windows.Devices.Pwm.PwmPin)
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.Equals(object)
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.GetHashCode()
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double GetActiveDutyCyclePercentage()
		{
			throw new global::System.NotImplementedException("The member double PwmPin.GetActiveDutyCyclePercentage() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20PwmPin.GetActiveDutyCyclePercentage%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetActiveDutyCyclePercentage(double dutyCyclePercentage)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Pwm.PwmPin", "void PwmPin.SetActiveDutyCyclePercentage(double dutyCyclePercentage)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Start()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Pwm.PwmPin", "void PwmPin.Start()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Stop()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Pwm.PwmPin", "void PwmPin.Stop()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Pwm.PwmPin", "void PwmPin.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.Controller.get
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.IsStarted.get
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.Polarity.get
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.Polarity.set
		// Forced skipping of method Windows.Devices.Pwm.PwmPin.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
