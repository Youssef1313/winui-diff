// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Security.EnterpriseData
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ThreadNetworkContext : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ThreadNetworkContext()
		{
		}
#endif
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.FromAbi(nint)
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.operator ==(Windows.Security.EnterpriseData.ThreadNetworkContext, Windows.Security.EnterpriseData.ThreadNetworkContext)
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.operator !=(Windows.Security.EnterpriseData.ThreadNetworkContext, Windows.Security.EnterpriseData.ThreadNetworkContext)
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.Equals(Windows.Security.EnterpriseData.ThreadNetworkContext)
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.Equals(object)
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.GetHashCode()
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Security.EnterpriseData.ThreadNetworkContext", "void ThreadNetworkContext.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Security.EnterpriseData.ThreadNetworkContext.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
