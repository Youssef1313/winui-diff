// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Search
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SearchPane
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SearchPane()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Language
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SearchPane.Language is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SearchPane.Language");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string PlaceholderText
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SearchPane.PlaceholderText is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SearchPane.PlaceholderText");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "string SearchPane.PlaceholderText");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string QueryText
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SearchPane.QueryText is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SearchPane.QueryText");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SearchHistoryContext
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SearchPane.SearchHistoryContext is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SearchPane.SearchHistoryContext");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "string SearchPane.SearchHistoryContext");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool SearchHistoryEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SearchPane.SearchHistoryEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SearchPane.SearchHistoryEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "bool SearchPane.SearchHistoryEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShowOnKeyboardInput
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SearchPane.ShowOnKeyboardInput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SearchPane.ShowOnKeyboardInput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "bool SearchPane.ShowOnKeyboardInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Visible
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SearchPane.Visible is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SearchPane.Visible");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.ApplicationModel.Search.SearchPane GetForCurrentView()
		{
			throw new global::System.NotImplementedException("The member SearchPane SearchPane.GetForCurrentView() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SearchPane%20SearchPane.GetForCurrentView%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void HideThisApplication()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "void SearchPane.HideThisApplication()");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.operator ==(Windows.ApplicationModel.Search.SearchPane, Windows.ApplicationModel.Search.SearchPane)
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.operator !=(Windows.ApplicationModel.Search.SearchPane, Windows.ApplicationModel.Search.SearchPane)
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.Equals(Windows.ApplicationModel.Search.SearchPane)
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetLocalContentSuggestionSettings(global::Windows.ApplicationModel.Search.LocalContentSuggestionSettings settings)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "void SearchPane.SetLocalContentSuggestionSettings(LocalContentSuggestionSettings settings)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Show()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "void SearchPane.Show()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Show(string query)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "void SearchPane.Show(string query)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TrySetQueryText(string query)
		{
			throw new global::System.NotImplementedException("The member bool SearchPane.TrySetQueryText(string query) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SearchPane.TrySetQueryText%28string%20query%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.QueryChanged.add
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.QueryChanged.remove
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.QuerySubmitted.add
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.QuerySubmitted.remove
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.ResultSuggestionChosen.add
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.ResultSuggestionChosen.remove
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.SuggestionsRequested.add
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.SuggestionsRequested.remove
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.VisibilityChanged.add
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.VisibilityChanged.remove
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.Language.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.PlaceholderText.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.PlaceholderText.set
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.QueryText.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.SearchHistoryContext.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.SearchHistoryContext.set
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.SearchHistoryEnabled.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.SearchHistoryEnabled.set
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.ShowOnKeyboardInput.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.ShowOnKeyboardInput.set
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.Visible.get
		// Forced skipping of method Windows.ApplicationModel.Search.SearchPane.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.SearchPane, global::Windows.ApplicationModel.Search.SearchPaneQueryChangedEventArgs> QueryChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneQueryChangedEventArgs> SearchPane.QueryChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneQueryChangedEventArgs> SearchPane.QueryChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.SearchPane, global::Windows.ApplicationModel.Search.SearchPaneQuerySubmittedEventArgs> QuerySubmitted
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneQuerySubmittedEventArgs> SearchPane.QuerySubmitted");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneQuerySubmittedEventArgs> SearchPane.QuerySubmitted");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.SearchPane, global::Windows.ApplicationModel.Search.SearchPaneResultSuggestionChosenEventArgs> ResultSuggestionChosen
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneResultSuggestionChosenEventArgs> SearchPane.ResultSuggestionChosen");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneResultSuggestionChosenEventArgs> SearchPane.ResultSuggestionChosen");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.SearchPane, global::Windows.ApplicationModel.Search.SearchPaneSuggestionsRequestedEventArgs> SuggestionsRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneSuggestionsRequestedEventArgs> SearchPane.SuggestionsRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneSuggestionsRequestedEventArgs> SearchPane.SuggestionsRequested");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.SearchPane, global::Windows.ApplicationModel.Search.SearchPaneVisibilityChangedEventArgs> VisibilityChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneVisibilityChangedEventArgs> SearchPane.VisibilityChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.SearchPane", "event TypedEventHandler<SearchPane, SearchPaneVisibilityChangedEventArgs> SearchPane.VisibilityChanged");
			}
		}
#endif
	}
}
