// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Web.Http.Diagnostics
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class HttpDiagnosticProviderRequestSentEventArgs
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal HttpDiagnosticProviderRequestSentEventArgs()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid ActivityId
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid HttpDiagnosticProviderRequestSentEventArgs.ActivityId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20HttpDiagnosticProviderRequestSentEventArgs.ActivityId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator Initiator
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpDiagnosticRequestInitiator HttpDiagnosticProviderRequestSentEventArgs.Initiator is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpDiagnosticRequestInitiator%20HttpDiagnosticProviderRequestSentEventArgs.Initiator");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.HttpRequestMessage Message
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpRequestMessage HttpDiagnosticProviderRequestSentEventArgs.Message is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpRequestMessage%20HttpDiagnosticProviderRequestSentEventArgs.Message");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ProcessId
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint HttpDiagnosticProviderRequestSentEventArgs.ProcessId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20HttpDiagnosticProviderRequestSentEventArgs.ProcessId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Web.Http.Diagnostics.HttpDiagnosticSourceLocation> SourceLocations
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<HttpDiagnosticSourceLocation> HttpDiagnosticProviderRequestSentEventArgs.SourceLocations is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CHttpDiagnosticSourceLocation%3E%20HttpDiagnosticProviderRequestSentEventArgs.SourceLocations");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ThreadId
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint HttpDiagnosticProviderRequestSentEventArgs.ThreadId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20HttpDiagnosticProviderRequestSentEventArgs.ThreadId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset Timestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset HttpDiagnosticProviderRequestSentEventArgs.Timestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20HttpDiagnosticProviderRequestSentEventArgs.Timestamp");
			}
		}
#endif
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.FromAbi(nint)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.operator ==(Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.operator !=(Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.Equals(Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.Equals(object)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.GetHashCode()
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.ActivityId.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.Initiator.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.Message.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.ProcessId.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.SourceLocations.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.ThreadId.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.Timestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
