// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Web.Http.Diagnostics
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class HttpDiagnosticProviderRequestResponseTimestamps
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal HttpDiagnosticProviderRequestResponseTimestamps()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? CacheCheckedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.CacheCheckedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.CacheCheckedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? ConnectionCompletedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.ConnectionCompletedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.ConnectionCompletedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? ConnectionInitiatedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.ConnectionInitiatedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.ConnectionInitiatedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? NameResolvedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.NameResolvedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.NameResolvedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? RequestCompletedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.RequestCompletedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.RequestCompletedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? RequestSentTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.RequestSentTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.RequestSentTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? ResponseCompletedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.ResponseCompletedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.ResponseCompletedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? ResponseReceivedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.ResponseReceivedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.ResponseReceivedTimestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? SslNegotiatedTimestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpDiagnosticProviderRequestResponseTimestamps.SslNegotiatedTimestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpDiagnosticProviderRequestResponseTimestamps.SslNegotiatedTimestamp");
			}
		}
#endif
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.FromAbi(nint)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.operator ==(Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.operator !=(Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.Equals(Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.Equals(object)
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.GetHashCode()
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.CacheCheckedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.ConnectionCompletedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.ConnectionInitiatedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.NameResolvedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.RequestCompletedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.RequestSentTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.ResponseCompletedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.ResponseReceivedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.SslNegotiatedTimestamp.get
		// Forced skipping of method Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
