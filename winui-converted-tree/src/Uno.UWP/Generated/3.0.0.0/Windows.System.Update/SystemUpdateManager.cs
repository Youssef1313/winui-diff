// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.System.Update
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public static partial class SystemUpdateManager
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.System.Update.SystemUpdateAttentionRequiredReason AttentionRequiredReason
		{
			get
			{
				throw new global::System.NotImplementedException("The member SystemUpdateAttentionRequiredReason SystemUpdateManager.AttentionRequiredReason is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SystemUpdateAttentionRequiredReason%20SystemUpdateManager.AttentionRequiredReason");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static double DownloadProgress
		{
			get
			{
				throw new global::System.NotImplementedException("The member double SystemUpdateManager.DownloadProgress is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20SystemUpdateManager.DownloadProgress");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.Exception ExtendedError
		{
			get
			{
				throw new global::System.NotImplementedException("The member Exception SystemUpdateManager.ExtendedError is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Exception%20SystemUpdateManager.ExtendedError");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static double InstallProgress
		{
			get
			{
				throw new global::System.NotImplementedException("The member double SystemUpdateManager.InstallProgress is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20SystemUpdateManager.InstallProgress");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.System.Update.SystemUpdateLastErrorInfo LastErrorInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member SystemUpdateLastErrorInfo SystemUpdateManager.LastErrorInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SystemUpdateLastErrorInfo%20SystemUpdateManager.LastErrorInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.DateTimeOffset LastUpdateCheckTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset SystemUpdateManager.LastUpdateCheckTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20SystemUpdateManager.LastUpdateCheckTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.DateTimeOffset LastUpdateInstallTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset SystemUpdateManager.LastUpdateInstallTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20SystemUpdateManager.LastUpdateInstallTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.System.Update.SystemUpdateManagerState State
		{
			get
			{
				throw new global::System.NotImplementedException("The member SystemUpdateManagerState SystemUpdateManager.State is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SystemUpdateManagerState%20SystemUpdateManager.State");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.TimeSpan UserActiveHoursEnd
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan SystemUpdateManager.UserActiveHoursEnd is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20SystemUpdateManager.UserActiveHoursEnd");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static int UserActiveHoursMax
		{
			get
			{
				throw new global::System.NotImplementedException("The member int SystemUpdateManager.UserActiveHoursMax is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20SystemUpdateManager.UserActiveHoursMax");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.TimeSpan UserActiveHoursStart
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan SystemUpdateManager.UserActiveHoursStart is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20SystemUpdateManager.UserActiveHoursStart");
			}
		}
#endif
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool IsSupported()
		{
			throw new global::System.NotImplementedException("The member bool SystemUpdateManager.IsSupported() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SystemUpdateManager.IsSupported%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool TrySetUserActiveHours(global::System.TimeSpan start, global::System.TimeSpan end)
		{
			throw new global::System.NotImplementedException("The member bool SystemUpdateManager.TrySetUserActiveHours(TimeSpan start, TimeSpan end) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SystemUpdateManager.TrySetUserActiveHours%28TimeSpan%20start%2C%20TimeSpan%20end%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.Collections.Generic.IReadOnlyList<string> GetAutomaticRebootBlockIds()
		{
			throw new global::System.NotImplementedException("The member IReadOnlyList<string> SystemUpdateManager.GetAutomaticRebootBlockIds() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3Cstring%3E%20SystemUpdateManager.GetAutomaticRebootBlockIds%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<bool> BlockAutomaticRebootAsync(string lockId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> SystemUpdateManager.BlockAutomaticRebootAsync(string lockId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20SystemUpdateManager.BlockAutomaticRebootAsync%28string%20lockId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<bool> UnblockAutomaticRebootAsync(string lockId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> SystemUpdateManager.UnblockAutomaticRebootAsync(string lockId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20SystemUpdateManager.UnblockAutomaticRebootAsync%28string%20lockId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.Collections.Generic.IReadOnlyList<global::Windows.System.Update.SystemUpdateItem> GetUpdateItems()
		{
			throw new global::System.NotImplementedException("The member IReadOnlyList<SystemUpdateItem> SystemUpdateManager.GetUpdateItems() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CSystemUpdateItem%3E%20SystemUpdateManager.GetUpdateItems%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool SetFlightRing(string flightRing)
		{
			throw new global::System.NotImplementedException("The member bool SystemUpdateManager.SetFlightRing(string flightRing) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SystemUpdateManager.SetFlightRing%28string%20flightRing%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string GetFlightRing()
		{
			throw new global::System.NotImplementedException("The member string SystemUpdateManager.GetFlightRing() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SystemUpdateManager.GetFlightRing%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void StartInstall(global::Windows.System.Update.SystemUpdateStartInstallAction action)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.Update.SystemUpdateManager", "void SystemUpdateManager.StartInstall(SystemUpdateStartInstallAction action)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void RebootToCompleteInstall()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.Update.SystemUpdateManager", "void SystemUpdateManager.RebootToCompleteInstall()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void StartCancelUpdates()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.Update.SystemUpdateManager", "void SystemUpdateManager.StartCancelUpdates()");
		}
#endif
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.AttentionRequiredReason.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.DownloadProgress.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.ExtendedError.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.InstallProgress.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.LastErrorInfo.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.LastUpdateCheckTime.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.LastUpdateInstallTime.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.State.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.UserActiveHoursEnd.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.UserActiveHoursMax.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.UserActiveHoursStart.get
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.StateChanged.add
		// Forced skipping of method Windows.System.Update.SystemUpdateManager.StateChanged.remove
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static event global::System.EventHandler<object> StateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.Update.SystemUpdateManager", "event EventHandler<object> SystemUpdateManager.StateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.System.Update.SystemUpdateManager", "event EventHandler<object> SystemUpdateManager.StateChanged");
			}
		}
#endif
	}
}
