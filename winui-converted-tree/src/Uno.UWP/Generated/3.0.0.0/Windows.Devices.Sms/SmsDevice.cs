// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Sms
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SmsDevice : global::Windows.Devices.Sms.ISmsDevice
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal SmsDevice()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Devices.Sms.ISmsDevice.AccountPhoneNumber
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SmsDevice.AccountPhoneNumber is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SmsDevice.AccountPhoneNumber");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Sms.CellularClass global::Windows.Devices.Sms.ISmsDevice.CellularClass
		{
			get
			{
				throw new global::System.NotImplementedException("The member CellularClass SmsDevice.CellularClass is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CellularClass%20SmsDevice.CellularClass");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Sms.SmsDeviceStatus global::Windows.Devices.Sms.ISmsDevice.DeviceStatus
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmsDeviceStatus SmsDevice.DeviceStatus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmsDeviceStatus%20SmsDevice.DeviceStatus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::Windows.Devices.Sms.SmsDeviceMessageStore global::Windows.Devices.Sms.ISmsDevice.MessageStore
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmsDeviceMessageStore SmsDevice.MessageStore is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmsDeviceMessageStore%20SmsDevice.MessageStore");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string AccountPhoneNumber
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SmsDevice.AccountPhoneNumber is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SmsDevice.AccountPhoneNumber");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Sms.CellularClass CellularClass
		{
			get
			{
				throw new global::System.NotImplementedException("The member CellularClass SmsDevice.CellularClass is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CellularClass%20SmsDevice.CellularClass");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Sms.SmsDeviceStatus DeviceStatus
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmsDeviceStatus SmsDevice.DeviceStatus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmsDeviceStatus%20SmsDevice.DeviceStatus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Sms.SmsDeviceMessageStore MessageStore
		{
			get
			{
				throw new global::System.NotImplementedException("The member SmsDeviceMessageStore SmsDevice.MessageStore is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmsDeviceMessageStore%20SmsDevice.MessageStore");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string GetDeviceSelector()
		{
			throw new global::System.NotImplementedException("The member string SmsDevice.GetDeviceSelector() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SmsDevice.GetDeviceSelector%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Sms.SmsDevice> FromIdAsync(string deviceId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<SmsDevice> SmsDevice.FromIdAsync(string deviceId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CSmsDevice%3E%20SmsDevice.FromIdAsync%28string%20deviceId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Sms.SmsDevice> GetDefaultAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<SmsDevice> SmsDevice.GetDefaultAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CSmsDevice%3E%20SmsDevice.GetDefaultAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Sms.SmsDevice> FromNetworkAccountIdAsync(string networkAccountId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<SmsDevice> SmsDevice.FromNetworkAccountIdAsync(string networkAccountId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CSmsDevice%3E%20SmsDevice.FromNetworkAccountIdAsync%28string%20networkAccountId%29");
		}
#endif
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.operator ==(Windows.Devices.Sms.SmsDevice, Windows.Devices.Sms.SmsDevice)
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.operator !=(Windows.Devices.Sms.SmsDevice, Windows.Devices.Sms.SmsDevice)
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Equals(Windows.Devices.Sms.SmsDevice)
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Equals(object)
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.GetHashCode()
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Sms.SendSmsMessageOperation SendMessageAsync(global::Windows.Devices.Sms.ISmsMessage message)
		{
			throw new global::System.NotImplementedException("The member SendSmsMessageOperation SmsDevice.SendMessageAsync(ISmsMessage message) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SendSmsMessageOperation%20SmsDevice.SendMessageAsync%28ISmsMessage%20message%29");
		}
#endif
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.SendMessageAsync(Windows.Devices.Sms.ISmsMessage)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Sms.SmsEncodedLength CalculateLength(global::Windows.Devices.Sms.SmsTextMessage message)
		{
			throw new global::System.NotImplementedException("The member SmsEncodedLength SmsDevice.CalculateLength(SmsTextMessage message) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SmsEncodedLength%20SmsDevice.CalculateLength%28SmsTextMessage%20message%29");
		}
#endif
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.CalculateLength(Windows.Devices.Sms.SmsTextMessage)
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.SmsDeviceStatusChanged.add
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.SmsDeviceStatusChanged.remove
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.SmsDeviceStatusChanged.add
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.SmsDeviceStatusChanged.remove
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.SmsMessageReceived.add
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.SmsMessageReceived.remove
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.SmsMessageReceived.add
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.SmsMessageReceived.remove
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.AccountPhoneNumber.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.CellularClass.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.DeviceStatus.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.Windows.Devices.Sms.ISmsDevice.MessageStore.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.AccountPhoneNumber.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.CellularClass.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.DeviceStatus.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.MessageStore.get
		// Forced skipping of method Windows.Devices.Sms.SmsDevice.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Devices.Sms.SmsDeviceStatusChangedEventHandler SmsDeviceStatusChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsDeviceStatusChangedEventHandler SmsDevice.SmsDeviceStatusChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsDeviceStatusChangedEventHandler SmsDevice.SmsDeviceStatusChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		event global::Windows.Devices.Sms.SmsDeviceStatusChangedEventHandler global::Windows.Devices.Sms.ISmsDevice.SmsDeviceStatusChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsDeviceStatusChangedEventHandler SmsDevice.SmsDeviceStatusChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsDeviceStatusChangedEventHandler SmsDevice.SmsDeviceStatusChanged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Devices.Sms.SmsMessageReceivedEventHandler SmsMessageReceived
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsMessageReceivedEventHandler SmsDevice.SmsMessageReceived");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsMessageReceivedEventHandler SmsDevice.SmsMessageReceived");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		event global::Windows.Devices.Sms.SmsMessageReceivedEventHandler global::Windows.Devices.Sms.ISmsDevice.SmsMessageReceived
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsMessageReceivedEventHandler SmsDevice.SmsMessageReceived");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Sms.SmsDevice", "event SmsMessageReceivedEventHandler SmsDevice.SmsMessageReceived");
			}
		}
#endif
		// Processing: Windows.Devices.Sms.ISmsDevice
	}
}
