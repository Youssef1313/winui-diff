// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Gpio
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial struct GpioChangeRecord
	{
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.GpioChangeRecord()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public GpioChangeRecord(global::System.TimeSpan _RelativeTime, global::Windows.Devices.Gpio.GpioPinEdge _Edge)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeRecord", "GpioChangeRecord.GpioChangeRecord(TimeSpan _RelativeTime, GpioPinEdge _Edge)");
		}
#endif
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.GpioChangeRecord(System.TimeSpan, Windows.Devices.Gpio.GpioPinEdge)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.operator ==(Windows.Devices.Gpio.GpioChangeRecord, Windows.Devices.Gpio.GpioChangeRecord)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.operator !=(Windows.Devices.Gpio.GpioChangeRecord, Windows.Devices.Gpio.GpioChangeRecord)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.Equals(Windows.Devices.Gpio.GpioChangeRecord)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.Equals(object)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeRecord.GetHashCode()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public global::System.TimeSpan RelativeTime;
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		public global::Windows.Devices.Gpio.GpioPinEdge Edge;
#endif
	}
}
