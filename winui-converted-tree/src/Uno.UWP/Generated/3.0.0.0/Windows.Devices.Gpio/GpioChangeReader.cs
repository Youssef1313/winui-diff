// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Gpio
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GpioChangeReader : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int Capacity
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GpioChangeReader.Capacity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GpioChangeReader.Capacity");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsEmpty
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GpioChangeReader.IsEmpty is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GpioChangeReader.IsEmpty");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsOverflowed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GpioChangeReader.IsOverflowed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GpioChangeReader.IsOverflowed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsStarted
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GpioChangeReader.IsStarted is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GpioChangeReader.IsStarted");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int Length
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GpioChangeReader.Length is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GpioChangeReader.Length");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.GpioChangePolarity Polarity
		{
			get
			{
				throw new global::System.NotImplementedException("The member GpioChangePolarity GpioChangeReader.Polarity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GpioChangePolarity%20GpioChangeReader.Polarity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "GpioChangePolarity GpioChangeReader.Polarity");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public GpioChangeReader(global::Windows.Devices.Gpio.GpioPin pin)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "GpioChangeReader.GpioChangeReader(GpioPin pin)");
		}
#endif
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.GpioChangeReader(Windows.Devices.Gpio.GpioPin)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public GpioChangeReader(global::Windows.Devices.Gpio.GpioPin pin, int minCapacity)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "GpioChangeReader.GpioChangeReader(GpioPin pin, int minCapacity)");
		}
#endif
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.GpioChangeReader(Windows.Devices.Gpio.GpioPin, int)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.operator ==(Windows.Devices.Gpio.GpioChangeReader, Windows.Devices.Gpio.GpioChangeReader)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.operator !=(Windows.Devices.Gpio.GpioChangeReader, Windows.Devices.Gpio.GpioChangeReader)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.Equals(Windows.Devices.Gpio.GpioChangeReader)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.Equals(object)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.GetHashCode()
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Start()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "void GpioChangeReader.Start()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Stop()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "void GpioChangeReader.Stop()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Clear()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "void GpioChangeReader.Clear()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.GpioChangeRecord GetNextItem()
		{
			throw new global::System.NotImplementedException("The member GpioChangeRecord GpioChangeReader.GetNextItem() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GpioChangeRecord%20GpioChangeReader.GetNextItem%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.GpioChangeRecord PeekNextItem()
		{
			throw new global::System.NotImplementedException("The member GpioChangeRecord GpioChangeReader.PeekNextItem() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GpioChangeRecord%20GpioChangeReader.PeekNextItem%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Devices.Gpio.GpioChangeRecord> GetAllItems()
		{
			throw new global::System.NotImplementedException("The member IList<GpioChangeRecord> GpioChangeReader.GetAllItems() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CGpioChangeRecord%3E%20GpioChangeReader.GetAllItems%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction WaitForItemsAsync(int count)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction GpioChangeReader.WaitForItemsAsync(int count) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20GpioChangeReader.WaitForItemsAsync%28int%20count%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeReader", "void GpioChangeReader.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.Capacity.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.IsEmpty.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.IsOverflowed.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.IsStarted.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.Length.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.Polarity.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.Polarity.set
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeReader.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
