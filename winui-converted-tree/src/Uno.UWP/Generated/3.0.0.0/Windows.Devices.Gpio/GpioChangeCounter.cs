// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Gpio
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GpioChangeCounter : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsStarted
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GpioChangeCounter.IsStarted is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GpioChangeCounter.IsStarted");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.GpioChangePolarity Polarity
		{
			get
			{
				throw new global::System.NotImplementedException("The member GpioChangePolarity GpioChangeCounter.Polarity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GpioChangePolarity%20GpioChangeCounter.Polarity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeCounter", "GpioChangePolarity GpioChangeCounter.Polarity");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public GpioChangeCounter(global::Windows.Devices.Gpio.GpioPin pin)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeCounter", "GpioChangeCounter.GpioChangeCounter(GpioPin pin)");
		}
#endif
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.GpioChangeCounter(Windows.Devices.Gpio.GpioPin)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.FromAbi(nint)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.operator ==(Windows.Devices.Gpio.GpioChangeCounter, Windows.Devices.Gpio.GpioChangeCounter)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.operator !=(Windows.Devices.Gpio.GpioChangeCounter, Windows.Devices.Gpio.GpioChangeCounter)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.Equals(Windows.Devices.Gpio.GpioChangeCounter)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.Equals(object)
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.GetHashCode()
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Start()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeCounter", "void GpioChangeCounter.Start()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Stop()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeCounter", "void GpioChangeCounter.Stop()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.GpioChangeCount Read()
		{
			throw new global::System.NotImplementedException("The member GpioChangeCount GpioChangeCounter.Read() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GpioChangeCount%20GpioChangeCounter.Read%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Gpio.GpioChangeCount Reset()
		{
			throw new global::System.NotImplementedException("The member GpioChangeCount GpioChangeCounter.Reset() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GpioChangeCount%20GpioChangeCounter.Reset%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Gpio.GpioChangeCounter", "void GpioChangeCounter.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.IsStarted.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.Polarity.get
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.Polarity.set
		// Forced skipping of method Windows.Devices.Gpio.GpioChangeCounter.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
