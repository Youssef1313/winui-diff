// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Web.Http.Headers
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class HttpContentHeaderCollection : global::System.Collections.Generic.IDictionary<string, string>, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.IEnumerable, global::Windows.Foundation.IStringable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.ICollection<string> Keys
		{
			get
			{
				throw new global::System.NotImplementedException("The member ICollection<string> HttpContentHeaderCollection.Keys is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ICollection%3Cstring%3E%20HttpContentHeaderCollection.Keys");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.ICollection<string> Values
		{
			get
			{
				throw new global::System.NotImplementedException("The member ICollection<string> HttpContentHeaderCollection.Values is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ICollection%3Cstring%3E%20HttpContentHeaderCollection.Values");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int Count
		{
			get
			{
				throw new global::System.NotImplementedException("The member int HttpContentHeaderCollection.Count is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20HttpContentHeaderCollection.Count");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsReadOnly
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool HttpContentHeaderCollection.IsReadOnly is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpContentHeaderCollection.IsReadOnly");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string this[string key]
		{
			get
			{
				throw new global::System.NotImplementedException("The member string HttpContentHeaderCollection.this[string key] is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20HttpContentHeaderCollection.this%5Bstring%20key%5D");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "string HttpContentHeaderCollection.this[string key]");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpContentDispositionHeaderValue ContentDisposition
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpContentDispositionHeaderValue HttpContentHeaderCollection.ContentDisposition is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpContentDispositionHeaderValue%20HttpContentHeaderCollection.ContentDisposition");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "HttpContentDispositionHeaderValue HttpContentHeaderCollection.ContentDisposition");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection ContentEncoding
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpContentCodingHeaderValueCollection HttpContentHeaderCollection.ContentEncoding is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpContentCodingHeaderValueCollection%20HttpContentHeaderCollection.ContentEncoding");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection ContentLanguage
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpLanguageHeaderValueCollection HttpContentHeaderCollection.ContentLanguage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpLanguageHeaderValueCollection%20HttpContentHeaderCollection.ContentLanguage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ulong? ContentLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member ulong? HttpContentHeaderCollection.ContentLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ulong%3F%20HttpContentHeaderCollection.ContentLength");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "ulong? HttpContentHeaderCollection.ContentLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri ContentLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri HttpContentHeaderCollection.ContentLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20HttpContentHeaderCollection.ContentLocation");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "Uri HttpContentHeaderCollection.ContentLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer ContentMD5
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer HttpContentHeaderCollection.ContentMD5 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20HttpContentHeaderCollection.ContentMD5");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "IBuffer HttpContentHeaderCollection.ContentMD5");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpContentRangeHeaderValue ContentRange
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpContentRangeHeaderValue HttpContentHeaderCollection.ContentRange is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpContentRangeHeaderValue%20HttpContentHeaderCollection.ContentRange");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "HttpContentRangeHeaderValue HttpContentHeaderCollection.ContentRange");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpMediaTypeHeaderValue ContentType
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpMediaTypeHeaderValue HttpContentHeaderCollection.ContentType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpMediaTypeHeaderValue%20HttpContentHeaderCollection.ContentType");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "HttpMediaTypeHeaderValue HttpContentHeaderCollection.ContentType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? Expires
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpContentHeaderCollection.Expires is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpContentHeaderCollection.Expires");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "DateTimeOffset? HttpContentHeaderCollection.Expires");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? LastModified
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? HttpContentHeaderCollection.LastModified is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20HttpContentHeaderCollection.LastModified");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "DateTimeOffset? HttpContentHeaderCollection.LastModified");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public HttpContentHeaderCollection()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "HttpContentHeaderCollection.HttpContentHeaderCollection()");
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.HttpContentHeaderCollection()
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.FromAbi(nint)
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.operator ==(Windows.Web.Http.Headers.HttpContentHeaderCollection, Windows.Web.Http.Headers.HttpContentHeaderCollection)
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.operator !=(Windows.Web.Http.Headers.HttpContentHeaderCollection, Windows.Web.Http.Headers.HttpContentHeaderCollection)
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Equals(Windows.Web.Http.Headers.HttpContentHeaderCollection)
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Equals(object)
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.GetHashCode()
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Append(string name, string value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "void HttpContentHeaderCollection.Append(string name, string value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TryAppendWithoutValidation(string name, string value)
		{
			throw new global::System.NotImplementedException("The member bool HttpContentHeaderCollection.TryAppendWithoutValidation(string name, string value) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpContentHeaderCollection.TryAppendWithoutValidation%28string%20name%2C%20string%20value%29");
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Keys.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Values.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Count.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.IsReadOnly.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.this[string].get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.this[string].set
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Add(string key, string value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "void HttpContentHeaderCollection.Add(string key, string value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ContainsKey(string key)
		{
			throw new global::System.NotImplementedException("The member bool HttpContentHeaderCollection.ContainsKey(string key) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpContentHeaderCollection.ContainsKey%28string%20key%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Remove(string key)
		{
			throw new global::System.NotImplementedException("The member bool HttpContentHeaderCollection.Remove(string key) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpContentHeaderCollection.Remove%28string%20key%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TryGetValue(string key, out string value)
		{
			throw new global::System.NotImplementedException("The member bool HttpContentHeaderCollection.TryGetValue(string key, out string value) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpContentHeaderCollection.TryGetValue%28string%20key%2C%20out%20string%20value%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "void HttpContentHeaderCollection.Add(KeyValuePair<string, string> item)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Clear()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "void HttpContentHeaderCollection.Clear()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			throw new global::System.NotImplementedException("The member bool HttpContentHeaderCollection.Contains(KeyValuePair<string, string> item) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpContentHeaderCollection.Contains%28KeyValuePair%3Cstring%2C%20string%3E%20item%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void CopyTo(global::System.Collections.Generic.KeyValuePair<string, string>[] array, int arrayIndex)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpContentHeaderCollection", "void HttpContentHeaderCollection.CopyTo(KeyValuePair<string, string>[] array, int arrayIndex)");
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>.Remove(System.Collections.Generic.KeyValuePair<string, string>)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> GetEnumerator()
		{
			throw new global::System.NotImplementedException("The member IEnumerator<KeyValuePair<string, string>> HttpContentHeaderCollection.GetEnumerator() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IEnumerator%3CKeyValuePair%3Cstring%2C%20string%3E%3E%20HttpContentHeaderCollection.GetEnumerator%28%29");
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.System.Collections.IEnumerable.GetEnumerator()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public override string ToString()
		{
			throw new global::System.NotImplementedException("The member string HttpContentHeaderCollection.ToString() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20HttpContentHeaderCollection.ToString%28%29");
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Windows.Foundation.IStringable.ToString()
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentDisposition.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentDisposition.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentEncoding.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentLanguage.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentLength.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentLength.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentLocation.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentLocation.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentMD5.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentMD5.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentRange.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentRange.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentType.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.ContentType.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Expires.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.Expires.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.LastModified.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.LastModified.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpContentHeaderCollection.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.Collections.Generic.IDictionary<string, string>
		// Processing: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			throw new global::System.NotSupportedException();
		}
#endif
		// Processing: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
		// Processing: System.Collections.IEnumerable
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		// DeclaringType: System.Collections.IEnumerable
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		 global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			throw new global::System.NotSupportedException();
		}
#endif
	}
}
