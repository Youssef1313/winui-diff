// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Miracast
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MiracastReceiverConnection : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal MiracastReceiverConnection()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Miracast.MiracastReceiverCursorImageChannel CursorImageChannel
		{
			get
			{
				throw new global::System.NotImplementedException("The member MiracastReceiverCursorImageChannel MiracastReceiverConnection.CursorImageChannel is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MiracastReceiverCursorImageChannel%20MiracastReceiverConnection.CursorImageChannel");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Miracast.MiracastReceiverInputDevices InputDevices
		{
			get
			{
				throw new global::System.NotImplementedException("The member MiracastReceiverInputDevices MiracastReceiverConnection.InputDevices is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MiracastReceiverInputDevices%20MiracastReceiverConnection.InputDevices");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Miracast.MiracastReceiverStreamControl StreamControl
		{
			get
			{
				throw new global::System.NotImplementedException("The member MiracastReceiverStreamControl MiracastReceiverConnection.StreamControl is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MiracastReceiverStreamControl%20MiracastReceiverConnection.StreamControl");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Miracast.MiracastTransmitter Transmitter
		{
			get
			{
				throw new global::System.NotImplementedException("The member MiracastTransmitter MiracastReceiverConnection.Transmitter is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MiracastTransmitter%20MiracastReceiverConnection.Transmitter");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.FromAbi(nint)
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.operator ==(Windows.Media.Miracast.MiracastReceiverConnection, Windows.Media.Miracast.MiracastReceiverConnection)
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.operator !=(Windows.Media.Miracast.MiracastReceiverConnection, Windows.Media.Miracast.MiracastReceiverConnection)
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.Equals(Windows.Media.Miracast.MiracastReceiverConnection)
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.Equals(object)
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.GetHashCode()
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Disconnect(global::Windows.Media.Miracast.MiracastReceiverDisconnectReason reason)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Miracast.MiracastReceiverConnection", "void MiracastReceiverConnection.Disconnect(MiracastReceiverDisconnectReason reason)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Disconnect(global::Windows.Media.Miracast.MiracastReceiverDisconnectReason reason, string message)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Miracast.MiracastReceiverConnection", "void MiracastReceiverConnection.Disconnect(MiracastReceiverDisconnectReason reason, string message)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Pause()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Miracast.MiracastReceiverConnection", "void MiracastReceiverConnection.Pause()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction PauseAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction MiracastReceiverConnection.PauseAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20MiracastReceiverConnection.PauseAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Resume()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Miracast.MiracastReceiverConnection", "void MiracastReceiverConnection.Resume()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction ResumeAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction MiracastReceiverConnection.ResumeAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20MiracastReceiverConnection.ResumeAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Miracast.MiracastReceiverConnection", "void MiracastReceiverConnection.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.CursorImageChannel.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.InputDevices.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.StreamControl.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.Transmitter.get
		// Forced skipping of method Windows.Media.Miracast.MiracastReceiverConnection.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
