// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Maps.Guidance
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GuidanceUpdatedEventArgs
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GuidanceUpdatedEventArgs()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceManeuver AfterNextManeuver
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceManeuver GuidanceUpdatedEventArgs.AfterNextManeuver is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceManeuver%20GuidanceUpdatedEventArgs.AfterNextManeuver");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int AfterNextManeuverDistance
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceUpdatedEventArgs.AfterNextManeuverDistance is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceUpdatedEventArgs.AfterNextManeuverDistance");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceMapMatchedCoordinate CurrentLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceMapMatchedCoordinate GuidanceUpdatedEventArgs.CurrentLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceMapMatchedCoordinate%20GuidanceUpdatedEventArgs.CurrentLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int DistanceToDestination
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceUpdatedEventArgs.DistanceToDestination is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceUpdatedEventArgs.DistanceToDestination");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int ElapsedDistance
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceUpdatedEventArgs.ElapsedDistance is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceUpdatedEventArgs.ElapsedDistance");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan ElapsedTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan GuidanceUpdatedEventArgs.ElapsedTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20GuidanceUpdatedEventArgs.ElapsedTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsNewManeuver
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GuidanceUpdatedEventArgs.IsNewManeuver is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GuidanceUpdatedEventArgs.IsNewManeuver");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Services.Maps.Guidance.GuidanceLaneInfo> LaneInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<GuidanceLaneInfo> GuidanceUpdatedEventArgs.LaneInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CGuidanceLaneInfo%3E%20GuidanceUpdatedEventArgs.LaneInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceMode Mode
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceMode GuidanceUpdatedEventArgs.Mode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceMode%20GuidanceUpdatedEventArgs.Mode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceManeuver NextManeuver
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceManeuver GuidanceUpdatedEventArgs.NextManeuver is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceManeuver%20GuidanceUpdatedEventArgs.NextManeuver");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int NextManeuverDistance
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceUpdatedEventArgs.NextManeuverDistance is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceUpdatedEventArgs.NextManeuverDistance");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string RoadName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GuidanceUpdatedEventArgs.RoadName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GuidanceUpdatedEventArgs.RoadName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceRoute Route
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceRoute GuidanceUpdatedEventArgs.Route is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceRoute%20GuidanceUpdatedEventArgs.Route");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan TimeToDestination
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan GuidanceUpdatedEventArgs.TimeToDestination is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20GuidanceUpdatedEventArgs.TimeToDestination");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.FromAbi(nint)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.operator ==(Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs, Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.operator !=(Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs, Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.Equals(Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.Equals(object)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.GetHashCode()
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.AfterNextManeuver.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.AfterNextManeuverDistance.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.CurrentLocation.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.DistanceToDestination.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.ElapsedDistance.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.ElapsedTime.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.IsNewManeuver.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.LaneInfo.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.Mode.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.NextManeuver.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.NextManeuverDistance.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.RoadName.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.Route.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.TimeToDestination.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
