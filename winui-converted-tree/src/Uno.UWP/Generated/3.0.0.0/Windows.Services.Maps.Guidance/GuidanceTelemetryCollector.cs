// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Maps.Guidance
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GuidanceTelemetryCollector
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GuidanceTelemetryCollector()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Enabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool GuidanceTelemetryCollector.Enabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GuidanceTelemetryCollector.Enabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.Maps.Guidance.GuidanceTelemetryCollector", "bool GuidanceTelemetryCollector.Enabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double SpeedTrigger
		{
			get
			{
				throw new global::System.NotImplementedException("The member double GuidanceTelemetryCollector.SpeedTrigger is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20GuidanceTelemetryCollector.SpeedTrigger");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.Maps.Guidance.GuidanceTelemetryCollector", "double GuidanceTelemetryCollector.SpeedTrigger");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int UploadFrequency
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceTelemetryCollector.UploadFrequency is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceTelemetryCollector.UploadFrequency");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.Maps.Guidance.GuidanceTelemetryCollector", "int GuidanceTelemetryCollector.UploadFrequency");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Services.Maps.Guidance.GuidanceTelemetryCollector GetCurrent()
		{
			throw new global::System.NotImplementedException("The member GuidanceTelemetryCollector GuidanceTelemetryCollector.GetCurrent() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceTelemetryCollector%20GuidanceTelemetryCollector.GetCurrent%28%29");
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.FromAbi(nint)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.operator ==(Windows.Services.Maps.Guidance.GuidanceTelemetryCollector, Windows.Services.Maps.Guidance.GuidanceTelemetryCollector)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.operator !=(Windows.Services.Maps.Guidance.GuidanceTelemetryCollector, Windows.Services.Maps.Guidance.GuidanceTelemetryCollector)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.Equals(Windows.Services.Maps.Guidance.GuidanceTelemetryCollector)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.Equals(object)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.GetHashCode()
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ClearLocalData()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Services.Maps.Guidance.GuidanceTelemetryCollector", "void GuidanceTelemetryCollector.ClearLocalData()");
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.Enabled.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.Enabled.set
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.SpeedTrigger.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.SpeedTrigger.set
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.UploadFrequency.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.UploadFrequency.set
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceTelemetryCollector.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
