// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Maps.Guidance
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GuidanceRoute
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GuidanceRoute()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Geolocation.GeoboundingBox BoundingBox
		{
			get
			{
				throw new global::System.NotImplementedException("The member GeoboundingBox GuidanceRoute.BoundingBox is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GeoboundingBox%20GuidanceRoute.BoundingBox");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int Distance
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceRoute.Distance is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceRoute.Distance");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan Duration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan GuidanceRoute.Duration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20GuidanceRoute.Duration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Services.Maps.Guidance.GuidanceManeuver> Maneuvers
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<GuidanceManeuver> GuidanceRoute.Maneuvers is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CGuidanceManeuver%3E%20GuidanceRoute.Maneuvers");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Geolocation.Geopath Path
		{
			get
			{
				throw new global::System.NotImplementedException("The member Geopath GuidanceRoute.Path is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Geopath%20GuidanceRoute.Path");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Services.Maps.Guidance.GuidanceRoadSegment> RoadSegments
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<GuidanceRoadSegment> GuidanceRoute.RoadSegments is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CGuidanceRoadSegment%3E%20GuidanceRoute.RoadSegments");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.As<I>()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool CanCreateFromMapRoute(global::Windows.Services.Maps.MapRoute mapRoute)
		{
			throw new global::System.NotImplementedException("The member bool GuidanceRoute.CanCreateFromMapRoute(MapRoute mapRoute) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GuidanceRoute.CanCreateFromMapRoute%28MapRoute%20mapRoute%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Services.Maps.Guidance.GuidanceRoute TryCreateFromMapRoute(global::Windows.Services.Maps.MapRoute mapRoute)
		{
			throw new global::System.NotImplementedException("The member GuidanceRoute GuidanceRoute.TryCreateFromMapRoute(MapRoute mapRoute) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceRoute%20GuidanceRoute.TryCreateFromMapRoute%28MapRoute%20mapRoute%29");
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.FromAbi(nint)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.operator ==(Windows.Services.Maps.Guidance.GuidanceRoute, Windows.Services.Maps.Guidance.GuidanceRoute)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.operator !=(Windows.Services.Maps.Guidance.GuidanceRoute, Windows.Services.Maps.Guidance.GuidanceRoute)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.Equals(Windows.Services.Maps.Guidance.GuidanceRoute)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.Equals(object)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.GetHashCode()
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.MapRoute ConvertToMapRoute()
		{
			throw new global::System.NotImplementedException("The member MapRoute GuidanceRoute.ConvertToMapRoute() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MapRoute%20GuidanceRoute.ConvertToMapRoute%28%29");
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.BoundingBox.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.Distance.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.Duration.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.Maneuvers.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.Path.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.RoadSegments.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceRoute.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
