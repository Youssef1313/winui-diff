// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Services.Maps.Guidance
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GuidanceManeuver
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal GuidanceManeuver()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DepartureRoadName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GuidanceManeuver.DepartureRoadName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GuidanceManeuver.DepartureRoadName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DepartureShortRoadName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GuidanceManeuver.DepartureShortRoadName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GuidanceManeuver.DepartureShortRoadName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int DistanceFromPreviousManeuver
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceManeuver.DistanceFromPreviousManeuver is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceManeuver.DistanceFromPreviousManeuver");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int DistanceFromRouteStart
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceManeuver.DistanceFromRouteStart is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceManeuver.DistanceFromRouteStart");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int EndAngle
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceManeuver.EndAngle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceManeuver.EndAngle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string InstructionText
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GuidanceManeuver.InstructionText is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GuidanceManeuver.InstructionText");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceManeuverKind Kind
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceManeuverKind GuidanceManeuver.Kind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceManeuverKind%20GuidanceManeuver.Kind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string NextRoadName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GuidanceManeuver.NextRoadName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GuidanceManeuver.NextRoadName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string NextShortRoadName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GuidanceManeuver.NextShortRoadName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GuidanceManeuver.NextShortRoadName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Services.Maps.Guidance.GuidanceRoadSignpost RoadSignpost
		{
			get
			{
				throw new global::System.NotImplementedException("The member GuidanceRoadSignpost GuidanceManeuver.RoadSignpost is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=GuidanceRoadSignpost%20GuidanceManeuver.RoadSignpost");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int StartAngle
		{
			get
			{
				throw new global::System.NotImplementedException("The member int GuidanceManeuver.StartAngle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20GuidanceManeuver.StartAngle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Geolocation.Geopoint StartLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member Geopoint GuidanceManeuver.StartLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Geopoint%20GuidanceManeuver.StartLocation");
			}
		}
#endif
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.FromAbi(nint)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.operator ==(Windows.Services.Maps.Guidance.GuidanceManeuver, Windows.Services.Maps.Guidance.GuidanceManeuver)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.operator !=(Windows.Services.Maps.Guidance.GuidanceManeuver, Windows.Services.Maps.Guidance.GuidanceManeuver)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.Equals(Windows.Services.Maps.Guidance.GuidanceManeuver)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.Equals(object)
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.GetHashCode()
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.DepartureRoadName.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.DepartureShortRoadName.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.DistanceFromPreviousManeuver.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.DistanceFromRouteStart.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.EndAngle.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.InstructionText.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.Kind.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.NextRoadName.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.NextShortRoadName.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.RoadSignpost.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.StartAngle.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.StartLocation.get
		// Forced skipping of method Windows.Services.Maps.Guidance.GuidanceManeuver.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
