// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Search.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SearchSuggestionManager
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SearchHistoryContext
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SearchSuggestionManager.SearchHistoryContext is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SearchSuggestionManager.SearchHistoryContext");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "string SearchSuggestionManager.SearchHistoryContext");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool SearchHistoryEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool SearchSuggestionManager.SearchHistoryEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20SearchSuggestionManager.SearchHistoryEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "bool SearchSuggestionManager.SearchHistoryEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.IObservableVector<global::Windows.ApplicationModel.Search.Core.SearchSuggestion> Suggestions
		{
			get
			{
				throw new global::System.NotImplementedException("The member IObservableVector<SearchSuggestion> SearchSuggestionManager.Suggestions is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IObservableVector%3CSearchSuggestion%3E%20SearchSuggestionManager.Suggestions");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SearchSuggestionManager()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "SearchSuggestionManager.SearchSuggestionManager()");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SearchSuggestionManager()
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.operator ==(Windows.ApplicationModel.Search.Core.SearchSuggestionManager, Windows.ApplicationModel.Search.Core.SearchSuggestionManager)
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.operator !=(Windows.ApplicationModel.Search.Core.SearchSuggestionManager, Windows.ApplicationModel.Search.Core.SearchSuggestionManager)
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.Equals(Windows.ApplicationModel.Search.Core.SearchSuggestionManager)
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetLocalContentSuggestionSettings(global::Windows.ApplicationModel.Search.LocalContentSuggestionSettings settings)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.SetLocalContentSuggestionSettings(LocalContentSuggestionSettings settings)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetQuery(string queryText)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.SetQuery(string queryText)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetQuery(string queryText, string language)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.SetQuery(string queryText, string language)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetQuery(string queryText, string language, global::Windows.ApplicationModel.Search.SearchQueryLinguisticDetails linguisticDetails)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.SetQuery(string queryText, string language, SearchQueryLinguisticDetails linguisticDetails)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void AddToHistory(string queryText)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.AddToHistory(string queryText)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void AddToHistory(string queryText, string language)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.AddToHistory(string queryText, string language)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void ClearHistory()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "void SearchSuggestionManager.ClearHistory()");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.RequestingFocusOnKeyboardInput.add
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.RequestingFocusOnKeyboardInput.remove
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SuggestionsRequested.add
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SuggestionsRequested.remove
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SearchHistoryContext.get
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SearchHistoryContext.set
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SearchHistoryEnabled.get
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.SearchHistoryEnabled.set
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.Suggestions.get
		// Forced skipping of method Windows.ApplicationModel.Search.Core.SearchSuggestionManager.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.Core.SearchSuggestionManager, global::Windows.ApplicationModel.Search.Core.RequestingFocusOnKeyboardInputEventArgs> RequestingFocusOnKeyboardInput
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "event TypedEventHandler<SearchSuggestionManager, RequestingFocusOnKeyboardInputEventArgs> SearchSuggestionManager.RequestingFocusOnKeyboardInput");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "event TypedEventHandler<SearchSuggestionManager, RequestingFocusOnKeyboardInputEventArgs> SearchSuggestionManager.RequestingFocusOnKeyboardInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Search.Core.SearchSuggestionManager, global::Windows.ApplicationModel.Search.Core.SearchSuggestionsRequestedEventArgs> SuggestionsRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "event TypedEventHandler<SearchSuggestionManager, SearchSuggestionsRequestedEventArgs> SearchSuggestionManager.SuggestionsRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Search.Core.SearchSuggestionManager", "event TypedEventHandler<SearchSuggestionManager, SearchSuggestionsRequestedEventArgs> SearchSuggestionManager.SuggestionsRequested");
			}
		}
#endif
	}
}
