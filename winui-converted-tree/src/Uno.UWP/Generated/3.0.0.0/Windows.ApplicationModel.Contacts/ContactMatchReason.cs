// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Contacts
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ContactMatchReason
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ContactMatchReason()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.Contacts.ContactMatchReasonKind Field
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContactMatchReasonKind ContactMatchReason.Field is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContactMatchReasonKind%20ContactMatchReason.Field");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Data.Text.TextSegment> Segments
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<TextSegment> ContactMatchReason.Segments is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CTextSegment%3E%20ContactMatchReason.Segments");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Text
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ContactMatchReason.Text is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ContactMatchReason.Text");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.operator ==(Windows.ApplicationModel.Contacts.ContactMatchReason, Windows.ApplicationModel.Contacts.ContactMatchReason)
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.operator !=(Windows.ApplicationModel.Contacts.ContactMatchReason, Windows.ApplicationModel.Contacts.ContactMatchReason)
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.Equals(Windows.ApplicationModel.Contacts.ContactMatchReason)
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.Field.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.Segments.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.Text.get
		// Forced skipping of method Windows.ApplicationModel.Contacts.ContactMatchReason.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
