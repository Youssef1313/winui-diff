// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class FaceDetectionEffect : global::Windows.Media.IMediaExtension
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal FaceDetectionEffect()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan DesiredDetectionInterval
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan FaceDetectionEffect.DesiredDetectionInterval is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20FaceDetectionEffect.DesiredDetectionInterval");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.FaceDetectionEffect", "TimeSpan FaceDetectionEffect.DesiredDetectionInterval");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Enabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool FaceDetectionEffect.Enabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20FaceDetectionEffect.Enabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.FaceDetectionEffect", "bool FaceDetectionEffect.Enabled");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.FromAbi(nint)
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.operator ==(Windows.Media.Core.FaceDetectionEffect, Windows.Media.Core.FaceDetectionEffect)
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.operator !=(Windows.Media.Core.FaceDetectionEffect, Windows.Media.Core.FaceDetectionEffect)
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.Equals(Windows.Media.Core.FaceDetectionEffect)
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.Equals(object)
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.GetHashCode()
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.FaceDetected.add
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.FaceDetected.remove
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetProperties(global::Windows.Foundation.Collections.IPropertySet configuration)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.FaceDetectionEffect", "void FaceDetectionEffect.SetProperties(IPropertySet configuration)");
		}
#endif
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.Windows.Media.IMediaExtension.SetProperties(Windows.Foundation.Collections.IPropertySet)
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.DesiredDetectionInterval.get
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.DesiredDetectionInterval.set
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.Enabled.get
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.Enabled.set
		// Forced skipping of method Windows.Media.Core.FaceDetectionEffect.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.Media.Core.FaceDetectionEffect, global::Windows.Media.Core.FaceDetectedEventArgs> FaceDetected
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.FaceDetectionEffect", "event TypedEventHandler<FaceDetectionEffect, FaceDetectedEventArgs> FaceDetectionEffect.FaceDetected");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.FaceDetectionEffect", "event TypedEventHandler<FaceDetectionEffect, FaceDetectedEventArgs> FaceDetectionEffect.FaceDetected");
			}
		}
#endif
		// Processing: Windows.Media.IMediaExtension
	}
}
