// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LowLightFusionResult : global::System.IDisposable
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal LowLightFusionResult()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.Imaging.SoftwareBitmap Frame
		{
			get
			{
				throw new global::System.NotImplementedException("The member SoftwareBitmap LowLightFusionResult.Frame is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SoftwareBitmap%20LowLightFusionResult.Frame");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.FromAbi(nint)
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.operator ==(Windows.Media.Core.LowLightFusionResult, Windows.Media.Core.LowLightFusionResult)
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.operator !=(Windows.Media.Core.LowLightFusionResult, Windows.Media.Core.LowLightFusionResult)
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.Equals(Windows.Media.Core.LowLightFusionResult)
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.Equals(object)
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.GetHashCode()
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.WinRT.IWinRTObject.AdditionalTypeData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.LowLightFusionResult", "void LowLightFusionResult.Dispose()");
		}
#endif
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.Frame.get
		// Forced skipping of method Windows.Media.Core.LowLightFusionResult.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: System.IDisposable
	}
}
