// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class SpeechCue : global::Windows.Media.Core.IMediaCue
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.TimeSpan global::Windows.Media.Core.IMediaCue.Duration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan SpeechCue.Duration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20SpeechCue.Duration");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "TimeSpan SpeechCue.Duration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		string global::Windows.Media.Core.IMediaCue.Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SpeechCue.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SpeechCue.Id");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "string SpeechCue.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		global::System.TimeSpan global::Windows.Media.Core.IMediaCue.StartTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan SpeechCue.StartTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20SpeechCue.StartTime");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "TimeSpan SpeechCue.StartTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan Duration
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan SpeechCue.Duration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20SpeechCue.Duration");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "TimeSpan SpeechCue.Duration");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? EndPositionInInput
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? SpeechCue.EndPositionInInput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20SpeechCue.EndPositionInInput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "int? SpeechCue.EndPositionInInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SpeechCue.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SpeechCue.Id");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "string SpeechCue.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? StartPositionInInput
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? SpeechCue.StartPositionInInput is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20SpeechCue.StartPositionInInput");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "int? SpeechCue.StartPositionInInput");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan StartTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan SpeechCue.StartTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20SpeechCue.StartTime");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "TimeSpan SpeechCue.StartTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Text
		{
			get
			{
				throw new global::System.NotImplementedException("The member string SpeechCue.Text is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20SpeechCue.Text");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "string SpeechCue.Text");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public SpeechCue()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Core.SpeechCue", "SpeechCue.SpeechCue()");
		}
#endif
		// Forced skipping of method Windows.Media.Core.SpeechCue.SpeechCue()
		// Forced skipping of method Windows.Media.Core.SpeechCue.FromAbi(nint)
		// Forced skipping of method Windows.Media.Core.SpeechCue.operator ==(Windows.Media.Core.SpeechCue, Windows.Media.Core.SpeechCue)
		// Forced skipping of method Windows.Media.Core.SpeechCue.operator !=(Windows.Media.Core.SpeechCue, Windows.Media.Core.SpeechCue)
		// Forced skipping of method Windows.Media.Core.SpeechCue.Equals(Windows.Media.Core.SpeechCue)
		// Forced skipping of method Windows.Media.Core.SpeechCue.Equals(object)
		// Forced skipping of method Windows.Media.Core.SpeechCue.GetHashCode()
		// Forced skipping of method Windows.Media.Core.SpeechCue.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Windows.Media.Core.IMediaCue.Duration.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Windows.Media.Core.IMediaCue.Duration.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.Windows.Media.Core.IMediaCue.Id.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Windows.Media.Core.IMediaCue.Id.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.Windows.Media.Core.IMediaCue.StartTime.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Windows.Media.Core.IMediaCue.StartTime.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.Duration.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Duration.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.EndPositionInInput.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.EndPositionInInput.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.Id.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Id.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.StartPositionInInput.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.StartPositionInInput.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.StartTime.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.StartTime.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.Text.get
		// Forced skipping of method Windows.Media.Core.SpeechCue.Text.set
		// Forced skipping of method Windows.Media.Core.SpeechCue.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
		// Processing: Windows.Media.Core.IMediaCue
	}
}
