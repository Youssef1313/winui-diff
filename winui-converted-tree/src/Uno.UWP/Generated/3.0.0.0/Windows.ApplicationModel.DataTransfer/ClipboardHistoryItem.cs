// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.DataTransfer
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ClipboardHistoryItem
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal ClipboardHistoryItem()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.DataTransfer.DataPackageView Content
		{
			get
			{
				throw new global::System.NotImplementedException("The member DataPackageView ClipboardHistoryItem.Content is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DataPackageView%20ClipboardHistoryItem.Content");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ClipboardHistoryItem.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ClipboardHistoryItem.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset Timestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset ClipboardHistoryItem.Timestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20ClipboardHistoryItem.Timestamp");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.FromAbi(nint)
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.operator ==(Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem, Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem)
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.operator !=(Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem, Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem)
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.Equals(Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem)
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.Equals(object)
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.GetHashCode()
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.WinRT.IWinRTObject.HasUnwrappableNativeObject.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.WinRT.IWinRTObject.NativeObject.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.WinRT.IWinRTObject.QueryInterfaceCache.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.WinRT.IWinRTObject.AdditionalTypeData.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.Content.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.Id.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.Timestamp.get
		// Forced skipping of method Windows.ApplicationModel.DataTransfer.ClipboardHistoryItem.System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref System.Guid, out nint)
	}
}
